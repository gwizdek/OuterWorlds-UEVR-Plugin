#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OCL_Interactable

#include "Basic.hpp"


namespace SDK::Params
{

// Function OCL_Interactable.OCL_Interactable_C.IsLocked
// 0x0001 (0x0001 - 0x0000)
struct OCL_Interactable_C_IsLocked final
{
public:
	bool                                          IsLocked_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_IsLocked) == 0x000001, "Wrong alignment on OCL_Interactable_C_IsLocked");
static_assert(sizeof(OCL_Interactable_C_IsLocked) == 0x000001, "Wrong size on OCL_Interactable_C_IsLocked");
static_assert(offsetof(OCL_Interactable_C_IsLocked, IsLocked_0) == 0x000000, "Member 'OCL_Interactable_C_IsLocked::IsLocked_0' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.IsOpen
// 0x0002 (0x0002 - 0x0000)
struct OCL_Interactable_C_IsOpen final
{
public:
	bool                                          IsOpen_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpening;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_IsOpen) == 0x000001, "Wrong alignment on OCL_Interactable_C_IsOpen");
static_assert(sizeof(OCL_Interactable_C_IsOpen) == 0x000002, "Wrong size on OCL_Interactable_C_IsOpen");
static_assert(offsetof(OCL_Interactable_C_IsOpen, IsOpen_0) == 0x000000, "Member 'OCL_Interactable_C_IsOpen::IsOpen_0' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_IsOpen, IsOpening) == 0x000001, "Member 'OCL_Interactable_C_IsOpen::IsOpening' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.SetIsLocked
// 0x0002 (0x0002 - 0x0000)
struct OCL_Interactable_C_SetIsLocked final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLockedOut;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_SetIsLocked) == 0x000001, "Wrong alignment on OCL_Interactable_C_SetIsLocked");
static_assert(sizeof(OCL_Interactable_C_SetIsLocked) == 0x000002, "Wrong size on OCL_Interactable_C_SetIsLocked");
static_assert(offsetof(OCL_Interactable_C_SetIsLocked, IsLocked) == 0x000000, "Member 'OCL_Interactable_C_SetIsLocked::IsLocked' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_SetIsLocked, IsLockedOut) == 0x000001, "Member 'OCL_Interactable_C_SetIsLocked::IsLockedOut' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.IsBarred
// 0x0001 (0x0001 - 0x0000)
struct OCL_Interactable_C_IsBarred final
{
public:
	bool                                          IsBarred_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_IsBarred) == 0x000001, "Wrong alignment on OCL_Interactable_C_IsBarred");
static_assert(sizeof(OCL_Interactable_C_IsBarred) == 0x000001, "Wrong size on OCL_Interactable_C_IsBarred");
static_assert(offsetof(OCL_Interactable_C_IsBarred, IsBarred_0) == 0x000000, "Member 'OCL_Interactable_C_IsBarred::IsBarred_0' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.IsClosed
// 0x0001 (0x0001 - 0x0000)
struct OCL_Interactable_C_IsClosed final
{
public:
	bool                                          IsClosed_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_IsClosed) == 0x000001, "Wrong alignment on OCL_Interactable_C_IsClosed");
static_assert(sizeof(OCL_Interactable_C_IsClosed) == 0x000001, "Wrong size on OCL_Interactable_C_IsClosed");
static_assert(offsetof(OCL_Interactable_C_IsClosed, IsClosed_0) == 0x000000, "Member 'OCL_Interactable_C_IsClosed::IsClosed_0' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.IsSealed
// 0x0001 (0x0001 - 0x0000)
struct OCL_Interactable_C_IsSealed final
{
public:
	bool                                          IsSealed_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_IsSealed) == 0x000001, "Wrong alignment on OCL_Interactable_C_IsSealed");
static_assert(sizeof(OCL_Interactable_C_IsSealed) == 0x000001, "Wrong size on OCL_Interactable_C_IsSealed");
static_assert(offsetof(OCL_Interactable_C_IsSealed, IsSealed_0) == 0x000000, "Member 'OCL_Interactable_C_IsSealed::IsSealed_0' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.OnAnimateOpen
// 0x0001 (0x0001 - 0x0000)
struct OCL_Interactable_C_OnAnimateOpen final
{
public:
	bool                                          InstantAnimation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_OnAnimateOpen) == 0x000001, "Wrong alignment on OCL_Interactable_C_OnAnimateOpen");
static_assert(sizeof(OCL_Interactable_C_OnAnimateOpen) == 0x000001, "Wrong size on OCL_Interactable_C_OnAnimateOpen");
static_assert(offsetof(OCL_Interactable_C_OnAnimateOpen, InstantAnimation) == 0x000000, "Member 'OCL_Interactable_C_OnAnimateOpen::InstantAnimation' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.OnAnimateClose
// 0x0002 (0x0002 - 0x0000)
struct OCL_Interactable_C_OnAnimateClose final
{
public:
	bool                                          IgnoreSound;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_OnAnimateClose) == 0x000001, "Wrong alignment on OCL_Interactable_C_OnAnimateClose");
static_assert(sizeof(OCL_Interactable_C_OnAnimateClose) == 0x000002, "Wrong size on OCL_Interactable_C_OnAnimateClose");
static_assert(offsetof(OCL_Interactable_C_OnAnimateClose, IgnoreSound) == 0x000000, "Member 'OCL_Interactable_C_OnAnimateClose::IgnoreSound' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OnAnimateClose, InstantAnimation) == 0x000001, "Member 'OCL_Interactable_C_OnAnimateClose::InstantAnimation' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.ToggleOpenCloseState
// 0x0018 (0x0018 - 0x0000)
struct OCL_Interactable_C_ToggleOpenCloseState final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lock;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Seal;                                              // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreLockStatus;                                  // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreStartEvent;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEndEvent;                                    // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound;                                       // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpen;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpening;                                         // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsClosed;                                          // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsClosing;                                         // 0x0013(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_ToggleOpenCloseState) == 0x000008, "Wrong alignment on OCL_Interactable_C_ToggleOpenCloseState");
static_assert(sizeof(OCL_Interactable_C_ToggleOpenCloseState) == 0x000018, "Wrong size on OCL_Interactable_C_ToggleOpenCloseState");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, Initiator) == 0x000000, "Member 'OCL_Interactable_C_ToggleOpenCloseState::Initiator' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, Force) == 0x000008, "Member 'OCL_Interactable_C_ToggleOpenCloseState::Force' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, Lock) == 0x000009, "Member 'OCL_Interactable_C_ToggleOpenCloseState::Lock' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, Seal) == 0x00000A, "Member 'OCL_Interactable_C_ToggleOpenCloseState::Seal' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IgnoreLockStatus) == 0x00000B, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IgnoreLockStatus' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IgnoreStartEvent) == 0x00000C, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IgnoreEndEvent) == 0x00000D, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IgnoreSound) == 0x00000E, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IgnoreSound' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, InstantAnimation) == 0x00000F, "Member 'OCL_Interactable_C_ToggleOpenCloseState::InstantAnimation' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IsOpen) == 0x000010, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IsOpen' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IsOpening) == 0x000011, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IsOpening' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IsClosed) == 0x000012, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IsClosed' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_ToggleOpenCloseState, IsClosing) == 0x000013, "Member 'OCL_Interactable_C_ToggleOpenCloseState::IsClosing' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.OpenOCL
// 0x0010 (0x0010 - 0x0000)
struct OCL_Interactable_C_OpenOCL final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Seal;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreLockStatus;                                  // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreStartEvent;                                  // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEndEvent;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreAnimation;                                   // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_OpenOCL) == 0x000008, "Wrong alignment on OCL_Interactable_C_OpenOCL");
static_assert(sizeof(OCL_Interactable_C_OpenOCL) == 0x000010, "Wrong size on OCL_Interactable_C_OpenOCL");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, Initiator) == 0x000000, "Member 'OCL_Interactable_C_OpenOCL::Initiator' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, Force) == 0x000008, "Member 'OCL_Interactable_C_OpenOCL::Force' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, Seal) == 0x000009, "Member 'OCL_Interactable_C_OpenOCL::Seal' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, IgnoreLockStatus) == 0x00000A, "Member 'OCL_Interactable_C_OpenOCL::IgnoreLockStatus' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, IgnoreStartEvent) == 0x00000B, "Member 'OCL_Interactable_C_OpenOCL::IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, IgnoreEndEvent) == 0x00000C, "Member 'OCL_Interactable_C_OpenOCL::IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, IgnoreSound) == 0x00000D, "Member 'OCL_Interactable_C_OpenOCL::IgnoreSound' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_OpenOCL, IgnoreAnimation) == 0x00000E, "Member 'OCL_Interactable_C_OpenOCL::IgnoreAnimation' has a wrong offset!");

// Function OCL_Interactable.OCL_Interactable_C.CloseOCL
// 0x0010 (0x0010 - 0x0000)
struct OCL_Interactable_C_CloseOCL final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lock;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Seal;                                              // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreStartEvent;                                  // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEndEvent;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreAnimation;                                   // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OCL_Interactable_C_CloseOCL) == 0x000008, "Wrong alignment on OCL_Interactable_C_CloseOCL");
static_assert(sizeof(OCL_Interactable_C_CloseOCL) == 0x000010, "Wrong size on OCL_Interactable_C_CloseOCL");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, Initiator) == 0x000000, "Member 'OCL_Interactable_C_CloseOCL::Initiator' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, Force) == 0x000008, "Member 'OCL_Interactable_C_CloseOCL::Force' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, Lock) == 0x000009, "Member 'OCL_Interactable_C_CloseOCL::Lock' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, Seal) == 0x00000A, "Member 'OCL_Interactable_C_CloseOCL::Seal' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, IgnoreStartEvent) == 0x00000B, "Member 'OCL_Interactable_C_CloseOCL::IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, IgnoreEndEvent) == 0x00000C, "Member 'OCL_Interactable_C_CloseOCL::IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, IgnoreSound) == 0x00000D, "Member 'OCL_Interactable_C_CloseOCL::IgnoreSound' has a wrong offset!");
static_assert(offsetof(OCL_Interactable_C_CloseOCL, IgnoreAnimation) == 0x00000E, "Member 'OCL_Interactable_C_CloseOCL::IgnoreAnimation' has a wrong offset!");

}

