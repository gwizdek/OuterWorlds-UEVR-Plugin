#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bugs_Light

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MNPC_FlyingBugs_Enum_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_VFX_Trigger_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Bugs_Light.BP_Bugs_Light_C
// 0x0070 (0x0478 - 0x0408)
class ABP_Bugs_Light_C final : public ABP_VFX_Trigger_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Bugs_Light_C;                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EMNPC_FlyingBugs_Enum                         NiagaraUsage;                                      // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocalAlpha;                                        // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalSpawnRate;                                    // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalColorScale;                                   // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         ScalarParameters;                                  // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         VectorParameters;                                  // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         BoolParameters;                                    // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsExteriorLight;                                   // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFireflies;                                       // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugFireflies;                                    // 0x0452(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_453[0x5];                                      // 0x0453(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        PositionArray;                                     // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        VelocityArray;                                     // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Bugs_Light(int32 EntryPoint);
	void ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Bugs_Light_C">();
	}
	static class ABP_Bugs_Light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Bugs_Light_C>();
	}
};
static_assert(alignof(ABP_Bugs_Light_C) == 0x000008, "Wrong alignment on ABP_Bugs_Light_C");
static_assert(sizeof(ABP_Bugs_Light_C) == 0x000478, "Wrong size on ABP_Bugs_Light_C");
static_assert(offsetof(ABP_Bugs_Light_C, UberGraphFrame_BP_Bugs_Light_C) == 0x000408, "Member 'ABP_Bugs_Light_C::UberGraphFrame_BP_Bugs_Light_C' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, NiagaraUsage) == 0x000410, "Member 'ABP_Bugs_Light_C::NiagaraUsage' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, LocalAlpha) == 0x000414, "Member 'ABP_Bugs_Light_C::LocalAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, LocalSpawnRate) == 0x000418, "Member 'ABP_Bugs_Light_C::LocalSpawnRate' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, LocalColorScale) == 0x00041C, "Member 'ABP_Bugs_Light_C::LocalColorScale' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, ScalarParameters) == 0x000420, "Member 'ABP_Bugs_Light_C::ScalarParameters' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, VectorParameters) == 0x000430, "Member 'ABP_Bugs_Light_C::VectorParameters' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, BoolParameters) == 0x000440, "Member 'ABP_Bugs_Light_C::BoolParameters' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, IsExteriorLight) == 0x000450, "Member 'ABP_Bugs_Light_C::IsExteriorLight' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, IsFireflies) == 0x000451, "Member 'ABP_Bugs_Light_C::IsFireflies' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, DebugFireflies) == 0x000452, "Member 'ABP_Bugs_Light_C::DebugFireflies' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, PositionArray) == 0x000458, "Member 'ABP_Bugs_Light_C::PositionArray' has a wrong offset!");
static_assert(offsetof(ABP_Bugs_Light_C, VelocityArray) == 0x000468, "Member 'ABP_Bugs_Light_C::VelocityArray' has a wrong offset!");

}

