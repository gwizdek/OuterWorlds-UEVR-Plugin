#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBase_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Indiana_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function DoorBase_BP.DoorBase_BP_C.ExecuteUbergraph_DoorBase_BP
// 0x01C0 (0x01C0 - 0x0000)
struct DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Initiator, int32 StateIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_17;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_InFrontOfDoor;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IgnoreSound_3;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_InstantAnimation_3;     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_16;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IgnoreSound_2;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_InstantAnimation_2;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_15;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_LockpickSeconds;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_LockpickNumResources;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_14;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_13;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_12;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_11;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_IsOpen;                            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_IsOpening;                         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_10;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IgnoreSound_1;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_InstantAnimation_1;     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_9;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTravelTriggerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTravelDestinationData*           K2Node_CustomEvent_TravelDestinationData;          // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_8;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_7;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_6;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOCLState                                     CallFunc_GetCurrentState_ReturnValue;              // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_5;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Initiator;                      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_StateIndex;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_4;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_3;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IgnoreSound;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_InstantAnimation;       // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_IsOpen_1;                          // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_IsOpening_1;                       // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_2;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Initiator_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Force_1;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Seal_1;                               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreLockStatus;                     // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreStartEvent_1;                   // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreEndEvent_1;                     // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreSound_2;                        // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreAnimation_1;                    // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Initiator;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Force;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Lock;                                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Seal;                                 // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreStartEvent;                     // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreEndEvent;                       // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreSound_1;                        // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreAnimation;                      // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOCLResult                                    CallFunc_AttemptOpen_ReturnValue;                  // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator_1;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOCLResult                                    CallFunc_AttemptClose_ReturnValue;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UTravelDestinationData* TravelDestinationData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IgnoreSound;                          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InstantAnimation_1;                   // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_IsOpen_2;                          // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_IsOpening_2;                       // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAkAcousticPortal*                      K2Node_DynamicCast_AsAk_Acoustic_Portal;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAkAcousticPortalState                        CallFunc_GetCurrentState_ReturnValue_1;            // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InstantAnimation;                     // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASwitchBase_BP_C*                       K2Node_DynamicCast_AsSwitch_Base_BP;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_1;        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_2;        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_3;        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TriggersTravel_ReturnValue;               // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent2D_ReturnValue;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_4;        // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_5;        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Initiator;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP) == 0x000008, "Wrong alignment on DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP");
static_assert(sizeof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP) == 0x0001C0, "Wrong size on DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, EntryPoint) == 0x000000, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_3) == 0x000007, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_4) == 0x000008, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_5) == 0x000009, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_6) == 0x00001C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_17) == 0x000020, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_17' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_InFrontOfDoor) == 0x000028, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_InFrontOfDoor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_IgnoreSound_3) == 0x000029, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_IgnoreSound_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_InstantAnimation_3) == 0x00002A, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_InstantAnimation_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_16) == 0x000030, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_16' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_IgnoreSound_2) == 0x000038, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_IgnoreSound_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_InstantAnimation_2) == 0x000039, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_InstantAnimation_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_15) == 0x000040, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_15' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_LockpickSeconds) == 0x000048, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_LockpickSeconds' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_LockpickNumResources) == 0x00004C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_LockpickNumResources' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_14) == 0x000050, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_14' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_13) == 0x000058, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_13' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_12) == 0x000060, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_12' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_11) == 0x000068, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_11' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsOpen_IsOpen) == 0x000070, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsOpen_IsOpening) == 0x000071, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsOpen_IsOpening' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_10) == 0x000078, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_10' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_IgnoreSound_1) == 0x000080, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_IgnoreSound_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_InstantAnimation_1) == 0x000081, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_InstantAnimation_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_9) == 0x000088, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_9' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetComponentByClass_ReturnValue) == 0x000090, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_7) == 0x000098, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_CustomEvent_TravelDestinationData) == 0x0000A0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_CustomEvent_TravelDestinationData' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_8) == 0x0000A8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_8' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_7) == 0x0000B0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_7' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_6) == 0x0000B8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_6' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_8) == 0x0000C0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_9) == 0x0000C1, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_10) == 0x0000C2, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_11) == 0x0000C3, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_12) == 0x0000C4, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetCurrentState_ReturnValue) == 0x0000C5, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C6, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_5) == 0x0000C8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_5' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_CustomEvent_Initiator) == 0x0000D0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_CustomEvent_Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_CustomEvent_StateIndex) == 0x0000D8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_CustomEvent_StateIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Greater_IntInt_ReturnValue) == 0x0000DC, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_4) == 0x0000E0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_3) == 0x0000E8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_IgnoreSound) == 0x0000F0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_IgnoreSound' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_InstantAnimation) == 0x0000F1, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_InstantAnimation' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsOpen_IsOpen_1) == 0x0000F2, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsOpen_IsOpen_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsOpen_IsOpening_1) == 0x0000F3, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsOpen_IsOpening_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_2) == 0x0000F8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Initiator_1) == 0x000108, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Initiator_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Force_1) == 0x000110, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Force_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Seal_1) == 0x000111, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Seal_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreLockStatus) == 0x000112, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreLockStatus' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreStartEvent_1) == 0x000113, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreStartEvent_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreEndEvent_1) == 0x000114, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreEndEvent_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreSound_2) == 0x000115, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreSound_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreAnimation_1) == 0x000116, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreAnimation_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Initiator) == 0x000118, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Force) == 0x000120, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Lock) == 0x000121, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Lock' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_Seal) == 0x000122, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_Seal' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreStartEvent) == 0x000123, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreEndEvent) == 0x000124, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreSound_1) == 0x000125, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreSound_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreAnimation) == 0x000126, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreAnimation' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_AttemptOpen_ReturnValue) == 0x000127, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_AttemptOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator_1) == 0x000128, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_AttemptClose_ReturnValue) == 0x000130, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_AttemptClose_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000134, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_IgnoreSound) == 0x000144, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_IgnoreSound' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_InstantAnimation_1) == 0x000145, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_InstantAnimation_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsOpen_IsOpen_2) == 0x000146, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsOpen_IsOpen_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsOpen_IsOpening_2) == 0x000147, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsOpen_IsOpening_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_13) == 0x000148, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BooleanOR_ReturnValue_1) == 0x000149, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000150, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValid_ReturnValue_14) == 0x000158, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_AsAk_Acoustic_Portal) == 0x000160, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_AsAk_Acoustic_Portal' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetCurrentState_ReturnValue_1) == 0x000169, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetCurrentState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_SwitchEnum_CmpSuccess) == 0x00016A, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_SwitchEnum_CmpSuccess_1) == 0x00016B, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00016C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_InstantAnimation) == 0x00016D, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_InstantAnimation' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_AsSwitch_Base_BP) == 0x000170, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_AsSwitch_Base_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00017C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000188, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventAtLocation_ReturnValue) == 0x000194, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventAtLocation_ReturnValue_1) == 0x000198, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventAtLocation_ReturnValue_2) == 0x00019C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventAtLocation_ReturnValue_3) == 0x0001A0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_TriggersTravel_ReturnValue) == 0x0001A4, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_TriggersTravel_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEvent2D_ReturnValue) == 0x0001A8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventAtLocation_ReturnValue_4) == 0x0001AC, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventAtLocation_ReturnValue_5) == 0x0001B0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventAtLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_ComponentBoundEvent_Initiator) == 0x0001B8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_ComponentBoundEvent_Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_10_OCLLockpickLoopStop__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnAnimateOpen
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_OnAnimateOpen final
{
public:
	bool                                          InstantAnimation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_OnAnimateOpen) == 0x000001, "Wrong alignment on DoorBase_BP_C_OnAnimateOpen");
static_assert(sizeof(DoorBase_BP_C_OnAnimateOpen) == 0x000001, "Wrong size on DoorBase_BP_C_OnAnimateOpen");
static_assert(offsetof(DoorBase_BP_C_OnAnimateOpen, InstantAnimation) == 0x000000, "Member 'DoorBase_BP_C_OnAnimateOpen::InstantAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnAnimateClose
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_OnAnimateClose final
{
public:
	bool                                          IgnoreSound_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_OnAnimateClose) == 0x000001, "Wrong alignment on DoorBase_BP_C_OnAnimateClose");
static_assert(sizeof(DoorBase_BP_C_OnAnimateClose) == 0x000002, "Wrong size on DoorBase_BP_C_OnAnimateClose");
static_assert(offsetof(DoorBase_BP_C_OnAnimateClose, IgnoreSound_0) == 0x000000, "Member 'DoorBase_BP_C_OnAnimateClose::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnAnimateClose, InstantAnimation) == 0x000001, "Member 'DoorBase_BP_C_OnAnimateClose::InstantAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.CloseOCL
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_CloseOCL final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lock;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Seal;                                              // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreStartEvent;                                  // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEndEvent;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound_0;                                     // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreAnimation;                                   // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_CloseOCL) == 0x000008, "Wrong alignment on DoorBase_BP_C_CloseOCL");
static_assert(sizeof(DoorBase_BP_C_CloseOCL) == 0x000010, "Wrong size on DoorBase_BP_C_CloseOCL");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, Initiator) == 0x000000, "Member 'DoorBase_BP_C_CloseOCL::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, Force) == 0x000008, "Member 'DoorBase_BP_C_CloseOCL::Force' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, Lock) == 0x000009, "Member 'DoorBase_BP_C_CloseOCL::Lock' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, Seal) == 0x00000A, "Member 'DoorBase_BP_C_CloseOCL::Seal' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, IgnoreStartEvent) == 0x00000B, "Member 'DoorBase_BP_C_CloseOCL::IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, IgnoreEndEvent) == 0x00000C, "Member 'DoorBase_BP_C_CloseOCL::IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, IgnoreSound_0) == 0x00000D, "Member 'DoorBase_BP_C_CloseOCL::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CloseOCL, IgnoreAnimation) == 0x00000E, "Member 'DoorBase_BP_C_CloseOCL::IgnoreAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OpenOCL
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_OpenOCL final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Seal;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreLockStatus;                                  // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreStartEvent;                                  // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEndEvent;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound_0;                                     // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreAnimation;                                   // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_OpenOCL) == 0x000008, "Wrong alignment on DoorBase_BP_C_OpenOCL");
static_assert(sizeof(DoorBase_BP_C_OpenOCL) == 0x000010, "Wrong size on DoorBase_BP_C_OpenOCL");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, Initiator) == 0x000000, "Member 'DoorBase_BP_C_OpenOCL::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, Force) == 0x000008, "Member 'DoorBase_BP_C_OpenOCL::Force' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, Seal) == 0x000009, "Member 'DoorBase_BP_C_OpenOCL::Seal' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, IgnoreLockStatus) == 0x00000A, "Member 'DoorBase_BP_C_OpenOCL::IgnoreLockStatus' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, IgnoreStartEvent) == 0x00000B, "Member 'DoorBase_BP_C_OpenOCL::IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, IgnoreEndEvent) == 0x00000C, "Member 'DoorBase_BP_C_OpenOCL::IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, IgnoreSound_0) == 0x00000D, "Member 'DoorBase_BP_C_OpenOCL::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OpenOCL, IgnoreAnimation) == 0x00000E, "Member 'DoorBase_BP_C_OpenOCL::IgnoreAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSound_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature) == 0x000010, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature, IgnoreSound_0) == 0x000008, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature, InstantAnimation) == 0x000009, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLSealed__DelegateSignature::InstantAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLUnsealed__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnSwitchStateChanged_Event_0
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_OnSwitchStateChanged_Event_0 final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StateIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_OnSwitchStateChanged_Event_0) == 0x000008, "Wrong alignment on DoorBase_BP_C_OnSwitchStateChanged_Event_0");
static_assert(sizeof(DoorBase_BP_C_OnSwitchStateChanged_Event_0) == 0x000010, "Wrong size on DoorBase_BP_C_OnSwitchStateChanged_Event_0");
static_assert(offsetof(DoorBase_BP_C_OnSwitchStateChanged_Event_0, Initiator) == 0x000000, "Member 'DoorBase_BP_C_OnSwitchStateChanged_Event_0::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnSwitchStateChanged_Event_0, StateIndex) == 0x000008, "Member 'DoorBase_BP_C_OnSwitchStateChanged_Event_0::StateIndex' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnTravelInitiated_Event_0
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_OnTravelInitiated_Event_0 final
{
public:
	const class UTravelDestinationData*           TravelDestinationData;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_OnTravelInitiated_Event_0) == 0x000008, "Wrong alignment on DoorBase_BP_C_OnTravelInitiated_Event_0");
static_assert(sizeof(DoorBase_BP_C_OnTravelInitiated_Event_0) == 0x000008, "Wrong size on DoorBase_BP_C_OnTravelInitiated_Event_0");
static_assert(offsetof(DoorBase_BP_C_OnTravelInitiated_Event_0, TravelDestinationData) == 0x000000, "Member 'DoorBase_BP_C_OnTravelInitiated_Event_0::TravelDestinationData' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSound_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature) == 0x000010, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature, IgnoreSound_0) == 0x000008, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature, InstantAnimation) == 0x000009, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature::InstantAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature) == 0x000008, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature::Initiator' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LockpickSeconds;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LockpickNumResources;                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature) == 0x000010, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature, LockpickSeconds) == 0x000008, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature::LockpickSeconds' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature, LockpickNumResources) == 0x00000C, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature::LockpickNumResources' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSound_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature) == 0x000010, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature, IgnoreSound_0) == 0x000008, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature, InstantAnimation) == 0x000009, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature::InstantAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFrontOfDoor;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound_0;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature) == 0x000008, "Wrong alignment on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature");
static_assert(sizeof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature) == 0x000010, "Wrong size on DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature, Initiator) == 0x000000, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature, InFrontOfDoor) == 0x000008, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature::InFrontOfDoor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature, IgnoreSound_0) == 0x000009, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature, InstantAnimation) == 0x00000A, "Member 'DoorBase_BP_C_BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature::InstantAnimation' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.UserConstructionScript
// 0x0160 (0x0160 - 0x0000)
struct DoorBase_BP_C_UserConstructionScript final
{
public:
	float                                         LinkedAkAcousticPortalDistance;                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASwitch*                                K2Node_DynamicCast_AsSwitch;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAkAcousticPortal*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAkAcousticPortal*                      CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AAkAcousticPortal>       CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0078(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0xB];                                       // 0x00B5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UTravelTriggerComponent*                CallFunc_AddComponent_ReturnValue_1;               // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class UBeaconComponent*                       CallFunc_AddComponent_ReturnValue_2;               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBarred_IsBarred;                        // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBranches                                CallFunc_ConstructComponentByClass_Branches;       // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_ConstructComponentByClass_ReturnValue;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOCLAudioComponent*                     K2Node_DynamicCast_AsOCLAudio_Component;           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_UserConstructionScript) == 0x000010, "Wrong alignment on DoorBase_BP_C_UserConstructionScript");
static_assert(sizeof(DoorBase_BP_C_UserConstructionScript) == 0x000160, "Wrong size on DoorBase_BP_C_UserConstructionScript");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, LinkedAkAcousticPortalDistance) == 0x000000, "Member 'DoorBase_BP_C_UserConstructionScript::LinkedAkAcousticPortalDistance' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_IsLocked_ReturnValue) == 0x000004, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'DoorBase_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, Temp_struct_Variable) == 0x000010, "Member 'DoorBase_BP_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, K2Node_DynamicCast_AsSwitch) == 0x000048, "Member 'DoorBase_BP_C_UserConstructionScript::K2Node_DynamicCast_AsSwitch' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'DoorBase_BP_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000070, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000078, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_GetDistanceTo_ReturnValue) == 0x0000A0, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A4, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A5, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x0000AC, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, Temp_struct_Variable_1) == 0x0000C0, "Member 'DoorBase_BP_C_UserConstructionScript::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x0000F0, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_2) == 0x000130, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000138, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_IsBarred_IsBarred) == 0x000139, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_IsBarred_IsBarred' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_IsValidClass_ReturnValue) == 0x00013A, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_ConstructComponentByClass_Branches) == 0x00013B, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_ConstructComponentByClass_Branches' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_ConstructComponentByClass_ReturnValue) == 0x000140, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_ConstructComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, K2Node_DynamicCast_AsOCLAudio_Component) == 0x000148, "Member 'DoorBase_BP_C_UserConstructionScript::K2Node_DynamicCast_AsOCLAudio_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'DoorBase_BP_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000151, "Member 'DoorBase_BP_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000154, "Member 'DoorBase_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'DoorBase_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.CheckCAC
// 0x0070 (0x0070 - 0x0000)
struct DoorBase_BP_C_CheckCAC final
{
public:
	bool                                          Use;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CAC_Actor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Attach_Point;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NullActor;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_CheckCAC) == 0x000010, "Wrong alignment on DoorBase_BP_C_CheckCAC");
static_assert(sizeof(DoorBase_BP_C_CheckCAC) == 0x000070, "Wrong size on DoorBase_BP_C_CheckCAC");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, Use) == 0x000000, "Member 'DoorBase_BP_C_CheckCAC::Use' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, CAC_Actor) == 0x000008, "Member 'DoorBase_BP_C_CheckCAC::CAC_Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, Attach_Point) == 0x000010, "Member 'DoorBase_BP_C_CheckCAC::Attach_Point' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, NullActor) == 0x000018, "Member 'DoorBase_BP_C_CheckCAC::NullActor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, Temp_struct_Variable) == 0x000020, "Member 'DoorBase_BP_C_CheckCAC::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_CheckCAC::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000058, "Member 'DoorBase_BP_C_CheckCAC::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'DoorBase_BP_C_CheckCAC::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, CallFunc_IsValidClass_ReturnValue) == 0x000060, "Member 'DoorBase_BP_C_CheckCAC::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_CheckCAC, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'DoorBase_BP_C_CheckCAC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.Update
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_Update final
{
public:
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(DoorBase_BP_C_Update) == 0x000008, "Wrong alignment on DoorBase_BP_C_Update");
static_assert(sizeof(DoorBase_BP_C_Update) == 0x000010, "Wrong size on DoorBase_BP_C_Update");
static_assert(offsetof(DoorBase_BP_C_Update, K2Node_MakeArray_Array) == 0x000000, "Member 'DoorBase_BP_C_Update::K2Node_MakeArray_Array' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.SignalAnimationComplete
// 0x0003 (0x0003 - 0x0000)
struct DoorBase_BP_C_SignalAnimationComplete final
{
public:
	bool                                          CallFunc_IsOpen_IsOpen;                            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_IsOpening;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_SignalAnimationComplete) == 0x000001, "Wrong alignment on DoorBase_BP_C_SignalAnimationComplete");
static_assert(sizeof(DoorBase_BP_C_SignalAnimationComplete) == 0x000003, "Wrong size on DoorBase_BP_C_SignalAnimationComplete");
static_assert(offsetof(DoorBase_BP_C_SignalAnimationComplete, CallFunc_IsOpen_IsOpen) == 0x000000, "Member 'DoorBase_BP_C_SignalAnimationComplete::CallFunc_IsOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SignalAnimationComplete, CallFunc_IsOpen_IsOpening) == 0x000001, "Member 'DoorBase_BP_C_SignalAnimationComplete::CallFunc_IsOpen_IsOpening' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SignalAnimationComplete, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'DoorBase_BP_C_SignalAnimationComplete::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.SetupCAC
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_SetupCAC final
{
public:
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(DoorBase_BP_C_SetupCAC) == 0x000008, "Wrong alignment on DoorBase_BP_C_SetupCAC");
static_assert(sizeof(DoorBase_BP_C_SetupCAC) == 0x000010, "Wrong size on DoorBase_BP_C_SetupCAC");
static_assert(offsetof(DoorBase_BP_C_SetupCAC, K2Node_MakeArray_Array) == 0x000000, "Member 'DoorBase_BP_C_SetupCAC::K2Node_MakeArray_Array' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.IsLocked
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_IsLocked final
{
public:
	bool                                          IsLocked_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_IsLocked) == 0x000001, "Wrong alignment on DoorBase_BP_C_IsLocked");
static_assert(sizeof(DoorBase_BP_C_IsLocked) == 0x000002, "Wrong size on DoorBase_BP_C_IsLocked");
static_assert(offsetof(DoorBase_BP_C_IsLocked, IsLocked_0) == 0x000000, "Member 'DoorBase_BP_C_IsLocked::IsLocked_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsLocked, CallFunc_IsLocked_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_IsLocked::CallFunc_IsLocked_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.IsOpen
// 0x0004 (0x0004 - 0x0000)
struct DoorBase_BP_C_IsOpen final
{
public:
	bool                                          IsOpen_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpening;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpening_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_IsOpen) == 0x000001, "Wrong alignment on DoorBase_BP_C_IsOpen");
static_assert(sizeof(DoorBase_BP_C_IsOpen) == 0x000004, "Wrong size on DoorBase_BP_C_IsOpen");
static_assert(offsetof(DoorBase_BP_C_IsOpen, IsOpen_0) == 0x000000, "Member 'DoorBase_BP_C_IsOpen::IsOpen_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsOpen, IsOpening) == 0x000001, "Member 'DoorBase_BP_C_IsOpen::IsOpening' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsOpen, CallFunc_IsOpen_ReturnValue) == 0x000002, "Member 'DoorBase_BP_C_IsOpen::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsOpen, CallFunc_IsOpening_ReturnValue) == 0x000003, "Member 'DoorBase_BP_C_IsOpen::CallFunc_IsOpening_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.SetIsLocked
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_SetIsLocked final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLockedOut;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_SetIsLocked) == 0x000001, "Wrong alignment on DoorBase_BP_C_SetIsLocked");
static_assert(sizeof(DoorBase_BP_C_SetIsLocked) == 0x000002, "Wrong size on DoorBase_BP_C_SetIsLocked");
static_assert(offsetof(DoorBase_BP_C_SetIsLocked, IsLocked) == 0x000000, "Member 'DoorBase_BP_C_SetIsLocked::IsLocked' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetIsLocked, IsLockedOut) == 0x000001, "Member 'DoorBase_BP_C_SetIsLocked::IsLockedOut' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.IsBarred
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_IsBarred final
{
public:
	bool                                          IsBarred_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBarred_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_IsBarred) == 0x000001, "Wrong alignment on DoorBase_BP_C_IsBarred");
static_assert(sizeof(DoorBase_BP_C_IsBarred) == 0x000002, "Wrong size on DoorBase_BP_C_IsBarred");
static_assert(offsetof(DoorBase_BP_C_IsBarred, IsBarred_0) == 0x000000, "Member 'DoorBase_BP_C_IsBarred::IsBarred_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsBarred, CallFunc_IsBarred_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_IsBarred::CallFunc_IsBarred_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.IsClosed
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_IsClosed final
{
public:
	bool                                          IsClosed_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsClosed_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_IsClosed) == 0x000001, "Wrong alignment on DoorBase_BP_C_IsClosed");
static_assert(sizeof(DoorBase_BP_C_IsClosed) == 0x000002, "Wrong size on DoorBase_BP_C_IsClosed");
static_assert(offsetof(DoorBase_BP_C_IsClosed, IsClosed_0) == 0x000000, "Member 'DoorBase_BP_C_IsClosed::IsClosed_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsClosed, CallFunc_IsClosed_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_IsClosed::CallFunc_IsClosed_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.IsSealed
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_IsSealed final
{
public:
	bool                                          IsSealed_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSealed_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_IsSealed) == 0x000001, "Wrong alignment on DoorBase_BP_C_IsSealed");
static_assert(sizeof(DoorBase_BP_C_IsSealed) == 0x000002, "Wrong size on DoorBase_BP_C_IsSealed");
static_assert(offsetof(DoorBase_BP_C_IsSealed, IsSealed_0) == 0x000000, "Member 'DoorBase_BP_C_IsSealed::IsSealed_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_IsSealed, CallFunc_IsSealed_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_IsSealed::CallFunc_IsSealed_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ToggleOpenCloseState
// 0x0018 (0x0018 - 0x0000)
struct DoorBase_BP_C_ToggleOpenCloseState final
{
public:
	class AActor*                                 Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lock;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Seal;                                              // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreLockStatus;                                  // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreStartEvent;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreEndEvent;                                    // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSound_0;                                     // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpen;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOpening;                                         // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsClosed;                                          // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsClosing;                                         // 0x0013(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OCL_Library_ToggleOpenCloseState_IsOpen;  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OCL_Library_ToggleOpenCloseState_IsOpening; // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OCL_Library_ToggleOpenCloseState_IsClosed; // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OCL_Library_ToggleOpenCloseState_IsClosing; // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ToggleOpenCloseState) == 0x000008, "Wrong alignment on DoorBase_BP_C_ToggleOpenCloseState");
static_assert(sizeof(DoorBase_BP_C_ToggleOpenCloseState) == 0x000018, "Wrong size on DoorBase_BP_C_ToggleOpenCloseState");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, Initiator) == 0x000000, "Member 'DoorBase_BP_C_ToggleOpenCloseState::Initiator' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, Force) == 0x000008, "Member 'DoorBase_BP_C_ToggleOpenCloseState::Force' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, Lock) == 0x000009, "Member 'DoorBase_BP_C_ToggleOpenCloseState::Lock' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, Seal) == 0x00000A, "Member 'DoorBase_BP_C_ToggleOpenCloseState::Seal' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IgnoreLockStatus) == 0x00000B, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IgnoreLockStatus' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IgnoreStartEvent) == 0x00000C, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IgnoreStartEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IgnoreEndEvent) == 0x00000D, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IgnoreEndEvent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IgnoreSound_0) == 0x00000E, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, InstantAnimation) == 0x00000F, "Member 'DoorBase_BP_C_ToggleOpenCloseState::InstantAnimation' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IsOpen) == 0x000010, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IsOpen' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IsOpening) == 0x000011, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IsOpening' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IsClosed) == 0x000012, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IsClosed' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, IsClosing) == 0x000013, "Member 'DoorBase_BP_C_ToggleOpenCloseState::IsClosing' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, CallFunc_OCL_Library_ToggleOpenCloseState_IsOpen) == 0x000014, "Member 'DoorBase_BP_C_ToggleOpenCloseState::CallFunc_OCL_Library_ToggleOpenCloseState_IsOpen' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, CallFunc_OCL_Library_ToggleOpenCloseState_IsOpening) == 0x000015, "Member 'DoorBase_BP_C_ToggleOpenCloseState::CallFunc_OCL_Library_ToggleOpenCloseState_IsOpening' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, CallFunc_OCL_Library_ToggleOpenCloseState_IsClosed) == 0x000016, "Member 'DoorBase_BP_C_ToggleOpenCloseState::CallFunc_OCL_Library_ToggleOpenCloseState_IsClosed' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ToggleOpenCloseState, CallFunc_OCL_Library_ToggleOpenCloseState_IsClosing) == 0x000017, "Member 'DoorBase_BP_C_ToggleOpenCloseState::CallFunc_OCL_Library_ToggleOpenCloseState_IsClosing' has a wrong offset!");

}

