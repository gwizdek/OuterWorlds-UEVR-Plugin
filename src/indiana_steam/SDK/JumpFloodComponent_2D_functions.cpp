#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JumpFloodComponent_2D

#include "Basic.hpp"

#include "JumpFloodComponent_2D_classes.hpp"
#include "JumpFloodComponent_2D_parameters.hpp"


namespace SDK
{

// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Assign Render Targets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RT_A_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RT_B_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Assign_Render_Targets(class UTextureRenderTarget2D*& RT_A_0, class UTextureRenderTarget2D*& RT_B_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Assign Render Targets");

	Params::JumpFloodComponent_2D_C_Assign_Render_Targets Parms{};

	Parms.RT_A_0 = RT_A_0;
	Parms.RT_B_0 = RT_B_0;

	UObject::ProcessEvent(Func, &Parms);

	RT_A_0 = Parms.RT_A_0;
	RT_B_0 = Parms.RT_B_0;
}


// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Allocate Render Targets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Seed_Texture_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Allocate_Render_Targets(class UTexture*& Seed_Texture_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Allocate Render Targets");

	Params::JumpFloodComponent_2D_C_Allocate_Render_Targets Parms{};

	Parms.Seed_Texture_0 = Seed_Texture_0;

	UObject::ProcessEvent(Func, &Parms);

	Seed_Texture_0 = Parms.Seed_Texture_0;
}


// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Detect Edges
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Seed_Texture_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJumpFloodSeedMode                      Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Result_RT                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Detect_Edges(class UTexture*& Seed_Texture_0, EJumpFloodSeedMode Mode, class UTexture** Result_RT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Detect Edges");

	Params::JumpFloodComponent_2D_C_Detect_Edges Parms{};

	Parms.Seed_Texture_0 = Seed_Texture_0;
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	Seed_Texture_0 = Parms.Seed_Texture_0;

	if (Result_RT != nullptr)
		*Result_RT = Parms.Result_RT;
}


// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Jump Flood
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJumpFloodSeedMode                      Seed_Mode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Seed_Texture_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Smoothing_Passes                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Result_RT                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Jump_Flood(EJumpFloodSeedMode Seed_Mode, class UTexture* Seed_Texture_0, int32 Smoothing_Passes, class UTexture** Result_RT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Jump Flood");

	Params::JumpFloodComponent_2D_C_Jump_Flood Parms{};

	Parms.Seed_Mode = Seed_Mode;
	Parms.Seed_Texture_0 = Seed_Texture_0;
	Parms.Smoothing_Passes = Smoothing_Passes;

	UObject::ProcessEvent(Func, &Parms);

	if (Result_RT != nullptr)
		*Result_RT = Parms.Result_RT;
}


// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Single Iteration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Result_RT                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Single_Iteration(class UTexture** Result_RT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Single Iteration");

	Params::JumpFloodComponent_2D_C_Single_Iteration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result_RT != nullptr)
		*Result_RT = Parms.Result_RT;
}


// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Compute Gradient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Result_RT                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Compute_Gradient(class UTexture** Result_RT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Compute Gradient");

	Params::JumpFloodComponent_2D_C_Compute_Gradient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result_RT != nullptr)
		*Result_RT = Parms.Result_RT;
}


// Function JumpFloodComponent_2D.JumpFloodComponent_2D_C.Edge Smooth Iteration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Result_RT                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJumpFloodComponent_2D_C::Edge_Smooth_Iteration(class UTexture** Result_RT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpFloodComponent_2D_C", "Edge Smooth Iteration");

	Params::JumpFloodComponent_2D_C_Edge_Smooth_Iteration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result_RT != nullptr)
		*Result_RT = Parms.Result_RT;
}

}

