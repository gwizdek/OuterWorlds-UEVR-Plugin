#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENV_NAT_MushroomRocks_03_2

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ENV_NAT_MushroomRocks_03_2.BP_ENV_NAT_MushroomRocks_03_2_C
// 0x0028 (0x02E0 - 0x02B8)
class ABP_ENV_NAT_MushroomRocks_03_2_C final : public AActor
{
public:
	class UStaticMeshComponent*                   ENV_NAT_MushroomRocks_small1;                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_MushroomRocks_large1;                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_MushroomRocks_small;                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_MushroomRocks_large;                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ENV_NAT_MushroomRocks_03_2_C">();
	}
	static class ABP_ENV_NAT_MushroomRocks_03_2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ENV_NAT_MushroomRocks_03_2_C>();
	}
};
static_assert(alignof(ABP_ENV_NAT_MushroomRocks_03_2_C) == 0x000008, "Wrong alignment on ABP_ENV_NAT_MushroomRocks_03_2_C");
static_assert(sizeof(ABP_ENV_NAT_MushroomRocks_03_2_C) == 0x0002E0, "Wrong size on ABP_ENV_NAT_MushroomRocks_03_2_C");
static_assert(offsetof(ABP_ENV_NAT_MushroomRocks_03_2_C, ENV_NAT_MushroomRocks_small1) == 0x0002B8, "Member 'ABP_ENV_NAT_MushroomRocks_03_2_C::ENV_NAT_MushroomRocks_small1' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_MushroomRocks_03_2_C, ENV_NAT_MushroomRocks_large1) == 0x0002C0, "Member 'ABP_ENV_NAT_MushroomRocks_03_2_C::ENV_NAT_MushroomRocks_large1' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_MushroomRocks_03_2_C, ENV_NAT_MushroomRocks_small) == 0x0002C8, "Member 'ABP_ENV_NAT_MushroomRocks_03_2_C::ENV_NAT_MushroomRocks_small' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_MushroomRocks_03_2_C, ENV_NAT_MushroomRocks_large) == 0x0002D0, "Member 'ABP_ENV_NAT_MushroomRocks_03_2_C::ENV_NAT_MushroomRocks_large' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_MushroomRocks_03_2_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_ENV_NAT_MushroomRocks_03_2_C::DefaultSceneRoot' has a wrong offset!");

}

