#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trigger_Volume_Bound

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C.ExecuteUbergraph_BP_Trigger_Volume_Bound
// 0x0120 (0x0120 - 0x0000)
struct BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_Component;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bReset;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor_1;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0098(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound) == 0x000008, "Wrong alignment on BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound");
static_assert(sizeof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound) == 0x000120, "Wrong size on BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, EntryPoint) == 0x000000, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_Component) == 0x000008, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_bReset) == 0x000010, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_bReset' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000038, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000040, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000048, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000050, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_CustomEvent_OverlappedActor_1) == 0x000058, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_CustomEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_CustomEvent_OtherActor_1) == 0x000060, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_CustomEvent_OverlappedActor) == 0x000068, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_CustomEvent_OtherActor) == 0x000070, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000078, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OtherActor) == 0x000080, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OtherComp) == 0x000088, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000090, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_bFromSweep) == 0x000094, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound, K2Node_ComponentBoundEvent_SweepResult) == 0x000098, "Member 'BP_Trigger_Volume_Bound_C_ExecuteUbergraph_BP_Trigger_Volume_Bound::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");

// Function BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature");
static_assert(sizeof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature) == 0x000010, "Wrong size on BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature, Component) == 0x000000, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature::Component' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature, bReset) == 0x000008, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature::bReset' has a wrong offset!");

// Function BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C.Actor_Begin_Overlap
// 0x0010 (0x0010 - 0x0000)
struct BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap) == 0x000008, "Wrong alignment on BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap");
static_assert(sizeof(BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap) == 0x000010, "Wrong size on BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap, OverlappedActor) == 0x000000, "Member 'BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap, OtherActor) == 0x000008, "Member 'BP_Trigger_Volume_Bound_C_Actor_Begin_Overlap::OtherActor' has a wrong offset!");

// Function BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C.Actor_End_Overlap
// 0x0010 (0x0010 - 0x0000)
struct BP_Trigger_Volume_Bound_C_Actor_End_Overlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Trigger_Volume_Bound_C_Actor_End_Overlap) == 0x000008, "Wrong alignment on BP_Trigger_Volume_Bound_C_Actor_End_Overlap");
static_assert(sizeof(BP_Trigger_Volume_Bound_C_Actor_End_Overlap) == 0x000010, "Wrong size on BP_Trigger_Volume_Bound_C_Actor_End_Overlap");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_Actor_End_Overlap, OverlappedActor) == 0x000000, "Member 'BP_Trigger_Volume_Bound_C_Actor_End_Overlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_Actor_End_Overlap, OtherActor) == 0x000008, "Member 'BP_Trigger_Volume_Bound_C_Actor_End_Overlap::OtherActor' has a wrong offset!");

// Function BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Trigger_Volume_Bound_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

}

