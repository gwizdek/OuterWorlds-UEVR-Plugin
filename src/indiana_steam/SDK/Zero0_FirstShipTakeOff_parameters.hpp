#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zero0_FirstShipTakeOff

#include "Basic.hpp"


namespace SDK::Params
{

// Function 00_FirstShipTakeOff.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x0050 (0x0050 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANiagaraActor*                          K2Node_CustomEvent_NS_Thruster_Trail_L;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewActive;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReset;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Source;                         // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANiagaraActor*                          K2Node_CustomEvent_NS_Thruster_Trail_Main;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewActive_2;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReset_2;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Source_2;                       // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANiagaraActor*                          K2Node_CustomEvent_NS_Thruster_Trail_R;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewActive_1;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReset_1;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Source_1;                       // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000050, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NS_Thruster_Trail_L) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NS_Thruster_Trail_L' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bNewActive) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bNewActive' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bReset) == 0x000011, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bReset' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Source) == 0x000014, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NS_Thruster_Trail_Main) == 0x000020, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NS_Thruster_Trail_Main' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bNewActive_2) == 0x000028, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bNewActive_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bReset_2) == 0x000029, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bReset_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Source_2) == 0x00002C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Source_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_NS_Thruster_Trail_R) == 0x000038, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_NS_Thruster_Trail_R' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bNewActive_1) == 0x000040, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bNewActive_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_bReset_1) == 0x000041, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_bReset_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Source_1) == 0x000044, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Source_1' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.NS_Thruster_Trail_L_Event_0
// 0x0018 (0x0018 - 0x0000)
struct SequenceDirector_C_NS_Thruster_Trail_L_Event_0 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_L;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewActive;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReset;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Source;                                            // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_NS_Thruster_Trail_L_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_NS_Thruster_Trail_L_Event_0");
static_assert(sizeof(SequenceDirector_C_NS_Thruster_Trail_L_Event_0) == 0x000018, "Wrong size on SequenceDirector_C_NS_Thruster_Trail_L_Event_0");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_L_Event_0, NS_Thruster_Trail_L) == 0x000000, "Member 'SequenceDirector_C_NS_Thruster_Trail_L_Event_0::NS_Thruster_Trail_L' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_L_Event_0, bNewActive) == 0x000008, "Member 'SequenceDirector_C_NS_Thruster_Trail_L_Event_0::bNewActive' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_L_Event_0, bReset) == 0x000009, "Member 'SequenceDirector_C_NS_Thruster_Trail_L_Event_0::bReset' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_L_Event_0, Source) == 0x00000C, "Member 'SequenceDirector_C_NS_Thruster_Trail_L_Event_0::Source' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.NS_Thruster_Trail_R_Event_0
// 0x0018 (0x0018 - 0x0000)
struct SequenceDirector_C_NS_Thruster_Trail_R_Event_0 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_R;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewActive;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReset;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Source;                                            // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_NS_Thruster_Trail_R_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_NS_Thruster_Trail_R_Event_0");
static_assert(sizeof(SequenceDirector_C_NS_Thruster_Trail_R_Event_0) == 0x000018, "Wrong size on SequenceDirector_C_NS_Thruster_Trail_R_Event_0");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_R_Event_0, NS_Thruster_Trail_R) == 0x000000, "Member 'SequenceDirector_C_NS_Thruster_Trail_R_Event_0::NS_Thruster_Trail_R' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_R_Event_0, bNewActive) == 0x000008, "Member 'SequenceDirector_C_NS_Thruster_Trail_R_Event_0::bNewActive' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_R_Event_0, bReset) == 0x000009, "Member 'SequenceDirector_C_NS_Thruster_Trail_R_Event_0::bReset' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_R_Event_0, Source) == 0x00000C, "Member 'SequenceDirector_C_NS_Thruster_Trail_R_Event_0::Source' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.NS_Thruster_Trail_Main_Event_0
// 0x0018 (0x0018 - 0x0000)
struct SequenceDirector_C_NS_Thruster_Trail_Main_Event_0 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_Main;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewActive;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReset;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Source;                                            // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_NS_Thruster_Trail_Main_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_NS_Thruster_Trail_Main_Event_0");
static_assert(sizeof(SequenceDirector_C_NS_Thruster_Trail_Main_Event_0) == 0x000018, "Wrong size on SequenceDirector_C_NS_Thruster_Trail_Main_Event_0");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_Main_Event_0, NS_Thruster_Trail_Main) == 0x000000, "Member 'SequenceDirector_C_NS_Thruster_Trail_Main_Event_0::NS_Thruster_Trail_Main' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_Main_Event_0, bNewActive) == 0x000008, "Member 'SequenceDirector_C_NS_Thruster_Trail_Main_Event_0::bNewActive' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_Main_Event_0, bReset) == 0x000009, "Member 'SequenceDirector_C_NS_Thruster_Trail_Main_Event_0::bReset' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_NS_Thruster_Trail_Main_Event_0, Source) == 0x00000C, "Member 'SequenceDirector_C_NS_Thruster_Trail_Main_Event_0::Source' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_Main;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, NS_Thruster_Trail_Main) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::NS_Thruster_Trail_Main' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_Main;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1, NS_Thruster_Trail_Main) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1::NS_Thruster_Trail_Main' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_R;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2, NS_Thruster_Trail_R) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2::NS_Thruster_Trail_R' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_3
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_R;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3, NS_Thruster_Trail_R) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3::NS_Thruster_Trail_R' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_4
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_L;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4, NS_Thruster_Trail_L) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4::NS_Thruster_Trail_L' has a wrong offset!");

// Function 00_FirstShipTakeOff.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_5
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5 final
{
public:
	class ANiagaraActor*                          NS_Thruster_Trail_L;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5, NS_Thruster_Trail_L) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_5::NS_Thruster_Trail_L' has a wrong offset!");

}

