#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Mine_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TrapTrigger_Sphere_x1_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Trap_Mine_BP.Trap_Mine_BP_C
// 0x0038 (0x0430 - 0x03F8)
class ATrap_Mine_BP_C : public ATrapTrigger_Sphere_x1_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Trap_Mine_BP_C;                     // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Tracking_Volume;                                   // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       DetonationVolume;                                  // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   MineDestructible;                                  // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temperature;                                       // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpecularScale;                                     // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightIntensity;                                    // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Trap_Mine_BP(int32 EntryPoint);
	void BndEvt__DetonationVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDestructibleDestroyed(class AActor* Instigator_0);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Trap_Mine_BP_C">();
	}
	static class ATrap_Mine_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrap_Mine_BP_C>();
	}
};
static_assert(alignof(ATrap_Mine_BP_C) == 0x000008, "Wrong alignment on ATrap_Mine_BP_C");
static_assert(sizeof(ATrap_Mine_BP_C) == 0x000430, "Wrong size on ATrap_Mine_BP_C");
static_assert(offsetof(ATrap_Mine_BP_C, UberGraphFrame_Trap_Mine_BP_C) == 0x0003F8, "Member 'ATrap_Mine_BP_C::UberGraphFrame_Trap_Mine_BP_C' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, Tracking_Volume) == 0x000400, "Member 'ATrap_Mine_BP_C::Tracking_Volume' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, DetonationVolume) == 0x000408, "Member 'ATrap_Mine_BP_C::DetonationVolume' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, MineDestructible) == 0x000410, "Member 'ATrap_Mine_BP_C::MineDestructible' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, Color) == 0x000418, "Member 'ATrap_Mine_BP_C::Color' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, Temperature) == 0x00041C, "Member 'ATrap_Mine_BP_C::Temperature' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, SpecularScale) == 0x000420, "Member 'ATrap_Mine_BP_C::SpecularScale' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, LightIntensity) == 0x000424, "Member 'ATrap_Mine_BP_C::LightIntensity' has a wrong offset!");
static_assert(offsetof(ATrap_Mine_BP_C, AttenuationRadius) == 0x000428, "Member 'ATrap_Mine_BP_C::AttenuationRadius' has a wrong offset!");

}

