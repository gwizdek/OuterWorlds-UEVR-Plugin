#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ammo_BP

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ammo_BP.Ammo_BP_C.ExecuteUbergraph_Ammo_BP
// 0x00D8 (0x00D8 - 0x0000)
struct Ammo_BP_C_ExecuteUbergraph_Ammo_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_1;                // 0x0008(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event;                  // 0x0038(0x0030)(ConstParm, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_1;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00B0(0x0028)()
};
static_assert(alignof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP) == 0x000008, "Wrong alignment on Ammo_BP_C_ExecuteUbergraph_Ammo_BP");
static_assert(sizeof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP) == 0x0000D8, "Wrong size on Ammo_BP_C_ExecuteUbergraph_Ammo_BP");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, EntryPoint) == 0x000000, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, K2Node_ComponentBoundEvent_Event_1) == 0x000008, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::K2Node_ComponentBoundEvent_Event_1' has a wrong offset!");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, K2Node_ComponentBoundEvent_Event) == 0x000038, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::K2Node_ComponentBoundEvent_Event' has a wrong offset!");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, CallFunc_GetColorByType_ReturnValue) == 0x000068, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::CallFunc_GetColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, CallFunc_GetColorByType_ReturnValue_1) == 0x000078, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::CallFunc_GetColorByType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ammo_BP_C_ExecuteUbergraph_Ammo_BP, K2Node_MakeStruct_SlateColor_1) == 0x0000B0, "Member 'Ammo_BP_C_ExecuteUbergraph_Ammo_BP::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function Ammo_BP.Ammo_BP_C.BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_264_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function Ammo_BP.Ammo_BP_C.BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'Ammo_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_240_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

}

