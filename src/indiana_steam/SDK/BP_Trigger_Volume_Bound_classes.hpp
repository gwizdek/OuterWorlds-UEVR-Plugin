#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trigger_Volume_Bound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Trigger_Volume_Bound.BP_Trigger_Volume_Bound_C
// 0x0050 (0x0308 - 0x02B8)
class ABP_Trigger_Volume_Bound_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Disp_Begin_Overlap;                                // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Disp_End_Overlap;                                  // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ATriggerVolume*                         Exterior_Trigger;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Exterior_Trigger;                              // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Contained;                                         // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Trigger_Volume_Bound(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ActorComponentActivatedSignature__DelegateSignature(class UActorComponent* Component, bool bReset);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Bind();
	void Actor_Begin_Overlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void Actor_End_Overlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Trigger_Volume_Bound_C">();
	}
	static class ABP_Trigger_Volume_Bound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Trigger_Volume_Bound_C>();
	}
};
static_assert(alignof(ABP_Trigger_Volume_Bound_C) == 0x000008, "Wrong alignment on ABP_Trigger_Volume_Bound_C");
static_assert(sizeof(ABP_Trigger_Volume_Bound_C) == 0x000308, "Wrong size on ABP_Trigger_Volume_Bound_C");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_Trigger_Volume_Bound_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Box) == 0x0002C0, "Member 'ABP_Trigger_Volume_Bound_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Scene) == 0x0002C8, "Member 'ABP_Trigger_Volume_Bound_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Billboard) == 0x0002D0, "Member 'ABP_Trigger_Volume_Bound_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Disp_Begin_Overlap) == 0x0002D8, "Member 'ABP_Trigger_Volume_Bound_C::Disp_Begin_Overlap' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Disp_End_Overlap) == 0x0002E8, "Member 'ABP_Trigger_Volume_Bound_C::Disp_End_Overlap' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Exterior_Trigger) == 0x0002F8, "Member 'ABP_Trigger_Volume_Bound_C::Exterior_Trigger' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Use_Exterior_Trigger) == 0x000300, "Member 'ABP_Trigger_Volume_Bound_C::Use_Exterior_Trigger' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_Volume_Bound_C, Contained) == 0x000301, "Member 'ABP_Trigger_Volume_Bound_C::Contained' has a wrong offset!");

}

