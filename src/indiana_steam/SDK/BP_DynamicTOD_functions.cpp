#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DynamicTOD

#include "Basic.hpp"

#include "BP_DynamicTOD_classes.hpp"
#include "BP_DynamicTOD_parameters.hpp"


namespace SDK
{

// Function BP_DynamicTOD.BP_DynamicTOD_C.ExecuteUbergraph_BP_DynamicTOD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::ExecuteUbergraph_BP_DynamicTOD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "ExecuteUbergraph_BP_DynamicTOD");

	Params::BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.StartSaveWeather
// (Event, Public, BlueprintEvent)

void ABP_DynamicTOD_C::StartSaveWeather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "StartSaveWeather");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "ReceiveEndPlay");

	Params::BP_DynamicTOD_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormLocalizedDuration
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormLocalizedDuration(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormLocalizedDuration");

	Params::BP_DynamicTOD_C_SandStormLocalizedDuration Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Localized Sandstorm End
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Localized_Sandstorm_End(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Localized Sandstorm End");

	Params::BP_DynamicTOD_C_Localized_Sandstorm_End Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Localized Sandstorm Start
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Localized_Sandstorm_Start(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Localized Sandstorm Start");

	Params::BP_DynamicTOD_C_Localized_Sandstorm_Start Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Dust Devil Duration
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Dust_Devil_Duration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Dust Devil Duration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Transition
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Transition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Dust Devil System
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Dust_Devil_System()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Dust Devil System");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormEnding
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormEnding(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormEnding");

	Params::BP_DynamicTOD_C_SandStormEnding Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.BreakLoopSandstorm
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::BreakLoopSandstorm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "BreakLoopSandstorm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormDuration
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormDuration(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormDuration");

	Params::BP_DynamicTOD_C_SandStormDuration Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormForming
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormForming(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormForming");

	Params::BP_DynamicTOD_C_SandStormForming Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.BreakLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::BreakLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "BreakLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.CloudForming
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::CloudForming(float TimeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "CloudForming");

	Params::BP_DynamicTOD_C_CloudForming Parms{};

	Parms.TimeIn = TimeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Drying
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Drying(float TimeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Drying");

	Params::BP_DynamicTOD_C_Drying Parms{};

	Parms.TimeIn = TimeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Weather_End
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Weather_End(float TimeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Weather_End");

	Params::BP_DynamicTOD_C_Weather_End Parms{};

	Parms.TimeIn = TimeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Rain_Start
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Rain_Start(float TimeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Rain_Start");

	Params::BP_DynamicTOD_C_Rain_Start Parms{};

	Parms.TimeIn = TimeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DEPRECATED_Begin_Overlap_Container
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::DEPRECATED_Begin_Overlap_Container(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DEPRECATED_Begin_Overlap_Container");

	Params::BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherTimelineUpdateReverse
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CurrentWeatherAmount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentMaterialWetness                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::WeatherTimelineUpdateReverse(float CurrentWeatherAmount, float CurrentMaterialWetness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "WeatherTimelineUpdateReverse");

	Params::BP_DynamicTOD_C_WeatherTimelineUpdateReverse Parms{};

	Parms.CurrentWeatherAmount = CurrentWeatherAmount;
	Parms.CurrentMaterialWetness = CurrentMaterialWetness;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherTimelineUpdateForward
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CurrentWeatherAmount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentMaterialWetness                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::WeatherTimelineUpdateForward(float CurrentWeatherAmount, float CurrentMaterialWetness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "WeatherTimelineUpdateForward");

	Params::BP_DynamicTOD_C_WeatherTimelineUpdateForward Parms{};

	Parms.CurrentWeatherAmount = CurrentWeatherAmount;
	Parms.CurrentMaterialWetness = CurrentMaterialWetness;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DEPRECATED_End_Overlap_Container
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::DEPRECATED_End_Overlap_Container(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DEPRECATED_End_Overlap_Container");

	Params::BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SetWetness
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Wetness_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SetWetness(float Wetness_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SetWetness");

	Params::BP_DynamicTOD_C_SetWetness Parms{};

	Parms.Wetness_0 = Wetness_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SetStepShadow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeBetweenUpdates                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   UpdateLength                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SetStepShadow(float TimeBetweenUpdates, float UpdateLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SetStepShadow");

	Params::BP_DynamicTOD_C_SetStepShadow Parms{};

	Parms.TimeBetweenUpdates = TimeBetweenUpdates;
	Parms.UpdateLength = UpdateLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.ToggleStepShadow
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::ToggleStepShadow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "ToggleStepShadow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DEPRECATED_PP_BlendEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::DEPRECATED_PP_BlendEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DEPRECATED_PP_BlendEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Refresh Settings
// (BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Refresh_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Refresh Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DynamicTOD_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "ReceiveTick");

	Params::BP_DynamicTOD_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.LocalizedSandSTormDuration__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::LocalizedSandSTormDuration__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "LocalizedSandSTormDuration__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.LocalizedSandSTormDuration__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::LocalizedSandSTormDuration__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "LocalizedSandSTormDuration__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormLocalizedEndTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::SandStormLocalizedEndTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormLocalizedEndTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormLocalizedEndTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::SandStormLocalizedEndTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormLocalizedEndTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormLocalizedStartTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::SandStormLocalizedStartTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormLocalizedStartTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormLocalizedStartTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::SandStormLocalizedStartTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormLocalizedStartTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DustDevilStart__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::DustDevilStart__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DustDevilStart__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DustDevilStart__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::DustDevilStart__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DustDevilStart__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStorm Ending__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::SandStorm_Ending__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStorm Ending__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStorm Ending__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::SandStorm_Ending__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStorm Ending__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Sandstorm Duration__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::Sandstorm_Duration__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Sandstorm Duration__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Sandstorm Duration__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::Sandstorm_Duration__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Sandstorm Duration__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Sandstorm Start__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::Sandstorm_Start__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Sandstorm Start__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Sandstorm Start__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::Sandstorm_Start__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Sandstorm Start__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Clouds Forming__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::Clouds_Forming__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Clouds Forming__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Clouds Forming__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::Clouds_Forming__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Clouds Forming__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DryingTImeline__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::DryingTImeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DryingTImeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DryingTImeline__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::DryingTImeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DryingTImeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.RainEnd__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::RainEnd__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "RainEnd__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.RainEnd__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::RainEnd__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "RainEnd__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.RainStart__UpdateFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::RainStart__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "RainStart__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.RainStart__FinishedFunc
// (BlueprintEvent)

void ABP_DynamicTOD_C::RainStart__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "RainStart__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_LightAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDirectionalLightComponent*       DirectionalLight                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::FOR_REFERENCE_ONLY_LightAngle(class UDirectionalLightComponent* DirectionalLight, float* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "FOR_REFERENCE_ONLY_LightAngle");

	Params::BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle Parms{};

	Parms.DirectionalLight = DirectionalLight;

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_RotateCelestialBody
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NormalizedTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OrbitalPlaneOffsetAngle                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OrbitalTilt                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RiseAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      ElevationCurve                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         FinalRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          FinalVector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::FOR_REFERENCE_ONLY_RotateCelestialBody(float NormalizedTime, float OrbitalPlaneOffsetAngle, float OrbitalTilt, float RiseAngle, class UCurveFloat* ElevationCurve, struct FRotator* FinalRotation, struct FVector* FinalVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "FOR_REFERENCE_ONLY_RotateCelestialBody");

	Params::BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody Parms{};

	Parms.NormalizedTime = NormalizedTime;
	Parms.OrbitalPlaneOffsetAngle = OrbitalPlaneOffsetAngle;
	Parms.OrbitalTilt = OrbitalTilt;
	Parms.RiseAngle = RiseAngle;
	Parms.ElevationCurve = ElevationCurve;

	UObject::ProcessEvent(Func, &Parms);

	if (FinalRotation != nullptr)
		*FinalRotation = std::move(Parms.FinalRotation);

	if (FinalVector != nullptr)
		*FinalVector = std::move(Parms.FinalVector);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.VFX_Material_Update
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::VFX_Material_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "VFX_Material_Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NormalizedTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OrbitalPlaneOffsetAngle                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OrbitalTilt                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RiseAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      ElevationCurve                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         FinalRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          FinalVector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep(float NormalizedTime, float OrbitalPlaneOffsetAngle, float OrbitalTilt, float RiseAngle, class UCurveFloat* ElevationCurve, struct FRotator* FinalRotation, struct FVector* FinalVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep");

	Params::BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep Parms{};

	Parms.NormalizedTime = NormalizedTime;
	Parms.OrbitalPlaneOffsetAngle = OrbitalPlaneOffsetAngle;
	Parms.OrbitalTilt = OrbitalTilt;
	Parms.RiseAngle = RiseAngle;
	Parms.ElevationCurve = ElevationCurve;

	UObject::ProcessEvent(Func, &Parms);

	if (FinalRotation != nullptr)
		*FinalRotation = std::move(Parms.FinalRotation);

	if (FinalVector != nullptr)
		*FinalVector = std::move(Parms.FinalVector);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_SetShadowMovementMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::FOR_REFERENCE_ONLY_SetShadowMovementMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "FOR_REFERENCE_ONLY_SetShadowMovementMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.GetWeatherParticleSystem
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UParticleSystem* ABP_DynamicTOD_C::GetWeatherParticleSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "GetWeatherParticleSystem");

	Params::BP_DynamicTOD_C_GetWeatherParticleSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.GetWeatherWwiseStateName
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_DynamicTOD_C::GetWeatherWwiseStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "GetWeatherWwiseStateName");

	Params::BP_DynamicTOD_C_GetWeatherWwiseStateName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SetWetnessDependentMPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Wetness_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SetWetnessDependentMPC(float Wetness_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SetWetnessDependentMPC");

	Params::BP_DynamicTOD_C_SetWetnessDependentMPC Parms{};

	Parms.Wetness_0 = Wetness_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WeatherCondition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Wetness_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::WeatherStart(float WeatherCondition, float Wetness_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "WeatherStart");

	Params::BP_DynamicTOD_C_WeatherStart Parms{};

	Parms.WeatherCondition = WeatherCondition;
	Parms.Wetness_0 = Wetness_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WeatherCondition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::WeatherEnd(float WeatherCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "WeatherEnd");

	Params::BP_DynamicTOD_C_WeatherEnd Parms{};

	Parms.WeatherCondition = WeatherCondition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DynamicPostProcessesAndCloud
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::DynamicPostProcessesAndCloud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DynamicPostProcessesAndCloud");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Weather Lighting Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Weather_Lighting_Start(float Timeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Weather Lighting Start");

	Params::BP_DynamicTOD_C_Weather_Lighting_Start Parms{};

	Parms.Timeline = Timeline;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.LightingCurvesDefinition
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::LightingCurvesDefinition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "LightingCurvesDefinition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Weather Lighting End
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Weather_Lighting_End(float Timeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Weather Lighting End");

	Params::BP_DynamicTOD_C_Weather_Lighting_End Parms{};

	Parms.Timeline = Timeline;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.RainSetup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RandomWindGenerator_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::RainSetup(float Timeline, float RandomWindGenerator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "RainSetup");

	Params::BP_DynamicTOD_C_RainSetup Parms{};

	Parms.Timeline = Timeline;
	Parms.RandomWindGenerator_0 = RandomWindGenerator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.RainStormTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::RainStormTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "RainStormTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RandomWindGenerator_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormStart(float RandomWindGenerator_0, float Timeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormStart");

	Params::BP_DynamicTOD_C_SandStormStart Parms{};

	Parms.RandomWindGenerator_0 = RandomWindGenerator_0;
	Parms.Timeline = Timeline;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.UseCustomLight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::UseCustomLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "UseCustomLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::SandStormTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WindIntensityEnd_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormEnd(float Timeline, float WindIntensityEnd_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormEnd");

	Params::BP_DynamicTOD_C_SandStormEnd Parms{};

	Parms.Timeline = Timeline;
	Parms.WindIntensityEnd_0 = WindIntensityEnd_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.DustDevil
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::DustDevil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "DustDevil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormProperties
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::SandStormProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormObjectStored
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::SandStormObjectStored()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormObjectStored");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Set Weather Values
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWeatherStateContainer*           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::Set_Weather_Values(class UWeatherStateContainer* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Set Weather Values");

	Params::BP_DynamicTOD_C_Set_Weather_Values Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SaveWeatherValues_BP
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWeatherStateContainer*           Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SaveWeatherValues_BP(class UWeatherStateContainer** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SaveWeatherValues_BP");

	Params::BP_DynamicTOD_C_SaveWeatherValues_BP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Reset Weather
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Reset_Weather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Reset Weather");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Lightning
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Lightning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Lightning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.Sand Storm Postprocess Actors
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DynamicTOD_C::Sand_Storm_Postprocess_Actors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "Sand Storm Postprocess Actors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormFog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DynamicTOD_C::SandStormFog(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicTOD_C", "SandStormFog");

	Params::BP_DynamicTOD_C_SandStormFog Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

