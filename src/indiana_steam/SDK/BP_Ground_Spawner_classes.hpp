#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ground_Spawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ground_Spawner.BP_Ground_Spawner_C
// 0x0040 (0x02F8 - 0x02B8)
class ABP_Ground_Spawner_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SpawnRange;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Width__X_;                                         // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length__Y_;                                        // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height__Z_;                                        // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ParticleSystem;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnRateMin;                                      // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnRateMax;                                      // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DrawTrace;                                         // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Max_Draw_Distance;                                 // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Ground_Spawner(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ground_Spawner_C">();
	}
	static class ABP_Ground_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ground_Spawner_C>();
	}
};
static_assert(alignof(ABP_Ground_Spawner_C) == 0x000008, "Wrong alignment on ABP_Ground_Spawner_C");
static_assert(sizeof(ABP_Ground_Spawner_C) == 0x0002F8, "Wrong size on ABP_Ground_Spawner_C");
static_assert(offsetof(ABP_Ground_Spawner_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_Ground_Spawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, SpawnRange) == 0x0002C0, "Member 'ABP_Ground_Spawner_C::SpawnRange' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_Ground_Spawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, Width__X_) == 0x0002D0, "Member 'ABP_Ground_Spawner_C::Width__X_' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, Length__Y_) == 0x0002D4, "Member 'ABP_Ground_Spawner_C::Length__Y_' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, Height__Z_) == 0x0002D8, "Member 'ABP_Ground_Spawner_C::Height__Z_' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, ParticleSystem) == 0x0002E0, "Member 'ABP_Ground_Spawner_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, SpawnRateMin) == 0x0002E8, "Member 'ABP_Ground_Spawner_C::SpawnRateMin' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, SpawnRateMax) == 0x0002EC, "Member 'ABP_Ground_Spawner_C::SpawnRateMax' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, DrawTrace) == 0x0002F0, "Member 'ABP_Ground_Spawner_C::DrawTrace' has a wrong offset!");
static_assert(offsetof(ABP_Ground_Spawner_C, Max_Draw_Distance) == 0x0002F4, "Member 'ABP_Ground_Spawner_C::Max_Draw_Distance' has a wrong offset!");

}

