#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hazard_Campfire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hazard_Abstract_Fire_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Hazard_Campfire.Hazard_Campfire_C
// 0x0020 (0x0460 - 0x0440)
class AHazard_Campfire_C final : public AHazard_Abstract_Fire_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Hazard_Campfire_C;                  // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Campfire;                                          // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Hazard_Campfire(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnHazardEnabled_Event_Base();
	void OnHazardDisabled_Event_Base();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Hazard_Campfire_C">();
	}
	static class AHazard_Campfire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHazard_Campfire_C>();
	}
};
static_assert(alignof(AHazard_Campfire_C) == 0x000008, "Wrong alignment on AHazard_Campfire_C");
static_assert(sizeof(AHazard_Campfire_C) == 0x000460, "Wrong size on AHazard_Campfire_C");
static_assert(offsetof(AHazard_Campfire_C, UberGraphFrame_Hazard_Campfire_C) == 0x000440, "Member 'AHazard_Campfire_C::UberGraphFrame_Hazard_Campfire_C' has a wrong offset!");
static_assert(offsetof(AHazard_Campfire_C, ParticleSystem) == 0x000448, "Member 'AHazard_Campfire_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AHazard_Campfire_C, PointLight) == 0x000450, "Member 'AHazard_Campfire_C::PointLight' has a wrong offset!");
static_assert(offsetof(AHazard_Campfire_C, Campfire) == 0x000458, "Member 'AHazard_Campfire_C::Campfire' has a wrong offset!");

}

