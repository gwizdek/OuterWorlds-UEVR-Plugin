#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_Robot_Hover

#include "Basic.hpp"

#include "Indiana_structs.hpp"


namespace SDK::Params
{

// Function Base_Robot_Hover.Base_Robot_Hover_C.ExecuteUbergraph_Base_Robot_Hover
// 0x0138 (0x0138 - 0x0000)
struct Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStateOfBeing                                 CallFunc_GetStateOfBeing_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Instigator, struct FCauseDamageInfo& CauseDamageInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Instigator;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCauseDamageInfo                       K2Node_CustomEvent_CauseDamageInfo;                // 0x0028(0x0110)(ConstParm, NoDestructor)
};
static_assert(alignof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover) == 0x000008, "Wrong alignment on Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover");
static_assert(sizeof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover) == 0x000138, "Wrong size on Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover");
static_assert(offsetof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover, EntryPoint) == 0x000000, "Member 'Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover::EntryPoint' has a wrong offset!");
static_assert(offsetof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover, CallFunc_GetStateOfBeing_ReturnValue) == 0x000004, "Member 'Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover::CallFunc_GetStateOfBeing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover, K2Node_CustomEvent_Instigator) == 0x000020, "Member 'Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover, K2Node_CustomEvent_CauseDamageInfo) == 0x000028, "Member 'Base_Robot_Hover_C_ExecuteUbergraph_Base_Robot_Hover::K2Node_CustomEvent_CauseDamageInfo' has a wrong offset!");

// Function Base_Robot_Hover.Base_Robot_Hover_C.Death
// 0x0118 (0x0118 - 0x0000)
struct Base_Robot_Hover_C_Death final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCauseDamageInfo                       CauseDamageInfo;                                   // 0x0008(0x0110)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Base_Robot_Hover_C_Death) == 0x000008, "Wrong alignment on Base_Robot_Hover_C_Death");
static_assert(sizeof(Base_Robot_Hover_C_Death) == 0x000118, "Wrong size on Base_Robot_Hover_C_Death");
static_assert(offsetof(Base_Robot_Hover_C_Death, Instigator_0) == 0x000000, "Member 'Base_Robot_Hover_C_Death::Instigator_0' has a wrong offset!");
static_assert(offsetof(Base_Robot_Hover_C_Death, CauseDamageInfo) == 0x000008, "Member 'Base_Robot_Hover_C_Death::CauseDamageInfo' has a wrong offset!");

}

