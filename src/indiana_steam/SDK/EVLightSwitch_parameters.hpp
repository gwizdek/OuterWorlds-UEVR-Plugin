#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EVLightSwitch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EVLightSwitch.EVLightSwitch_C.ExecuteUbergraph_EVLightSwitch
// 0x000C (0x000C - 0x0000)
struct EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch) == 0x000004, "Wrong alignment on EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch");
static_assert(sizeof(EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch) == 0x00000C, "Wrong size on EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch");
static_assert(offsetof(EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch, EntryPoint) == 0x000000, "Member 'EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch::EntryPoint' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EVLightSwitch.EVLightSwitch_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct EVLightSwitch_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EVLightSwitch_C_ReceiveTick) == 0x000004, "Wrong alignment on EVLightSwitch_C_ReceiveTick");
static_assert(sizeof(EVLightSwitch_C_ReceiveTick) == 0x000004, "Wrong size on EVLightSwitch_C_ReceiveTick");
static_assert(offsetof(EVLightSwitch_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'EVLightSwitch_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function EVLightSwitch.EVLightSwitch_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct EVLightSwitch_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EVLightSwitch_C_UserConstructionScript) == 0x000001, "Wrong alignment on EVLightSwitch_C_UserConstructionScript");
static_assert(sizeof(EVLightSwitch_C_UserConstructionScript) == 0x000001, "Wrong size on EVLightSwitch_C_UserConstructionScript");
static_assert(offsetof(EVLightSwitch_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'EVLightSwitch_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EVLightSwitch.EVLightSwitch_C.UpdateIfSettingsChanged
// 0x0064 (0x0064 - 0x0000)
struct EVLightSwitch_C_UpdateIfSettingsChanged final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_2;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EVLightSwitch_C_UpdateIfSettingsChanged) == 0x000004, "Wrong alignment on EVLightSwitch_C_UpdateIfSettingsChanged");
static_assert(sizeof(EVLightSwitch_C_UpdateIfSettingsChanged) == 0x000064, "Wrong size on EVLightSwitch_C_UpdateIfSettingsChanged");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000001, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000002, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000004, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000014, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_IsValid_ReturnValue_1) == 0x000024, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Conv_ColorToLinearColor_ReturnValue_2) == 0x000028, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Conv_ColorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_GetTimeSeconds_ReturnValue) == 0x00003C, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Fraction_ReturnValue) == 0x000044, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_GetFloatValue_ReturnValue) == 0x000048, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00004C, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_UpdateIfSettingsChanged, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000060, "Member 'EVLightSwitch_C_UpdateIfSettingsChanged::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function EVLightSwitch.EVLightSwitch_C.Update
// 0x001C (0x001C - 0x0000)
struct EVLightSwitch_C_Update final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EVLightSwitch_C_Update) == 0x000004, "Wrong alignment on EVLightSwitch_C_Update");
static_assert(sizeof(EVLightSwitch_C_Update) == 0x00001C, "Wrong size on EVLightSwitch_C_Update");
static_assert(offsetof(EVLightSwitch_C_Update, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'EVLightSwitch_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'EVLightSwitch_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_Update, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000004, "Member 'EVLightSwitch_C_Update::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_Update, CallFunc_GetLinearColorValue_ReturnValue) == 0x000008, "Member 'EVLightSwitch_C_Update::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EVLightSwitch_C_Update, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'EVLightSwitch_C_Update::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

}

