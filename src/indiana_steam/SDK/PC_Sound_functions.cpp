#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Sound

#include "Basic.hpp"

#include "PC_Sound_classes.hpp"
#include "PC_Sound_parameters.hpp"


namespace SDK
{

// Function PC_Sound.PC_Sound_C.ExecuteUbergraph_PC_Sound
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::ExecuteUbergraph_PC_Sound(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "ExecuteUbergraph_PC_Sound");

	Params::PC_Sound_C_ExecuteUbergraph_PC_Sound Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_SetAmbientDataColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   R                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::AudioDebug_SetAmbientDataColor(float R, float G, float B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_SetAmbientDataColor");

	Params::PC_Sound_C_AudioDebug_SetAmbientDataColor Parms{};

	Parms.R = R;
	Parms.G = G;
	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_SetCharacterDataColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   R                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::AudioDebug_SetCharacterDataColor(float R, float G, float B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_SetCharacterDataColor");

	Params::PC_Sound_C_AudioDebug_SetCharacterDataColor Parms{};

	Parms.R = R;
	Parms.G = G;
	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.Cuil
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CuilLevel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::Cuil(float CuilLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "Cuil");

	Params::PC_Sound_C_Cuil Parms{};

	Parms.CuilLevel = CuilLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_SetMaxVisRange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxVisRange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::AudioDebug_SetMaxVisRange(float MaxVisRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_SetMaxVisRange");

	Params::PC_Sound_C_AudioDebug_SetMaxVisRange Parms{};

	Parms.MaxVisRange = MaxVisRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_SetVisParams
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowEmitterName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ShowAssociatedEvent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ShowDistance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   MaxVisRange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::AudioDebug_SetVisParams(bool ShowEmitterName, bool ShowAssociatedEvent, bool ShowDistance, float MaxVisRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_SetVisParams");

	Params::PC_Sound_C_AudioDebug_SetVisParams Parms{};

	Parms.ShowEmitterName = ShowEmitterName;
	Parms.ShowAssociatedEvent = ShowAssociatedEvent;
	Parms.ShowDistance = ShowDistance;
	Parms.MaxVisRange = MaxVisRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_HideCharacterEmitters
// (BlueprintCallable, BlueprintEvent)

void UPC_Sound_C::AudioDebug_HideCharacterEmitters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_HideCharacterEmitters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_ShowCharacterEmitters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxVisRange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::AudioDebug_ShowCharacterEmitters(float MaxVisRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_ShowCharacterEmitters");

	Params::PC_Sound_C_AudioDebug_ShowCharacterEmitters Parms{};

	Parms.MaxVisRange = MaxVisRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_HideAmbientEmitters
// (BlueprintCallable, BlueprintEvent)

void UPC_Sound_C::AudioDebug_HideAmbientEmitters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_HideAmbientEmitters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_Sound.PC_Sound_C.AudioDebug_ShowAmbientEmitters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxVisRange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::AudioDebug_ShowAmbientEmitters(float MaxVisRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "AudioDebug_ShowAmbientEmitters");

	Params::PC_Sound_C_AudioDebug_ShowAmbientEmitters Parms{};

	Parms.MaxVisRange = MaxVisRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "ReceiveTick");

	Params::PC_Sound_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_Sound.PC_Sound_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UPC_Sound_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_Sound.PC_Sound_C.DebugVisualizeEmitters
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPC_Sound_C::DebugVisualizeEmitters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "DebugVisualizeEmitters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_Sound.PC_Sound_C.DebugDrawEmitterVisualization
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkComponent*                     EmitterToVisualize                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ListenerWorldLocation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     DataColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPC_Sound_C::DebugDrawEmitterVisualization(class UAkComponent* EmitterToVisualize, const struct FVector& ListenerWorldLocation, const struct FLinearColor& DataColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_Sound_C", "DebugDrawEmitterVisualization");

	Params::PC_Sound_C_DebugDrawEmitterVisualization Parms{};

	Parms.EmitterToVisualize = EmitterToVisualize;
	Parms.ListenerWorldLocation = std::move(ListenerWorldLocation);
	Parms.DataColor = std::move(DataColor);

	UObject::ProcessEvent(Func, &Parms);
}

}

