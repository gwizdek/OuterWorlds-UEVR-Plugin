#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EVLightSwitch

#include "Basic.hpp"

#include "EVLightSwitch_classes.hpp"
#include "EVLightSwitch_parameters.hpp"


namespace SDK
{

// Function EVLightSwitch.EVLightSwitch_C.ExecuteUbergraph_EVLightSwitch
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEVLightSwitch_C::ExecuteUbergraph_EVLightSwitch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "ExecuteUbergraph_EVLightSwitch");

	Params::EVLightSwitch_C_ExecuteUbergraph_EVLightSwitch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EVLightSwitch.EVLightSwitch_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AEVLightSwitch_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EVLightSwitch.EVLightSwitch_C.Normal Mode (Reset)
// (BlueprintCallable, BlueprintEvent)

void AEVLightSwitch_C::Normal_Mode__Reset_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "Normal Mode (Reset)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EVLightSwitch.EVLightSwitch_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEVLightSwitch_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "ReceiveTick");

	Params::EVLightSwitch_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EVLightSwitch.EVLightSwitch_C.High Power Mode
// (BlueprintCallable, BlueprintEvent)

void AEVLightSwitch_C::High_Power_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "High Power Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EVLightSwitch.EVLightSwitch_C.Low Power Mode
// (BlueprintCallable, BlueprintEvent)

void AEVLightSwitch_C::Low_Power_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "Low Power Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EVLightSwitch.EVLightSwitch_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AEVLightSwitch_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EVLightSwitch.EVLightSwitch_C.UpdateIfSettingsChanged
// (Public, BlueprintCallable, BlueprintEvent)

void AEVLightSwitch_C::UpdateIfSettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "UpdateIfSettingsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EVLightSwitch.EVLightSwitch_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void AEVLightSwitch_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EVLightSwitch_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}

}

