#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Compass_BP

#include "Basic.hpp"

#include "Indiana_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Compass_BP.Compass_BP_C
// 0x0028 (0x1118 - 0x10F0)
class UCompass_BP_C final : public UCompassWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x10F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 CardinalDirectionsImage;                           // 0x10F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompassBody;                                       // 0x1100(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CardinalDirection_Mat;                             // 0x1108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CompassBody_Mat;                                   // 0x1110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Compass_BP(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Compass_BP_C">();
	}
	static class UCompass_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompass_BP_C>();
	}
};
static_assert(alignof(UCompass_BP_C) == 0x000008, "Wrong alignment on UCompass_BP_C");
static_assert(sizeof(UCompass_BP_C) == 0x001118, "Wrong size on UCompass_BP_C");
static_assert(offsetof(UCompass_BP_C, UberGraphFrame) == 0x0010F0, "Member 'UCompass_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCompass_BP_C, CardinalDirectionsImage) == 0x0010F8, "Member 'UCompass_BP_C::CardinalDirectionsImage' has a wrong offset!");
static_assert(offsetof(UCompass_BP_C, CompassBody) == 0x001100, "Member 'UCompass_BP_C::CompassBody' has a wrong offset!");
static_assert(offsetof(UCompass_BP_C, CardinalDirection_Mat) == 0x001108, "Member 'UCompass_BP_C::CardinalDirection_Mat' has a wrong offset!");
static_assert(offsetof(UCompass_BP_C, CompassBody_Mat) == 0x001110, "Member 'UCompass_BP_C::CompassBody_Mat' has a wrong offset!");

}

