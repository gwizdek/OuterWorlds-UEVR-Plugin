#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hazard_Abstract

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Indiana_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Hazard_Abstract.Hazard_Abstract_C.ExecuteUbergraph_Hazard_Abstract
// 0x0048 (0x0048 - 0x0000)
struct Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract) == 0x000004, "Wrong alignment on Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract");
static_assert(sizeof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract) == 0x000048, "Wrong size on Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, EntryPoint) == 0x000000, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::EntryPoint' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract, CallFunc_IsValid_ReturnValue_1) == 0x000045, "Member 'Hazard_Abstract_C_ExecuteUbergraph_Hazard_Abstract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Hazard_Abstract.Hazard_Abstract_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct Hazard_Abstract_C_UserConstructionScript final
{
public:
	ECheckBranches                                CallFunc_ConstructComponentByClass_Branches;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_ConstructComponentByClass_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHazardAudioComponent*                  K2Node_DynamicCast_AsHazard_Audio_Component;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Hazard_Abstract_C_UserConstructionScript) == 0x000008, "Wrong alignment on Hazard_Abstract_C_UserConstructionScript");
static_assert(sizeof(Hazard_Abstract_C_UserConstructionScript) == 0x000020, "Wrong size on Hazard_Abstract_C_UserConstructionScript");
static_assert(offsetof(Hazard_Abstract_C_UserConstructionScript, CallFunc_ConstructComponentByClass_Branches) == 0x000000, "Member 'Hazard_Abstract_C_UserConstructionScript::CallFunc_ConstructComponentByClass_Branches' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_UserConstructionScript, CallFunc_ConstructComponentByClass_ReturnValue) == 0x000008, "Member 'Hazard_Abstract_C_UserConstructionScript::CallFunc_ConstructComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_UserConstructionScript, K2Node_DynamicCast_AsHazard_Audio_Component) == 0x000010, "Member 'Hazard_Abstract_C_UserConstructionScript::K2Node_DynamicCast_AsHazard_Audio_Component' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Hazard_Abstract_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'Hazard_Abstract_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Hazard_Abstract.Hazard_Abstract_C.Setup VFX to Volume
// 0x0370 (0x0370 - 0x0000)
struct Hazard_Abstract_C_Setup_VFX_to_Volume final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      CallFunc_Array_Get_Item;                           // 0x0060(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0080)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x01A0(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_1;              // 0x0230(0x0080)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x02D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Hazard_Abstract_C_Setup_VFX_to_Volume) == 0x000010, "Wrong alignment on Hazard_Abstract_C_Setup_VFX_to_Volume");
static_assert(sizeof(Hazard_Abstract_C_Setup_VFX_to_Volume) == 0x000370, "Wrong size on Hazard_Abstract_C_Setup_VFX_to_Volume");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000010, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Divide_VectorVector_ReturnValue) == 0x00001C, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_BreakVector_X) == 0x000028, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_BreakVector_Y) == 0x00002C, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_BreakVector_Z) == 0x000030, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_BreakVector_X_1) == 0x000034, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Array_Get_Item) == 0x000060, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000160, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00016C, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000178, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Conv_NameToString_ReturnValue) == 0x000188, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, K2Node_MakeStruct_ParticleSysParam) == 0x0001A0, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Contains_ReturnValue) == 0x000220, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000224, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, K2Node_MakeStruct_ParticleSysParam_1) == 0x000230, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::K2Node_MakeStruct_ParticleSysParam_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0002B0, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Array_Length_ReturnValue) == 0x0002C0, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Contains_ReturnValue_1) == 0x0002C4, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Array_Length_ReturnValue_1) == 0x0002C8, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Less_IntInt_ReturnValue) == 0x0002CC, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0002D0, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, Temp_int_Loop_Counter_Variable_1) == 0x000358, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Less_IntInt_ReturnValue_1) == 0x00035C, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Hazard_Abstract_C_Setup_VFX_to_Volume, CallFunc_Add_IntInt_ReturnValue_1) == 0x000360, "Member 'Hazard_Abstract_C_Setup_VFX_to_Volume::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

