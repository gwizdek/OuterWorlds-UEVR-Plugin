#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lab_WallSconce_Soft

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lab_WallSconce_Soft.BP_Lab_WallSconce_Soft_C
// 0x0038 (0x02F0 - 0x02B8)
class ABP_Lab_WallSconce_Soft_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   Interior;                                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FogLight;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_LAB_WallSconce;                                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLight;                                          // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Lab_WallSconce_Soft(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lab_WallSconce_Soft_C">();
	}
	static class ABP_Lab_WallSconce_Soft_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lab_WallSconce_Soft_C>();
	}
};
static_assert(alignof(ABP_Lab_WallSconce_Soft_C) == 0x000008, "Wrong alignment on ABP_Lab_WallSconce_Soft_C");
static_assert(sizeof(ABP_Lab_WallSconce_Soft_C) == 0x0002F0, "Wrong size on ABP_Lab_WallSconce_Soft_C");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_Lab_WallSconce_Soft_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, Interior) == 0x0002C0, "Member 'ABP_Lab_WallSconce_Soft_C::Interior' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, FogLight) == 0x0002C8, "Member 'ABP_Lab_WallSconce_Soft_C::FogLight' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, SpotLight) == 0x0002D0, "Member 'ABP_Lab_WallSconce_Soft_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, ENV_LAB_WallSconce) == 0x0002D8, "Member 'ABP_Lab_WallSconce_Soft_C::ENV_LAB_WallSconce' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_Lab_WallSconce_Soft_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_Soft_C, UseLight) == 0x0002E8, "Member 'ABP_Lab_WallSconce_Soft_C::UseLight' has a wrong offset!");

}

