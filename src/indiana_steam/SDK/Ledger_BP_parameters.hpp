#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ledger_BP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Indiana_structs.hpp"


namespace SDK::Params
{

// Function Ledger_BP.Ledger_BP_C.ExecuteUbergraph_Ledger_BP
// 0x0060 (0x0060 - 0x0000)
struct Ledger_BP_C_ExecuteUbergraph_Ledger_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELedgerPages                                  K2Node_Event_Page;                                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP) == 0x000008, "Wrong alignment on Ledger_BP_C_ExecuteUbergraph_Ledger_BP");
static_assert(sizeof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP) == 0x000060, "Wrong size on Ledger_BP_C_ExecuteUbergraph_Ledger_BP");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, EntryPoint) == 0x000000, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, K2Node_Event_MyGeometry) == 0x000010, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, K2Node_Event_InDeltaTime) == 0x000048, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, K2Node_Event_Page) == 0x00004C, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::K2Node_Event_Page' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, K2Node_Event_bAnimate) == 0x00004D, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, K2Node_SwitchEnum_CmpSuccess) == 0x00004E, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000050, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000058, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_ExecuteUbergraph_Ledger_BP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'Ledger_BP_C_ExecuteUbergraph_Ledger_BP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.OnSetCurrentPage
// 0x0002 (0x0002 - 0x0000)
struct Ledger_BP_C_OnSetCurrentPage final
{
public:
	ELedgerPages                                  Page;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ledger_BP_C_OnSetCurrentPage) == 0x000001, "Wrong alignment on Ledger_BP_C_OnSetCurrentPage");
static_assert(sizeof(Ledger_BP_C_OnSetCurrentPage) == 0x000002, "Wrong size on Ledger_BP_C_OnSetCurrentPage");
static_assert(offsetof(Ledger_BP_C_OnSetCurrentPage, Page) == 0x000000, "Member 'Ledger_BP_C_OnSetCurrentPage::Page' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_OnSetCurrentPage, bAnimate) == 0x000001, "Member 'Ledger_BP_C_OnSetCurrentPage::bAnimate' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ledger_BP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ledger_BP_C_Tick) == 0x000004, "Wrong alignment on Ledger_BP_C_Tick");
static_assert(sizeof(Ledger_BP_C_Tick) == 0x00003C, "Wrong size on Ledger_BP_C_Tick");
static_assert(offsetof(Ledger_BP_C_Tick, MyGeometry) == 0x000000, "Member 'Ledger_BP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_Tick, InDeltaTime) == 0x000038, "Member 'Ledger_BP_C_Tick::InDeltaTime' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.SetupMaterialInstances
// 0x0048 (0x0048 - 0x0000)
struct Ledger_BP_C_SetupMaterialInstances final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeX;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeY;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ledger_BP_C_SetupMaterialInstances) == 0x000008, "Wrong alignment on Ledger_BP_C_SetupMaterialInstances");
static_assert(sizeof(Ledger_BP_C_SetupMaterialInstances) == 0x000048, "Wrong size on Ledger_BP_C_SetupMaterialInstances");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, Image) == 0x000000, "Member 'Ledger_BP_C_SetupMaterialInstances::Image' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, MaterialInstance) == 0x000008, "Member 'Ledger_BP_C_SetupMaterialInstances::MaterialInstance' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, SizeX) == 0x000010, "Member 'Ledger_BP_C_SetupMaterialInstances::SizeX' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, SizeY) == 0x000014, "Member 'Ledger_BP_C_SetupMaterialInstances::SizeY' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'Ledger_BP_C_SetupMaterialInstances::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x000020, "Member 'Ledger_BP_C_SetupMaterialInstances::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'Ledger_BP_C_SetupMaterialInstances::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ledger_BP_C_SetupMaterialInstances::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000034, "Member 'Ledger_BP_C_SetupMaterialInstances::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000038, "Member 'Ledger_BP_C_SetupMaterialInstances::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00003C, "Member 'Ledger_BP_C_SetupMaterialInstances::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_SetupMaterialInstances, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000040, "Member 'Ledger_BP_C_SetupMaterialInstances::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.OnMinimize
// 0x0014 (0x0014 - 0x0000)
struct Ledger_BP_C_OnMinimize final
{
public:
	TDelegate<void()>                             AnimationCompleteCallback;                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ledger_BP_C_OnMinimize) == 0x000004, "Wrong alignment on Ledger_BP_C_OnMinimize");
static_assert(sizeof(Ledger_BP_C_OnMinimize) == 0x000014, "Wrong size on Ledger_BP_C_OnMinimize");
static_assert(offsetof(Ledger_BP_C_OnMinimize, AnimationCompleteCallback) == 0x000000, "Member 'Ledger_BP_C_OnMinimize::AnimationCompleteCallback' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_OnMinimize, ReturnValue) == 0x000010, "Member 'Ledger_BP_C_OnMinimize::ReturnValue' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.OnMaximize
// 0x0014 (0x0014 - 0x0000)
struct Ledger_BP_C_OnMaximize final
{
public:
	TDelegate<void()>                             AnimationCompleteCallback;                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ledger_BP_C_OnMaximize) == 0x000004, "Wrong alignment on Ledger_BP_C_OnMaximize");
static_assert(sizeof(Ledger_BP_C_OnMaximize) == 0x000014, "Wrong size on Ledger_BP_C_OnMaximize");
static_assert(offsetof(Ledger_BP_C_OnMaximize, AnimationCompleteCallback) == 0x000000, "Member 'Ledger_BP_C_OnMaximize::AnimationCompleteCallback' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_OnMaximize, ReturnValue) == 0x000010, "Member 'Ledger_BP_C_OnMaximize::ReturnValue' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.OnIntro
// 0x0014 (0x0014 - 0x0000)
struct Ledger_BP_C_OnIntro final
{
public:
	TDelegate<void()>                             AnimationCompleteCallback;                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ledger_BP_C_OnIntro) == 0x000004, "Wrong alignment on Ledger_BP_C_OnIntro");
static_assert(sizeof(Ledger_BP_C_OnIntro) == 0x000014, "Wrong size on Ledger_BP_C_OnIntro");
static_assert(offsetof(Ledger_BP_C_OnIntro, AnimationCompleteCallback) == 0x000000, "Member 'Ledger_BP_C_OnIntro::AnimationCompleteCallback' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_OnIntro, ReturnValue) == 0x000010, "Member 'Ledger_BP_C_OnIntro::ReturnValue' has a wrong offset!");

// Function Ledger_BP.Ledger_BP_C.OnOutro
// 0x0014 (0x0014 - 0x0000)
struct Ledger_BP_C_OnOutro final
{
public:
	TDelegate<void()>                             AnimationCompleteCallback;                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ledger_BP_C_OnOutro) == 0x000004, "Wrong alignment on Ledger_BP_C_OnOutro");
static_assert(sizeof(Ledger_BP_C_OnOutro) == 0x000014, "Wrong size on Ledger_BP_C_OnOutro");
static_assert(offsetof(Ledger_BP_C_OnOutro, AnimationCompleteCallback) == 0x000000, "Member 'Ledger_BP_C_OnOutro::AnimationCompleteCallback' has a wrong offset!");
static_assert(offsetof(Ledger_BP_C_OnOutro, ReturnValue) == 0x000010, "Member 'Ledger_BP_C_OnOutro::ReturnValue' has a wrong offset!");

}

