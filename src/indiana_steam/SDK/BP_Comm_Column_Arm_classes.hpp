#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Comm_Column_Arm

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Comm_Column_Arm.BP_Comm_Column_Arm_C
// 0x0030 (0x02E8 - 0x02B8)
class ABP_Comm_Column_Arm_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Light_ExamRoom04;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Light_ExamRoom03;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Light_ExamRoom02;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Light_ExamRoom01;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLit;                                             // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseLight;                                          // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Comm_Column_Arm_C">();
	}
	static class ABP_Comm_Column_Arm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Comm_Column_Arm_C>();
	}
};
static_assert(alignof(ABP_Comm_Column_Arm_C) == 0x000008, "Wrong alignment on ABP_Comm_Column_Arm_C");
static_assert(sizeof(ABP_Comm_Column_Arm_C) == 0x0002E8, "Wrong size on ABP_Comm_Column_Arm_C");
static_assert(offsetof(ABP_Comm_Column_Arm_C, Light_ExamRoom04) == 0x0002B8, "Member 'ABP_Comm_Column_Arm_C::Light_ExamRoom04' has a wrong offset!");
static_assert(offsetof(ABP_Comm_Column_Arm_C, Light_ExamRoom03) == 0x0002C0, "Member 'ABP_Comm_Column_Arm_C::Light_ExamRoom03' has a wrong offset!");
static_assert(offsetof(ABP_Comm_Column_Arm_C, Light_ExamRoom02) == 0x0002C8, "Member 'ABP_Comm_Column_Arm_C::Light_ExamRoom02' has a wrong offset!");
static_assert(offsetof(ABP_Comm_Column_Arm_C, Light_ExamRoom01) == 0x0002D0, "Member 'ABP_Comm_Column_Arm_C::Light_ExamRoom01' has a wrong offset!");
static_assert(offsetof(ABP_Comm_Column_Arm_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_Comm_Column_Arm_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Comm_Column_Arm_C, IsLit) == 0x0002E0, "Member 'ABP_Comm_Column_Arm_C::IsLit' has a wrong offset!");
static_assert(offsetof(ABP_Comm_Column_Arm_C, UseLight) == 0x0002E1, "Member 'ABP_Comm_Column_Arm_C::UseLight' has a wrong offset!");

}

