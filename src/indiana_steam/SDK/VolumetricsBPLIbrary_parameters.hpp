#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VolumetricsBPLIbrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EVolumeTextureDimensions_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Create and Assign RT
// 0x0030 (0x0030 - 0x0000)
struct VolumetricsBPLIbrary_C_Create_and_Assign_RT final
{
public:
	class UTextureRenderTarget2D*                 RT;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Size;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VolumetricsBPLIbrary_C_Create_and_Assign_RT) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_Create_and_Assign_RT");
static_assert(sizeof(VolumetricsBPLIbrary_C_Create_and_Assign_RT) == 0x000030, "Wrong size on VolumetricsBPLIbrary_C_Create_and_Assign_RT");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, RT) == 0x000000, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::RT' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, Size) == 0x000008, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, Format) == 0x000010, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::Format' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, __WorldContext) == 0x000018, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000020, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002A, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002B, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Create and Assign MID
// 0x0030 (0x0030 - 0x0000)
struct VolumetricsBPLIbrary_C_Create_and_Assign_MID final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VolumetricsBPLIbrary_C_Create_and_Assign_MID) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_Create_and_Assign_MID");
static_assert(sizeof(VolumetricsBPLIbrary_C_Create_and_Assign_MID) == 0x000030, "Wrong size on VolumetricsBPLIbrary_C_Create_and_Assign_MID");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, Mid) == 0x000000, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::Mid' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, Parent) == 0x000008, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::Parent' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, __WorldContext) == 0x000010, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.PseudoVolume Dimensions
// 0x0118 (0x0118 - 0x0000)
struct VolumetricsBPLIbrary_C_PseudoVolume_Dimensions final
{
public:
	EVolumeTextureDimensions                      Dimensions;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              RT_Size;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              XY_Frames;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Volume_Size;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeTextureDimensions                      Temp_byte_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeTextureDimensions                      Temp_byte_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_9;                            // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_10;                           // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_11;                           // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_12;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_13;                           // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_14;                           // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_15;                           // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeTextureDimensions                      Temp_byte_Variable_2;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_PseudoVolume_Dimensions");
static_assert(sizeof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions) == 0x000118, "Wrong size on VolumetricsBPLIbrary_C_PseudoVolume_Dimensions");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Dimensions) == 0x000000, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Dimensions' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, __WorldContext) == 0x000008, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, RT_Size) == 0x000010, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::RT_Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, XY_Frames) == 0x000018, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::XY_Frames' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Volume_Size) == 0x000020, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Volume_Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable) == 0x000024, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_1) == 0x000028, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_2) == 0x00002C, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_3) == 0x000030, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_4) == 0x000034, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_5) == 0x000038, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_6) == 0x00003C, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_int_Variable_7) == 0x000040, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_byte_Variable) == 0x000044, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable) == 0x000048, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_1) == 0x000050, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_2) == 0x000058, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_3) == 0x000060, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_4) == 0x000068, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_5) == 0x000070, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_6) == 0x000078, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_7) == 0x000080, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_byte_Variable_1) == 0x000088, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, K2Node_Select_Default) == 0x00008C, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_8) == 0x000094, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_BreakVector2D_X) == 0x00009C, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_FTrunc_ReturnValue) == 0x0000A4, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_FTrunc_ReturnValue_1) == 0x0000A8, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_9) == 0x0000AC, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, K2Node_MakeStruct_IntPoint) == 0x0000B4, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_10) == 0x0000BC, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_11) == 0x0000C4, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_12) == 0x0000CC, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_13) == 0x0000D4, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_14) == 0x0000DC, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_struct_Variable_15) == 0x0000E4, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Temp_byte_Variable_2) == 0x0000EC, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, K2Node_Select_Default_1) == 0x0000F0, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_BreakVector2D_X_1) == 0x0000F8, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_BreakVector2D_Y_1) == 0x0000FC, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, K2Node_Select_Default_2) == 0x000100, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_FTrunc_ReturnValue_2) == 0x000104, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, CallFunc_FTrunc_ReturnValue_3) == 0x000108, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, K2Node_MakeStruct_IntPoint_1) == 0x00010C, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.RT Size Compare
// 0x0038 (0x0038 - 0x0000)
struct VolumetricsBPLIbrary_C_RT_Size_Compare final
{
public:
	class UTextureRenderTarget2D*                 A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Match;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VolumetricsBPLIbrary_C_RT_Size_Compare) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_RT_Size_Compare");
static_assert(sizeof(VolumetricsBPLIbrary_C_RT_Size_Compare) == 0x000038, "Wrong size on VolumetricsBPLIbrary_C_RT_Size_Compare");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, A) == 0x000000, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::A' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, B) == 0x000008, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::B' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, __WorldContext) == 0x000010, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, Match) == 0x000018, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::Match' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, K2Node_MakeStruct_IntPoint) == 0x00001C, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, K2Node_MakeStruct_IntPoint_1) == 0x000028, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_BooleanAND_ReturnValue_1) == 0x000032, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, CallFunc_BooleanAND_ReturnValue_2) == 0x000033, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Get Texture Size
// 0x0058 (0x0058 - 0x0000)
struct VolumetricsBPLIbrary_C_Get_Texture_Size final
{
public:
	class UTexture*                               Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Size;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Out_Size;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_Get_Texture_Size) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_Get_Texture_Size");
static_assert(sizeof(VolumetricsBPLIbrary_C_Get_Texture_Size) == 0x000058, "Wrong size on VolumetricsBPLIbrary_C_Get_Texture_Size");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, Texture) == 0x000000, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::Texture' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, __WorldContext) == 0x000008, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, Size) == 0x000010, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, Out_Size) == 0x000018, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::Out_Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000020, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, K2Node_DynamicCast_AsTexture_2D) == 0x000030, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, K2Node_MakeStruct_IntPoint) == 0x00003C, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000044, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000048, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, K2Node_MakeStruct_IntPoint_1) == 0x00004C, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.GetFirstActorOfClass
// 0x0048 (0x0048 - 0x0000)
struct VolumetricsBPLIbrary_C_GetFirstActorOfClass final
{
public:
	class UObject*                                WorldContent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Return_Actor;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VolumetricsBPLIbrary_C_GetFirstActorOfClass) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_GetFirstActorOfClass");
static_assert(sizeof(VolumetricsBPLIbrary_C_GetFirstActorOfClass) == 0x000048, "Wrong size on VolumetricsBPLIbrary_C_GetFirstActorOfClass");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, WorldContent) == 0x000000, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::WorldContent' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, Class_0) == 0x000008, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::Class_0' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, __WorldContext) == 0x000010, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, Actor) == 0x000018, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::Actor' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, Return_Actor) == 0x000020, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::Return_Actor' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, CallFunc_Array_Get_Item) == 0x000038, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, CallFunc_Greater_IntInt_ReturnValue) == 0x000045, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

