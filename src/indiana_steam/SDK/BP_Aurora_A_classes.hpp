#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Aurora_A

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Aurora_A.BP_Aurora_A_C
// 0x0118 (0x03D0 - 0x02B8)
class ABP_Aurora_A_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SplineMesh;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInTimeline_Opacity_28FCB620481DBB374A282AA32B9F9E2B; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeInTimeline__Direction_28FCB620481DBB374A282AA32B9F9E2B; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeInTimeline;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AuroraDynMat;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AuroraBottomDynMat;                                // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasUnderside;                                      // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MeshToUse;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         StartOpacity;                                      // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideColor;                                     // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TopColor;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TopToBottomRatio;                                  // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BottomColor;                                       // 0x031C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnderColor;                                        // 0x032C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     timeCurve;                                         // 0x0340(0x0088)(Edit, BlueprintVisible)
	float                                         Emissive;                                          // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Aurora_A(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void FadeIn(float FadeTimeSeconds);
	void FadeOut(float FadeTimeSeconds);
	void FadeInTimeline__UpdateFunc();
	void FadeInTimeline__FinishedFunc();
	void UserConstructionScript();
	void Set_Emissive(float Emissive_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Aurora_A_C">();
	}
	static class ABP_Aurora_A_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Aurora_A_C>();
	}
};
static_assert(alignof(ABP_Aurora_A_C) == 0x000008, "Wrong alignment on ABP_Aurora_A_C");
static_assert(sizeof(ABP_Aurora_A_C) == 0x0003D0, "Wrong size on ABP_Aurora_A_C");
static_assert(offsetof(ABP_Aurora_A_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_Aurora_A_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, SplineMesh) == 0x0002C0, "Member 'ABP_Aurora_A_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_Aurora_A_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, FadeInTimeline_Opacity_28FCB620481DBB374A282AA32B9F9E2B) == 0x0002D0, "Member 'ABP_Aurora_A_C::FadeInTimeline_Opacity_28FCB620481DBB374A282AA32B9F9E2B' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, FadeInTimeline__Direction_28FCB620481DBB374A282AA32B9F9E2B) == 0x0002D4, "Member 'ABP_Aurora_A_C::FadeInTimeline__Direction_28FCB620481DBB374A282AA32B9F9E2B' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, FadeInTimeline) == 0x0002D8, "Member 'ABP_Aurora_A_C::FadeInTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, AuroraDynMat) == 0x0002E0, "Member 'ABP_Aurora_A_C::AuroraDynMat' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, AuroraBottomDynMat) == 0x0002E8, "Member 'ABP_Aurora_A_C::AuroraBottomDynMat' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, HasUnderside) == 0x0002F0, "Member 'ABP_Aurora_A_C::HasUnderside' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, MeshToUse) == 0x0002F8, "Member 'ABP_Aurora_A_C::MeshToUse' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, StartOpacity) == 0x000300, "Member 'ABP_Aurora_A_C::StartOpacity' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, OverrideColor) == 0x000304, "Member 'ABP_Aurora_A_C::OverrideColor' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, TopColor) == 0x000308, "Member 'ABP_Aurora_A_C::TopColor' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, TopToBottomRatio) == 0x000318, "Member 'ABP_Aurora_A_C::TopToBottomRatio' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, BottomColor) == 0x00031C, "Member 'ABP_Aurora_A_C::BottomColor' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, UnderColor) == 0x00032C, "Member 'ABP_Aurora_A_C::UnderColor' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, timeCurve) == 0x000340, "Member 'ABP_Aurora_A_C::timeCurve' has a wrong offset!");
static_assert(offsetof(ABP_Aurora_A_C, Emissive) == 0x0003C8, "Member 'ABP_Aurora_A_C::Emissive' has a wrong offset!");

}

