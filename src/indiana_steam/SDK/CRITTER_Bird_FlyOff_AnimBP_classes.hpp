#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRITTER_Bird_FlyOff_AnimBP

#include "Basic.hpp"

#include "Indiana_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass CRITTER_Bird_FlyOff_AnimBP.CRITTER_Bird_FlyOff_AnimBP_C
// 0x0350 (0x0630 - 0x02E0)
class UCRITTER_Bird_FlyOff_AnimBP_C final : public UReactiveEnvironmentAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02E8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0318(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0340(0x0028)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x0368(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x03E8(0x0030)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x0418(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0498(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x04C8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0548(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0578(0x00B0)()
	bool                                          RandomIdle;                                        // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CRITTER_Bird_FlyOff_AnimBP(int32 EntryPoint);
	void AnimNotify_RandomIdle();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CRITTER_Bird_FlyOff_AnimBP_C">();
	}
	static class UCRITTER_Bird_FlyOff_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRITTER_Bird_FlyOff_AnimBP_C>();
	}
};
static_assert(alignof(UCRITTER_Bird_FlyOff_AnimBP_C) == 0x000010, "Wrong alignment on UCRITTER_Bird_FlyOff_AnimBP_C");
static_assert(sizeof(UCRITTER_Bird_FlyOff_AnimBP_C) == 0x000630, "Wrong size on UCRITTER_Bird_FlyOff_AnimBP_C");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, UberGraphFrame) == 0x0002E0, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_Root) == 0x0002E8, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000318, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000340, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_RandomPlayer_1) == 0x000368, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0003E8, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_RandomPlayer) == 0x000418, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000498, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0004C8, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_StateResult) == 0x000548, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, AnimGraphNode_StateMachine) == 0x000578, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UCRITTER_Bird_FlyOff_AnimBP_C, RandomIdle) == 0x000628, "Member 'UCRITTER_Bird_FlyOff_AnimBP_C::RandomIdle' has a wrong offset!");

}

