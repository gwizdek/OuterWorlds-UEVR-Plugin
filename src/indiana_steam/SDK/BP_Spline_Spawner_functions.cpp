#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spline_Spawner

#include "Basic.hpp"

#include "BP_Spline_Spawner_classes.hpp"
#include "BP_Spline_Spawner_parameters.hpp"


namespace SDK
{

// Function BP_Spline_Spawner.BP_Spline_Spawner_C.ExecuteUbergraph_BP_Spline_Spawner
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spline_Spawner_C::ExecuteUbergraph_BP_Spline_Spawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "ExecuteUbergraph_BP_Spline_Spawner");

	Params::BP_Spline_Spawner_C_ExecuteUbergraph_BP_Spline_Spawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Trigger_Enter
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Spline_Spawner_C::Trigger_Enter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Trigger_Enter");

	Params::BP_Spline_Spawner_C_Trigger_Enter Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Spline_Spawner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Trigger
// (BlueprintCallable, BlueprintEvent)

void ABP_Spline_Spawner_C::Trigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Trigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Stop
// (BlueprintCallable, BlueprintEvent)

void ABP_Spline_Spawner_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Level_Spline
// (BlueprintCallable, BlueprintEvent)

void ABP_Spline_Spawner_C::Level_Spline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Level_Spline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse_Mesh__Spline_Start__EventFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse_Mesh__Spline_Start__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse_Mesh__Spline_Start__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse_Mesh__Spline_End__EventFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse_Mesh__Spline_End__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse_Mesh__Spline_End__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse_Mesh__UpdateFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse_Mesh__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse_Mesh__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse_Mesh__FinishedFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse_Mesh__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse_Mesh__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse__Spline_Start__EventFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse__Spline_Start__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse__Spline_Start__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse__Spline_End__EventFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse__Spline_End__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse__Spline_End__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse__UpdateFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Spline_Traverse__FinishedFunc
// (BlueprintEvent)

void ABP_Spline_Spawner_C::Spline_Traverse__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Spline_Traverse__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Spline_Spawner_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Random_Mesh_Selection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SpecifyShip                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ShipSlot_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ArrayElement                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spline_Spawner_C::Random_Mesh_Selection(bool SpecifyShip, int32 ShipSlot_0, int32* ArrayElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Random_Mesh_Selection");

	Params::BP_Spline_Spawner_C_Random_Mesh_Selection Parms{};

	Parms.SpecifyShip = SpecifyShip;
	Parms.ShipSlot_0 = ShipSlot_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ArrayElement != nullptr)
		*ArrayElement = Parms.ArrayElement;
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Sort_Socket_Names
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     SocketNamesToSort                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     VFXSocketNames                                         (Parm, OutParm)
// TArray<class FName>                     SFXSocketNames                                         (Parm, OutParm)

void ABP_Spline_Spawner_C::Sort_Socket_Names(TArray<class FName>& SocketNamesToSort, TArray<class FName>* VFXSocketNames, TArray<class FName>* SFXSocketNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Sort_Socket_Names");

	Params::BP_Spline_Spawner_C_Sort_Socket_Names Parms{};

	Parms.SocketNamesToSort = std::move(SocketNamesToSort);

	UObject::ProcessEvent(Func, &Parms);

	SocketNamesToSort = std::move(Parms.SocketNamesToSort);

	if (VFXSocketNames != nullptr)
		*VFXSocketNames = std::move(Parms.VFXSocketNames);

	if (SFXSocketNames != nullptr)
		*SFXSocketNames = std::move(Parms.SFXSocketNames);
}


// Function BP_Spline_Spawner.BP_Spline_Spawner_C.Sound_Initialize_Emitters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     SFXSocketNames                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SelectedElement                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Spline_Spawner_C::Sound_Initialize_Emitters(TArray<class FName>& SFXSocketNames, int32 SelectedElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Spline_Spawner_C", "Sound_Initialize_Emitters");

	Params::BP_Spline_Spawner_C_Sound_Initialize_Emitters Parms{};

	Parms.SFXSocketNames = std::move(SFXSocketNames);
	Parms.SelectedElement = SelectedElement;

	UObject::ProcessEvent(Func, &Parms);

	SFXSocketNames = std::move(Parms.SFXSocketNames);
}

}

