#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lab_WallSconce

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lab_WallSconce.BP_Lab_WallSconce_C
// 0x0058 (0x0310 - 0x02B8)
class ABP_Lab_WallSconce_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   Interior;                                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_LAB_WallSconce;                                // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightIntensity;                                    // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightOn;                                           // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LightColor;                                        // 0x02EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightTemperature;                                  // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Outer_Cone_Angle;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Inner_Cone_Angle;                                  // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLight;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Lab_WallSconce(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lab_WallSconce_C">();
	}
	static class ABP_Lab_WallSconce_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lab_WallSconce_C>();
	}
};
static_assert(alignof(ABP_Lab_WallSconce_C) == 0x000008, "Wrong alignment on ABP_Lab_WallSconce_C");
static_assert(sizeof(ABP_Lab_WallSconce_C) == 0x000310, "Wrong size on ABP_Lab_WallSconce_C");
static_assert(offsetof(ABP_Lab_WallSconce_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_Lab_WallSconce_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, Interior) == 0x0002C0, "Member 'ABP_Lab_WallSconce_C::Interior' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, SpotLight) == 0x0002C8, "Member 'ABP_Lab_WallSconce_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, ENV_LAB_WallSconce) == 0x0002D0, "Member 'ABP_Lab_WallSconce_C::ENV_LAB_WallSconce' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_Lab_WallSconce_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, LightIntensity) == 0x0002E0, "Member 'ABP_Lab_WallSconce_C::LightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, AttenuationRadius) == 0x0002E4, "Member 'ABP_Lab_WallSconce_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, LightOn) == 0x0002E8, "Member 'ABP_Lab_WallSconce_C::LightOn' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, LightColor) == 0x0002EC, "Member 'ABP_Lab_WallSconce_C::LightColor' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, LightTemperature) == 0x0002FC, "Member 'ABP_Lab_WallSconce_C::LightTemperature' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, Outer_Cone_Angle) == 0x000300, "Member 'ABP_Lab_WallSconce_C::Outer_Cone_Angle' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, Inner_Cone_Angle) == 0x000304, "Member 'ABP_Lab_WallSconce_C::Inner_Cone_Angle' has a wrong offset!");
static_assert(offsetof(ABP_Lab_WallSconce_C, UseLight) == 0x000308, "Member 'ABP_Lab_WallSconce_C::UseLight' has a wrong offset!");

}

