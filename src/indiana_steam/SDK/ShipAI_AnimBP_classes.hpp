#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShipAI_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"
#include "Engine_structs.hpp"
#include "FaceFX_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ShipAI_AnimBP.ShipAI_AnimBP_C
// 0x0890 (0x11E0 - 0x0950)
class UShipAI_AnimBP_C final : public UTPVAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0950(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0958(0x0030)()
	struct FAnimNode_BlendFaceFXAnimation         AnimGraphNode_BlendFaceFXAnimation;                // 0x0988(0x0060)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x09E8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0A08(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0A28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0A50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0A78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0AA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0AC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0AF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0B18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0B40(0x0028)()
	struct FAnimNode_RandomSequenceNamed          AnimGraphNode_RandomSequenceNamed_1;               // 0x0B68(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0BF0(0x0030)()
	struct FAnimNode_RandomSequenceNamed          AnimGraphNode_RandomSequenceNamed;                 // 0x0C20(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0CA8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0CD8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0D58(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0D88(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0E38(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0EB8(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0F80(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1020(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1178(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x11A0(0x0028)()
	class UWeaponAnimationsTPV_BP_C*              WeaponAnimationsBP;                                // 0x11C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookLeftTriggered;                                 // 0x11D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ShipAI_AnimBP(int32 EntryPoint);
	void AnimNotify_StopLookLeft();
	void AnimNotify_TriggerLookLeft();
	void OnNewWeaponAnimations(class UWeaponAnimations* NewWeaponAnimations);
	void AnimNotify_CombatIdleStateTransition();
	void AnimNotify_CombatReadyTransition();
	void OnRebuildAnimationSetData();
	void SetPersonality(class UTPVPersonalitySet* Personality);
	void OnNewLocomotionAnimationSet(class ULocomotionAnimationSet* NewLocomtionAnimationSet);
	void AnimNotify_ResetRandomIdle();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void UpdateAnimationParams();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShipAI_AnimBP_C">();
	}
	static class UShipAI_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShipAI_AnimBP_C>();
	}
};
static_assert(alignof(UShipAI_AnimBP_C) == 0x000010, "Wrong alignment on UShipAI_AnimBP_C");
static_assert(sizeof(UShipAI_AnimBP_C) == 0x0011E0, "Wrong size on UShipAI_AnimBP_C");
static_assert(offsetof(UShipAI_AnimBP_C, UberGraphFrame) == 0x000950, "Member 'UShipAI_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_Root) == 0x000958, "Member 'UShipAI_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_BlendFaceFXAnimation) == 0x000988, "Member 'UShipAI_AnimBP_C::AnimGraphNode_BlendFaceFXAnimation' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0009E8, "Member 'UShipAI_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000A08, "Member 'UShipAI_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000A28, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000A50, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000A78, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000AA0, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000AC8, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000AF0, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000B18, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000B40, "Member 'UShipAI_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_RandomSequenceNamed_1) == 0x000B68, "Member 'UShipAI_AnimBP_C::AnimGraphNode_RandomSequenceNamed_1' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000BF0, "Member 'UShipAI_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_RandomSequenceNamed) == 0x000C20, "Member 'UShipAI_AnimBP_C::AnimGraphNode_RandomSequenceNamed' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000CA8, "Member 'UShipAI_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000CD8, "Member 'UShipAI_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_StateResult) == 0x000D58, "Member 'UShipAI_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_StateMachine) == 0x000D88, "Member 'UShipAI_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000E38, "Member 'UShipAI_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000EB8, "Member 'UShipAI_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x000F80, "Member 'UShipAI_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001020, "Member 'UShipAI_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001178, "Member 'UShipAI_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x0011A0, "Member 'UShipAI_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, WeaponAnimationsBP) == 0x0011C8, "Member 'UShipAI_AnimBP_C::WeaponAnimationsBP' has a wrong offset!");
static_assert(offsetof(UShipAI_AnimBP_C, LookLeftTriggered) == 0x0011D0, "Member 'UShipAI_AnimBP_C::LookLeftTriggered' has a wrong offset!");

}

