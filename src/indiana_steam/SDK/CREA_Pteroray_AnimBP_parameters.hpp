#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CREA_Pteroray_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CREA_Pteroray_AnimBP.CREA_Pteroray_AnimBP_C.ExecuteUbergraph_CREA_Pteroray_AnimBP
// 0x0030 (0x0030 - 0x0000)
struct CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMontagePlayingOnSlot_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMontagePlayingOnSlot_ReturnValue_1;     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAnimations*                      K2Node_Event_NewWeaponAnimations;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCREA_Pteroray_WeaponAnimations_BP_C*   K2Node_DynamicCast_AsCREA_Pteroray_Weapon_Animations_BP; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP) == 0x000008, "Wrong alignment on CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP");
static_assert(sizeof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP) == 0x000030, "Wrong size on CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, EntryPoint) == 0x000000, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, CallFunc_IsMontagePlayingOnSlot_ReturnValue) == 0x000004, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::CallFunc_IsMontagePlayingOnSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, CallFunc_IsMontagePlayingOnSlot_ReturnValue_1) == 0x00000C, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::CallFunc_IsMontagePlayingOnSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, K2Node_Event_NewWeaponAnimations) == 0x000018, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::K2Node_Event_NewWeaponAnimations' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, K2Node_DynamicCast_AsCREA_Pteroray_Weapon_Animations_BP) == 0x000020, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::K2Node_DynamicCast_AsCREA_Pteroray_Weapon_Animations_BP' has a wrong offset!");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'CREA_Pteroray_AnimBP_C_ExecuteUbergraph_CREA_Pteroray_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CREA_Pteroray_AnimBP.CREA_Pteroray_AnimBP_C.OnNewWeaponAnimations
// 0x0008 (0x0008 - 0x0000)
struct CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations final
{
public:
	class UWeaponAnimations*                      NewWeaponAnimations;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations) == 0x000008, "Wrong alignment on CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations");
static_assert(sizeof(CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations) == 0x000008, "Wrong size on CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations, NewWeaponAnimations) == 0x000000, "Member 'CREA_Pteroray_AnimBP_C_OnNewWeaponAnimations::NewWeaponAnimations' has a wrong offset!");

// Function CREA_Pteroray_AnimBP.CREA_Pteroray_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'CREA_Pteroray_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function CREA_Pteroray_AnimBP.CREA_Pteroray_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct CREA_Pteroray_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(CREA_Pteroray_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on CREA_Pteroray_AnimBP_C_AnimGraph");
static_assert(sizeof(CREA_Pteroray_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on CREA_Pteroray_AnimBP_C_AnimGraph");
static_assert(offsetof(CREA_Pteroray_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'CREA_Pteroray_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

