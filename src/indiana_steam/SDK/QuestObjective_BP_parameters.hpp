#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestObjective_BP

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function QuestObjective_BP.QuestObjective_BP_C.ExecuteUbergraph_QuestObjective_BP
// 0x0128 (0x0128 - 0x0000)
struct QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompletionStatus                             K2Node_Event_ObjectiveStatus;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetColorAndOpacity_ReturnValue;           // 0x0008(0x0028)()
	struct FSlateColor                            CallFunc_GetColorAndOpacity_ReturnValue_1;         // 0x0030(0x0028)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00A0(0x0028)()
	struct FSlateColor                            CallFunc_GetColorAndOpacity_ReturnValue_2;         // 0x00C8(0x0028)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0100(0x0028)()
};
static_assert(alignof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP) == 0x000008, "Wrong alignment on QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP");
static_assert(sizeof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP) == 0x000128, "Wrong size on QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, EntryPoint) == 0x000000, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_Event_ObjectiveStatus) == 0x000004, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_Event_ObjectiveStatus' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, CallFunc_GetColorAndOpacity_ReturnValue) == 0x000008, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::CallFunc_GetColorAndOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, CallFunc_GetColorAndOpacity_ReturnValue_1) == 0x000030, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::CallFunc_GetColorAndOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_MakeStruct_LinearColor) == 0x000058, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_MakeStruct_LinearColor_1) == 0x000068, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_MakeStruct_SlateColor_1) == 0x0000A0, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, CallFunc_GetColorAndOpacity_ReturnValue_2) == 0x0000C8, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::CallFunc_GetColorAndOpacity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_MakeStruct_LinearColor_2) == 0x0000F0, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP, K2Node_MakeStruct_SlateColor_2) == 0x000100, "Member 'QuestObjective_BP_C_ExecuteUbergraph_QuestObjective_BP::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function QuestObjective_BP.QuestObjective_BP_C.OnObjectiveStatusChange
// 0x0001 (0x0001 - 0x0000)
struct QuestObjective_BP_C_OnObjectiveStatusChange final
{
public:
	ECompletionStatus                             ObjectiveStatus;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestObjective_BP_C_OnObjectiveStatusChange) == 0x000001, "Wrong alignment on QuestObjective_BP_C_OnObjectiveStatusChange");
static_assert(sizeof(QuestObjective_BP_C_OnObjectiveStatusChange) == 0x000001, "Wrong size on QuestObjective_BP_C_OnObjectiveStatusChange");
static_assert(offsetof(QuestObjective_BP_C_OnObjectiveStatusChange, ObjectiveStatus) == 0x000000, "Member 'QuestObjective_BP_C_OnObjectiveStatusChange::ObjectiveStatus' has a wrong offset!");

}

