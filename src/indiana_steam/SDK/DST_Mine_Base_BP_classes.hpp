#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DST_Mine_Base_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Destructible_Abstract_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DST_Mine_Base_BP.DST_Mine_Base_BP_C
// 0x00E0 (0x0580 - 0x04A0)
class ADST_Mine_Base_BP_C : public ADestructible_Abstract_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_DST_Mine_Base_BP_C;                 // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_RadialMask_56A17DD9445E7A2F33B9B59599E8B19E; // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_56A17DD9445E7A2F33B9B59599E8B19E; // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ExplosionFX;                                       // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FParticleSysParam>              BaseParams;                                        // 0x04D0(0x0010)(Edit, BlueprintVisible)
	class UParticleSystem*                        ExplosionFXDamageType;                             // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FParticleSysParam>              DamageTypeParams;                                  // 0x04E8(0x0010)(Edit, BlueprintVisible)
	bool                                          bDestroyed;                                        // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Light_intensity;                                   // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 LightColor;                                        // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temperature;                                       // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpecularScale;                                     // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNiagara;                                         // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Niagara_ExplosionFX;                               // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDecals;                                         // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Decal_Material;                                    // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Decal_Size;                                        // 0x0530(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        MainDecal;                                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSecondaryDecals;                                // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     SecondaryDecalMaterial;                            // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SecondaryDecalSize;                                // 0x0558(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        SecondaryDecal;                                    // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryDecalLifetime;                            // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryDecalFadeOut;                             // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SecondaryDecalSorting;                             // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DynamicDecals;                                     // 0x0579(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_DST_Mine_Base_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SpawnExplosion();
	void HideLight();
	void ReceiveTriggerUntripped();
	void ReceiveTriggerTripped();
	void OnDestructibleDestroyed_Event_0(class AActor* Instigator_0);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void SetLightParameters(const struct FColor& Color, float LightIntensity, float SpecularScale_0, float Temperature_0, float AttenuationRadius_0);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DST_Mine_Base_BP_C">();
	}
	static class ADST_Mine_Base_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADST_Mine_Base_BP_C>();
	}
};
static_assert(alignof(ADST_Mine_Base_BP_C) == 0x000008, "Wrong alignment on ADST_Mine_Base_BP_C");
static_assert(sizeof(ADST_Mine_Base_BP_C) == 0x000580, "Wrong size on ADST_Mine_Base_BP_C");
static_assert(offsetof(ADST_Mine_Base_BP_C, UberGraphFrame_DST_Mine_Base_BP_C) == 0x0004A0, "Member 'ADST_Mine_Base_BP_C::UberGraphFrame_DST_Mine_Base_BP_C' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, PointLight) == 0x0004A8, "Member 'ADST_Mine_Base_BP_C::PointLight' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, TextRender) == 0x0004B0, "Member 'ADST_Mine_Base_BP_C::TextRender' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Timeline_0_RadialMask_56A17DD9445E7A2F33B9B59599E8B19E) == 0x0004B8, "Member 'ADST_Mine_Base_BP_C::Timeline_0_RadialMask_56A17DD9445E7A2F33B9B59599E8B19E' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Timeline_0__Direction_56A17DD9445E7A2F33B9B59599E8B19E) == 0x0004BC, "Member 'ADST_Mine_Base_BP_C::Timeline_0__Direction_56A17DD9445E7A2F33B9B59599E8B19E' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Timeline_0) == 0x0004C0, "Member 'ADST_Mine_Base_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, ExplosionFX) == 0x0004C8, "Member 'ADST_Mine_Base_BP_C::ExplosionFX' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, BaseParams) == 0x0004D0, "Member 'ADST_Mine_Base_BP_C::BaseParams' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, ExplosionFXDamageType) == 0x0004E0, "Member 'ADST_Mine_Base_BP_C::ExplosionFXDamageType' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, DamageTypeParams) == 0x0004E8, "Member 'ADST_Mine_Base_BP_C::DamageTypeParams' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, bDestroyed) == 0x0004F8, "Member 'ADST_Mine_Base_BP_C::bDestroyed' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Light_intensity) == 0x0004FC, "Member 'ADST_Mine_Base_BP_C::Light_intensity' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, LightColor) == 0x000500, "Member 'ADST_Mine_Base_BP_C::LightColor' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Temperature) == 0x000504, "Member 'ADST_Mine_Base_BP_C::Temperature' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SpecularScale) == 0x000508, "Member 'ADST_Mine_Base_BP_C::SpecularScale' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, AttenuationRadius) == 0x00050C, "Member 'ADST_Mine_Base_BP_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, IsNiagara) == 0x000510, "Member 'ADST_Mine_Base_BP_C::IsNiagara' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Niagara_ExplosionFX) == 0x000518, "Member 'ADST_Mine_Base_BP_C::Niagara_ExplosionFX' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, UseDecals) == 0x000520, "Member 'ADST_Mine_Base_BP_C::UseDecals' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Decal_Material) == 0x000528, "Member 'ADST_Mine_Base_BP_C::Decal_Material' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, Decal_Size) == 0x000530, "Member 'ADST_Mine_Base_BP_C::Decal_Size' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, MainDecal) == 0x000540, "Member 'ADST_Mine_Base_BP_C::MainDecal' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, UseSecondaryDecals) == 0x000548, "Member 'ADST_Mine_Base_BP_C::UseSecondaryDecals' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SecondaryDecalMaterial) == 0x000550, "Member 'ADST_Mine_Base_BP_C::SecondaryDecalMaterial' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SecondaryDecalSize) == 0x000558, "Member 'ADST_Mine_Base_BP_C::SecondaryDecalSize' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SecondaryDecal) == 0x000568, "Member 'ADST_Mine_Base_BP_C::SecondaryDecal' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SecondaryDecalLifetime) == 0x000570, "Member 'ADST_Mine_Base_BP_C::SecondaryDecalLifetime' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SecondaryDecalFadeOut) == 0x000574, "Member 'ADST_Mine_Base_BP_C::SecondaryDecalFadeOut' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, SecondaryDecalSorting) == 0x000578, "Member 'ADST_Mine_Base_BP_C::SecondaryDecalSorting' has a wrong offset!");
static_assert(offsetof(ADST_Mine_Base_BP_C, DynamicDecals) == 0x000579, "Member 'ADST_Mine_Base_BP_C::DynamicDecals' has a wrong offset!");

}

