#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelUpNotification_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Indiana_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LevelUpNotification_BP.LevelUpNotification_BP_C
// 0x0088 (0x0468 - 0x03E0)
class ULevelUpNotification_BP_C final : public ULevelUpNotificationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeInLevelUpReminder;                             // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SecondaryFadeIn;                                   // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PrimaryTextGrow;                                   // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SunSpin;                                           // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GlowFade;                                          // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GlowBall;                                          // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GlowGrow;                                          // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GlowShrink;                                        // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PrimaryFadeIn;                                     // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 InputLabelBacking;                                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ReminderBacking;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GlowMaterial_0;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LeftWingMaterial_0;                                // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RightWingMaterial_0;                               // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStartWingIntro;                                 // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanStartWingOutro;                                 // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_LevelUpNotification_BP(int32 EntryPoint);
	void OnLevelUpComplete();
	class UWidgetAnimation* GetGlowballAnimation();
	class UWidgetAnimation* GetTextAndSunFadeOutAnimation();
	class UWidgetAnimation* GetSunSpinAnimation();
	class UWidgetAnimation* GetSecondaryTextFadeInAnimation();
	class UWidgetAnimation* GetPrimaryTextGrowAnimation();
	class UWidgetAnimation* GetPrimaryTextAndSunFadeInAnimation();
	class UWidgetAnimation* GetGlowShrinkAnimation();
	class UWidgetAnimation* GetGlowGrowAnimation();
	class UWidgetAnimation* GetGlowFadeAnimation();
	class UWidgetAnimation* GetLevelUpReminderAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LevelUpNotification_BP_C">();
	}
	static class ULevelUpNotification_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelUpNotification_BP_C>();
	}
};
static_assert(alignof(ULevelUpNotification_BP_C) == 0x000008, "Wrong alignment on ULevelUpNotification_BP_C");
static_assert(sizeof(ULevelUpNotification_BP_C) == 0x000468, "Wrong size on ULevelUpNotification_BP_C");
static_assert(offsetof(ULevelUpNotification_BP_C, UberGraphFrame) == 0x0003E0, "Member 'ULevelUpNotification_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, FadeInLevelUpReminder) == 0x0003E8, "Member 'ULevelUpNotification_BP_C::FadeInLevelUpReminder' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, SecondaryFadeIn) == 0x0003F0, "Member 'ULevelUpNotification_BP_C::SecondaryFadeIn' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, PrimaryTextGrow) == 0x0003F8, "Member 'ULevelUpNotification_BP_C::PrimaryTextGrow' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, SunSpin) == 0x000400, "Member 'ULevelUpNotification_BP_C::SunSpin' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, GlowFade) == 0x000408, "Member 'ULevelUpNotification_BP_C::GlowFade' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, GlowBall) == 0x000410, "Member 'ULevelUpNotification_BP_C::GlowBall' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, GlowGrow) == 0x000418, "Member 'ULevelUpNotification_BP_C::GlowGrow' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, GlowShrink) == 0x000420, "Member 'ULevelUpNotification_BP_C::GlowShrink' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, FadeOut) == 0x000428, "Member 'ULevelUpNotification_BP_C::FadeOut' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, PrimaryFadeIn) == 0x000430, "Member 'ULevelUpNotification_BP_C::PrimaryFadeIn' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, InputLabelBacking) == 0x000438, "Member 'ULevelUpNotification_BP_C::InputLabelBacking' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, ReminderBacking) == 0x000440, "Member 'ULevelUpNotification_BP_C::ReminderBacking' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, GlowMaterial_0) == 0x000448, "Member 'ULevelUpNotification_BP_C::GlowMaterial_0' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, LeftWingMaterial_0) == 0x000450, "Member 'ULevelUpNotification_BP_C::LeftWingMaterial_0' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, RightWingMaterial_0) == 0x000458, "Member 'ULevelUpNotification_BP_C::RightWingMaterial_0' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, CanStartWingIntro) == 0x000460, "Member 'ULevelUpNotification_BP_C::CanStartWingIntro' has a wrong offset!");
static_assert(offsetof(ULevelUpNotification_BP_C, CanStartWingOutro) == 0x000461, "Member 'ULevelUpNotification_BP_C::CanStartWingOutro' has a wrong offset!");

}

