#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IndianaPlayerCharacter_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass IndianaPlayerCharacter_BP.IndianaPlayerCharacter_BP_C
// 0x00E0 (0x18A0 - 0x17C0)
#pragma pack(push, 0x1)
class alignas(0x10) AIndianaPlayerCharacter_BP_C : public AIndianaPlayerCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x17C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UForcedAnimationComponent*              ForcedAnimation;                                   // 0x17C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       QuickMeleeCollisionEnd;                            // 0x17D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       QuickMeleeCollisionStart;                          // 0x17D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UIdleCameraComponent*                   IdleCamera;                                        // 0x17E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMedKitComponent*                       MedKit;                                            // 0x17E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerAppearanceComponent*             PlayerAppearance;                                  // 0x17F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerStatComponent_C*                 PlayerStatComponent;                               // 0x17F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCompanionMoveToWC_3D_C*                CompanionMoveToWC_3D;                              // 0x1800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CinematicConversationCamera;                       // 0x1808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    Equipment;                                         // 0x1810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEnemyScannerComponent*                 EnemyScanner;                                      // 0x1818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerShoutComponent*                  PlayerShout;                                       // 0x1820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionLegs;                                     // 0x1828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionChest;                                    // 0x1830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionLeftArm;                                  // 0x1838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CollisionRightArm;                                 // 0x1840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CollisionHead;                                     // 0x1848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerDeathComponent*                  PlayerDeath;                                       // 0x1850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerHealthComponent*                 PlayerHealth;                                      // 0x1858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Flash;                                             // 0x1860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x1864(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1865[0x3];                                     // 0x1865(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MPC_Value;                                         // 0x1868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stealth_Transition;                                // 0x186C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Vignette;                                      // 0x1870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGlobalVariable                        SpectrumVodkaVariables;                            // 0x1878(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         AllVodkaItems;                                     // 0x1888(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_IndianaPlayerCharacter_BP(int32 EntryPoint);
	void BndEvt__IndianaPlayerCharacter_BP_PlayerHealth_K2Node_ComponentBoundEvent_1_WarnPlayerLowHealthEvent__DelegateSignature();
	void VodkaItemBind();
	void ItemAcquired(const struct FItemStack& Item);
	void PlayerCinematicChange(bool bCinematicMode);
	void ReceiveBeginPlay();
	void Stealth_Exit();
	void Stealth();
	void OnPlayerSoftCoverExitedBP();
	void OnPlayerSoftCoverEnteredBP();
	void OnPlayerStealthExitedBP();
	void OnPlayerStealthEnteredBP();
	void MPC_Update();
	void PP_Update();
	void BndEvt__PlayerHealth_K2Node_ComponentBoundEvent_2_NewStateOfBeingEvent__DelegateSignature(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing);
	void BndEvt__PlayerHealth_K2Node_ComponentBoundEvent_0_OnDeath__DelegateSignature(const struct FCauseDamageInfo& CauseDamageInfo);
	void CheckVodka();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IndianaPlayerCharacter_BP_C">();
	}
	static class AIndianaPlayerCharacter_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIndianaPlayerCharacter_BP_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AIndianaPlayerCharacter_BP_C) == 0x000010, "Wrong alignment on AIndianaPlayerCharacter_BP_C");
static_assert(sizeof(AIndianaPlayerCharacter_BP_C) == 0x0018A0, "Wrong size on AIndianaPlayerCharacter_BP_C");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, UberGraphFrame) == 0x0017C0, "Member 'AIndianaPlayerCharacter_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, ForcedAnimation) == 0x0017C8, "Member 'AIndianaPlayerCharacter_BP_C::ForcedAnimation' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, QuickMeleeCollisionEnd) == 0x0017D0, "Member 'AIndianaPlayerCharacter_BP_C::QuickMeleeCollisionEnd' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, QuickMeleeCollisionStart) == 0x0017D8, "Member 'AIndianaPlayerCharacter_BP_C::QuickMeleeCollisionStart' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, IdleCamera) == 0x0017E0, "Member 'AIndianaPlayerCharacter_BP_C::IdleCamera' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, MedKit) == 0x0017E8, "Member 'AIndianaPlayerCharacter_BP_C::MedKit' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, PlayerAppearance) == 0x0017F0, "Member 'AIndianaPlayerCharacter_BP_C::PlayerAppearance' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, PlayerStatComponent) == 0x0017F8, "Member 'AIndianaPlayerCharacter_BP_C::PlayerStatComponent' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CompanionMoveToWC_3D) == 0x001800, "Member 'AIndianaPlayerCharacter_BP_C::CompanionMoveToWC_3D' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CinematicConversationCamera) == 0x001808, "Member 'AIndianaPlayerCharacter_BP_C::CinematicConversationCamera' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, Equipment) == 0x001810, "Member 'AIndianaPlayerCharacter_BP_C::Equipment' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, EnemyScanner) == 0x001818, "Member 'AIndianaPlayerCharacter_BP_C::EnemyScanner' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, PlayerShout) == 0x001820, "Member 'AIndianaPlayerCharacter_BP_C::PlayerShout' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CollisionLegs) == 0x001828, "Member 'AIndianaPlayerCharacter_BP_C::CollisionLegs' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CollisionChest) == 0x001830, "Member 'AIndianaPlayerCharacter_BP_C::CollisionChest' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CollisionLeftArm) == 0x001838, "Member 'AIndianaPlayerCharacter_BP_C::CollisionLeftArm' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CollisionRightArm) == 0x001840, "Member 'AIndianaPlayerCharacter_BP_C::CollisionRightArm' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, CollisionHead) == 0x001848, "Member 'AIndianaPlayerCharacter_BP_C::CollisionHead' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, PlayerDeath) == 0x001850, "Member 'AIndianaPlayerCharacter_BP_C::PlayerDeath' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, PlayerHealth) == 0x001858, "Member 'AIndianaPlayerCharacter_BP_C::PlayerHealth' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, Flash) == 0x001860, "Member 'AIndianaPlayerCharacter_BP_C::Flash' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, Dead) == 0x001864, "Member 'AIndianaPlayerCharacter_BP_C::Dead' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, MPC_Value) == 0x001868, "Member 'AIndianaPlayerCharacter_BP_C::MPC_Value' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, Stealth_Transition) == 0x00186C, "Member 'AIndianaPlayerCharacter_BP_C::Stealth_Transition' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, MID_Vignette) == 0x001870, "Member 'AIndianaPlayerCharacter_BP_C::MID_Vignette' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, SpectrumVodkaVariables) == 0x001878, "Member 'AIndianaPlayerCharacter_BP_C::SpectrumVodkaVariables' has a wrong offset!");
static_assert(offsetof(AIndianaPlayerCharacter_BP_C, AllVodkaItems) == 0x001888, "Member 'AIndianaPlayerCharacter_BP_C::AllVodkaItems' has a wrong offset!");

}

