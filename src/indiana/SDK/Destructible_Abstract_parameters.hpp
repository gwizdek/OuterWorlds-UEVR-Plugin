#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Destructible_Abstract

#include "Basic.hpp"

#include "Indiana_structs.hpp"


namespace SDK::Params
{

// Function Destructible_Abstract.Destructible_Abstract_C.ExecuteUbergraph_Destructible_Abstract
// 0x0048 (0x0048 - 0x0000)
struct Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Instigator)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Instigator)>     K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Instigator_1;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Instigator;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract) == 0x000008, "Wrong alignment on Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract");
static_assert(sizeof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract) == 0x000048, "Wrong size on Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract");
static_assert(offsetof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract, EntryPoint) == 0x000000, "Member 'Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract::EntryPoint' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract, K2Node_CustomEvent_Instigator_1) == 0x000038, "Member 'Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract::K2Node_CustomEvent_Instigator_1' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract, K2Node_CustomEvent_Instigator) == 0x000040, "Member 'Destructible_Abstract_C_ExecuteUbergraph_Destructible_Abstract::K2Node_CustomEvent_Instigator' has a wrong offset!");

// Function Destructible_Abstract.Destructible_Abstract_C.OnDestructibleDestroyed_Event_Base
// 0x0008 (0x0008 - 0x0000)
struct Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base) == 0x000008, "Wrong alignment on Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base");
static_assert(sizeof(Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base) == 0x000008, "Wrong size on Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base");
static_assert(offsetof(Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base, Instigator_0) == 0x000000, "Member 'Destructible_Abstract_C_OnDestructibleDestroyed_Event_Base::Instigator_0' has a wrong offset!");

// Function Destructible_Abstract.Destructible_Abstract_C.OnDestructibleDamaged_Event_Base
// 0x0008 (0x0008 - 0x0000)
struct Destructible_Abstract_C_OnDestructibleDamaged_Event_Base final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Destructible_Abstract_C_OnDestructibleDamaged_Event_Base) == 0x000008, "Wrong alignment on Destructible_Abstract_C_OnDestructibleDamaged_Event_Base");
static_assert(sizeof(Destructible_Abstract_C_OnDestructibleDamaged_Event_Base) == 0x000008, "Wrong size on Destructible_Abstract_C_OnDestructibleDamaged_Event_Base");
static_assert(offsetof(Destructible_Abstract_C_OnDestructibleDamaged_Event_Base, Instigator_0) == 0x000000, "Member 'Destructible_Abstract_C_OnDestructibleDamaged_Event_Base::Instigator_0' has a wrong offset!");

// Function Destructible_Abstract.Destructible_Abstract_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct Destructible_Abstract_C_UserConstructionScript final
{
public:
	ECheckBranches                                CallFunc_ConstructComponentByClass_Branches;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_ConstructComponentByClass_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBranches                                CallFunc_ConstructComponentByClass_Branches_1;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_ConstructComponentByClass_ReturnValue_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleAudioComponent*            K2Node_DynamicCast_AsDestructible_Audio_Component; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTrapAudioComponent*                    K2Node_DynamicCast_AsTrap_Audio_Component;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Destructible_Abstract_C_UserConstructionScript) == 0x000008, "Wrong alignment on Destructible_Abstract_C_UserConstructionScript");
static_assert(sizeof(Destructible_Abstract_C_UserConstructionScript) == 0x000040, "Wrong size on Destructible_Abstract_C_UserConstructionScript");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, CallFunc_ConstructComponentByClass_Branches) == 0x000000, "Member 'Destructible_Abstract_C_UserConstructionScript::CallFunc_ConstructComponentByClass_Branches' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, CallFunc_ConstructComponentByClass_ReturnValue) == 0x000008, "Member 'Destructible_Abstract_C_UserConstructionScript::CallFunc_ConstructComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, CallFunc_ConstructComponentByClass_Branches_1) == 0x000010, "Member 'Destructible_Abstract_C_UserConstructionScript::CallFunc_ConstructComponentByClass_Branches_1' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, CallFunc_ConstructComponentByClass_ReturnValue_1) == 0x000018, "Member 'Destructible_Abstract_C_UserConstructionScript::CallFunc_ConstructComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, K2Node_DynamicCast_AsDestructible_Audio_Component) == 0x000020, "Member 'Destructible_Abstract_C_UserConstructionScript::K2Node_DynamicCast_AsDestructible_Audio_Component' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Destructible_Abstract_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, K2Node_DynamicCast_AsTrap_Audio_Component) == 0x000030, "Member 'Destructible_Abstract_C_UserConstructionScript::K2Node_DynamicCast_AsTrap_Audio_Component' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Destructible_Abstract_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'Destructible_Abstract_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Destructible_Abstract_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess_1) == 0x00003A, "Member 'Destructible_Abstract_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}

