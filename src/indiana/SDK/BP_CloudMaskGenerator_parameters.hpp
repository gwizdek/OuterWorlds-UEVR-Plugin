#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CloudMaskGenerator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CloudMaskGenerator.BP_CloudMaskGenerator_C.ExecuteUbergraph_BP_CloudMaskGenerator
// 0x0020 (0x0020 - 0x0000)
struct BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_RenderTargetCreateStaticTexture2DEditorOnly_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator) == 0x000008, "Wrong alignment on BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator");
static_assert(sizeof(BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator) == 0x000020, "Wrong size on BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator");
static_assert(offsetof(BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator, EntryPoint) == 0x000000, "Member 'BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator, CallFunc_RenderTargetCreateStaticTexture2DEditorOnly_ReturnValue) == 0x000018, "Member 'BP_CloudMaskGenerator_C_ExecuteUbergraph_BP_CloudMaskGenerator::CallFunc_RenderTargetCreateStaticTexture2DEditorOnly_ReturnValue' has a wrong offset!");

// Function BP_CloudMaskGenerator.BP_CloudMaskGenerator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CloudMaskGenerator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloudMaskGenerator_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CloudMaskGenerator_C_ReceiveTick");
static_assert(sizeof(BP_CloudMaskGenerator_C_ReceiveTick) == 0x000004, "Wrong size on BP_CloudMaskGenerator_C_ReceiveTick");
static_assert(offsetof(BP_CloudMaskGenerator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CloudMaskGenerator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CloudMaskGenerator.BP_CloudMaskGenerator_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_CloudMaskGenerator_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloudMaskGenerator_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_CloudMaskGenerator_C_UserConstructionScript");
static_assert(sizeof(BP_CloudMaskGenerator_C_UserConstructionScript) == 0x000010, "Wrong size on BP_CloudMaskGenerator_C_UserConstructionScript");
static_assert(offsetof(BP_CloudMaskGenerator_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_CloudMaskGenerator_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000004, "Member 'BP_CloudMaskGenerator_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");

// Function BP_CloudMaskGenerator.BP_CloudMaskGenerator_C.Render Clouds
// 0x0290 (0x0290 - 0x0000)
struct BP_CloudMaskGenerator_C_Render_Clouds final
{
public:
	bool                                          DeferRender;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Offsets;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	float                                         Yaw;                                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RT_Screen_Size;                                    // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RT_Screen_Pos;                                     // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CloudMask_Object_C*                 Object;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDRef;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Normalized_Location;                               // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x00B8(0x0010)(NoDestructor)
	TArray<struct FVector2D>                      K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_2;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_3;  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0xC];                                      // 0x01D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class ABP_CloudMask_Object_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0210(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CloudMask_Object_C*                 CallFunc_Array_Get_Item_1;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorFloat_ReturnValue;              // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_2;      // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_3;      // 0x0284(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CloudMaskGenerator_C_Render_Clouds) == 0x000010, "Wrong alignment on BP_CloudMaskGenerator_C_Render_Clouds");
static_assert(sizeof(BP_CloudMaskGenerator_C_Render_Clouds) == 0x000290, "Wrong size on BP_CloudMaskGenerator_C_Render_Clouds");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, DeferRender) == 0x000000, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::DeferRender' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Offsets) == 0x000008, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Offsets' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Yaw) == 0x000018, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Yaw' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, RT_Screen_Size) == 0x00001C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::RT_Screen_Size' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, RT_Screen_Pos) == 0x000024, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::RT_Screen_Pos' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Object) == 0x000030, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Object' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, MIDRef) == 0x000038, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::MIDRef' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Size) == 0x000040, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Size' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Normalized_Location) == 0x000048, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Normalized_Location' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000068, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000084, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000090, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000098, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, Temp_int_Array_Index_Variable_1) == 0x0000A0, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_IsValid_ReturnValue_1) == 0x0000A5, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_IsValid_ReturnValue_2) == 0x0000A6, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0000A8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0000B0, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0000B8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BreakRotator_Roll) == 0x0000F4, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BreakRotator_Pitch) == 0x0000F8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BreakRotator_Yaw) == 0x0000FC, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000100, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000104, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000108, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_MakeVector2D_ReturnValue) == 0x00010C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000114, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00011C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_IsValid_ReturnValue_3) == 0x000124, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000128, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000130, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x000134, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x00013C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000140, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_MakeVector2D_ReturnValue_1) == 0x000148, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000150, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000158, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x00015C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_Vector2DVector2D_ReturnValue_2) == 0x000160, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_MakeVector2D_ReturnValue_2) == 0x000168, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_GetTransform_ReturnValue) == 0x000170, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_Vector2DVector2D_ReturnValue_3) == 0x0001A0, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BreakTransform_Location) == 0x0001A8, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BreakTransform_Rotation) == 0x0001B4, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_BreakTransform_Scale) == 0x0001C0, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001CC, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_GetAllActorsOfClass_OutActors) == 0x000210, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Array_Length_ReturnValue_1) == 0x000220, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Array_Get_Item_1) == 0x000228, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Less_IntInt_ReturnValue_1) == 0x000230, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000234, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_InverseTransformLocation_ReturnValue) == 0x000240, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_GetActorScale3D_ReturnValue) == 0x00024C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000258, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000264, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Add_VectorFloat_ReturnValue) == 0x000270, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Add_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_VectorToVector2D_ReturnValue_2) == 0x00027C, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_VectorToVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CloudMaskGenerator_C_Render_Clouds, CallFunc_Conv_VectorToVector2D_ReturnValue_3) == 0x000284, "Member 'BP_CloudMaskGenerator_C_Render_Clouds::CallFunc_Conv_VectorToVector2D_ReturnValue_3' has a wrong offset!");

}

