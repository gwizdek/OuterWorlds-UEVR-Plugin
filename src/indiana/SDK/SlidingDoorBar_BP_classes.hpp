#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingDoorBar_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SwitchBase_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SlidingDoorBar_BP.SlidingDoorBar_BP_C
// 0x0038 (0x03A0 - 0x0368)
class ASlidingDoorBar_BP_C : public ASwitchBase_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_SlidingDoorBar_BP_C;                // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Right;                                             // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Left;                                              // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mount;                                             // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BarAnimation_alpha_790764A64B8D7AFEDBD851BB3199DEEA; // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BarAnimation__Direction_790764A64B8D7AFEDBD851BB3199DEEA; // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BarAnimation;                                      // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimelineTime;                                      // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SlidingDoorBar_BP(int32 EntryPoint);
	void OnSetState(bool IsOn, bool InstantAnimation);
	void BarAnimation__UpdateFunc();
	void BarAnimation__FinishedFunc();
	void SetState(int32 StateIndex, bool IgnoreSound, bool InstantAnimation, bool* Unused);

	bool CanInteract(class AIndianaCharacter* Initiator, const struct FInteractPayload& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SlidingDoorBar_BP_C">();
	}
	static class ASlidingDoorBar_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASlidingDoorBar_BP_C>();
	}
};
static_assert(alignof(ASlidingDoorBar_BP_C) == 0x000008, "Wrong alignment on ASlidingDoorBar_BP_C");
static_assert(sizeof(ASlidingDoorBar_BP_C) == 0x0003A0, "Wrong size on ASlidingDoorBar_BP_C");
static_assert(offsetof(ASlidingDoorBar_BP_C, UberGraphFrame_SlidingDoorBar_BP_C) == 0x000368, "Member 'ASlidingDoorBar_BP_C::UberGraphFrame_SlidingDoorBar_BP_C' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, Right) == 0x000370, "Member 'ASlidingDoorBar_BP_C::Right' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, Left) == 0x000378, "Member 'ASlidingDoorBar_BP_C::Left' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, Mount) == 0x000380, "Member 'ASlidingDoorBar_BP_C::Mount' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, BarAnimation_alpha_790764A64B8D7AFEDBD851BB3199DEEA) == 0x000388, "Member 'ASlidingDoorBar_BP_C::BarAnimation_alpha_790764A64B8D7AFEDBD851BB3199DEEA' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, BarAnimation__Direction_790764A64B8D7AFEDBD851BB3199DEEA) == 0x00038C, "Member 'ASlidingDoorBar_BP_C::BarAnimation__Direction_790764A64B8D7AFEDBD851BB3199DEEA' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, BarAnimation) == 0x000390, "Member 'ASlidingDoorBar_BP_C::BarAnimation' has a wrong offset!");
static_assert(offsetof(ASlidingDoorBar_BP_C, TimelineTime) == 0x000398, "Member 'ASlidingDoorBar_BP_C::TimelineTime' has a wrong offset!");

}

