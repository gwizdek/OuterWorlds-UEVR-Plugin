#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VFX_Trigger

#include "Basic.hpp"

#include "EN_Particle_Event_Bindings_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VFX_Trigger.BP_VFX_Trigger_C
// 0x0150 (0x0408 - 0x02B8)
class ABP_VFX_Trigger_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NiagaraEnd;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraStart;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_End;                                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Start;                                          // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Beam_End;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Beam_Start;                                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Icon;                                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS;                                                // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Particle_System;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sound;                                             // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Particle_System_Start;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Particle_System_End;                               // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_Sound_Event;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_Min;                                         // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_Max;                                         // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_Rotation;                                   // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         X_Clamp_Min;                                       // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Clamp_Max;                                       // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Clamp_Min;                                       // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Clamp_Max;                                       // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Clamp_Min_Init;                                  // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Clamp_Max_Init;                                  // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Clamp_Min_Init;                                  // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Clamp_Max_Init;                                  // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_Rotation_Initial;                           // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Pulse;                                             // 0x0365(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366[0x2];                                      // 0x0366(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EN_Particle_Event_Bindings>            Particle_Event_Bindings;                           // 0x0368(0x0010)(Edit, BlueprintVisible)
	bool                                          Event_Sound;                                       // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Spawn_Decal;                                       // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AK_Sound_Particle_Collision;                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Decal_Material;                                    // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Size_Min;                                    // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Size_Max;                                    // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Life_Min;                                    // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Life_Max;                                    // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Fade_Delay_Min;                              // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Fade_Delay_Max;                              // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Emitters;                                          // 0x03A8(0x0010)(Edit, BlueprintVisible)
	bool                                          Emitters_Toggle;                                   // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Beam_Endpoints;                                    // 0x03B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Beam_Start_Location;                               // 0x03BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Beam_End_Location;                                 // 0x03C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              Base_Params;                                       // 0x03D8(0x0010)(Edit, BlueprintVisible)
	float                                         Max_Draw_Distance;                                 // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseNiagara;                                        // 0x03EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Random_Min;                                        // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomMax;                                         // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayMin;                                          // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDelay;                                          // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayMax;                                          // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_VFX_Trigger(int32 EntryPoint);
	void TriggerNiagara();
	void SpawnAK();
	void Deactivate();
	void Restore_Endpoint_Loactions();
	void Store_Endpoint_Locations();
	void Update_Endpoints();
	void Trigger();
	void ReceiveBeginPlay();
	void ParticleSpawn(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity);
	void Particle_Death(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction);
	void Particle_Burst(class FName EventName, float EmitterTime, int32 ParticleCount);
	void Particle_Collide(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat);
	void UserConstructionScript();
	void Bind_Events(class UParticleSystemComponent* PS_0, TArray<EN_Particle_Event_Bindings>& Bindings, class UNiagaraComponent* NewParam);
	void Update_Beam_Endpoints(class UParticleSystemComponent* PS_0);
	void Update_Beam_Endpoints_Niagara(class UNiagaraComponent* NiagraParticleSystem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VFX_Trigger_C">();
	}
	static class ABP_VFX_Trigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VFX_Trigger_C>();
	}
};
static_assert(alignof(ABP_VFX_Trigger_C) == 0x000008, "Wrong alignment on ABP_VFX_Trigger_C");
static_assert(sizeof(ABP_VFX_Trigger_C) == 0x000408, "Wrong size on ABP_VFX_Trigger_C");
static_assert(offsetof(ABP_VFX_Trigger_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_VFX_Trigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, NiagaraEnd) == 0x0002C0, "Member 'ABP_VFX_Trigger_C::NiagaraEnd' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, NiagaraStart) == 0x0002C8, "Member 'ABP_VFX_Trigger_C::NiagaraStart' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Niagara) == 0x0002D0, "Member 'ABP_VFX_Trigger_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, PS_End) == 0x0002D8, "Member 'ABP_VFX_Trigger_C::PS_End' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, PS_Start) == 0x0002E0, "Member 'ABP_VFX_Trigger_C::PS_Start' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Beam_End) == 0x0002E8, "Member 'ABP_VFX_Trigger_C::Beam_End' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Beam_Start) == 0x0002F0, "Member 'ABP_VFX_Trigger_C::Beam_Start' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Ak) == 0x0002F8, "Member 'ABP_VFX_Trigger_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Icon) == 0x000300, "Member 'ABP_VFX_Trigger_C::Icon' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, PS) == 0x000308, "Member 'ABP_VFX_Trigger_C::PS' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Particle_System) == 0x000310, "Member 'ABP_VFX_Trigger_C::Particle_System' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Active) == 0x000318, "Member 'ABP_VFX_Trigger_C::Active' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Sound) == 0x000319, "Member 'ABP_VFX_Trigger_C::Sound' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Particle_System_Start) == 0x000320, "Member 'ABP_VFX_Trigger_C::Particle_System_Start' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Particle_System_End) == 0x000328, "Member 'ABP_VFX_Trigger_C::Particle_System_End' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, AK_Sound_Event) == 0x000330, "Member 'ABP_VFX_Trigger_C::AK_Sound_Event' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Delay_Min) == 0x000338, "Member 'ABP_VFX_Trigger_C::Delay_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Delay_Max) == 0x00033C, "Member 'ABP_VFX_Trigger_C::Delay_Max' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Random_Rotation) == 0x000340, "Member 'ABP_VFX_Trigger_C::Random_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, X_Clamp_Min) == 0x000344, "Member 'ABP_VFX_Trigger_C::X_Clamp_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, X_Clamp_Max) == 0x000348, "Member 'ABP_VFX_Trigger_C::X_Clamp_Max' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Y_Clamp_Min) == 0x00034C, "Member 'ABP_VFX_Trigger_C::Y_Clamp_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Y_Clamp_Max) == 0x000350, "Member 'ABP_VFX_Trigger_C::Y_Clamp_Max' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, X_Clamp_Min_Init) == 0x000354, "Member 'ABP_VFX_Trigger_C::X_Clamp_Min_Init' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, X_Clamp_Max_Init) == 0x000358, "Member 'ABP_VFX_Trigger_C::X_Clamp_Max_Init' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Y_Clamp_Min_Init) == 0x00035C, "Member 'ABP_VFX_Trigger_C::Y_Clamp_Min_Init' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Y_Clamp_Max_Init) == 0x000360, "Member 'ABP_VFX_Trigger_C::Y_Clamp_Max_Init' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Random_Rotation_Initial) == 0x000364, "Member 'ABP_VFX_Trigger_C::Random_Rotation_Initial' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Pulse) == 0x000365, "Member 'ABP_VFX_Trigger_C::Pulse' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Particle_Event_Bindings) == 0x000368, "Member 'ABP_VFX_Trigger_C::Particle_Event_Bindings' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Event_Sound) == 0x000378, "Member 'ABP_VFX_Trigger_C::Event_Sound' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Spawn_Decal) == 0x000379, "Member 'ABP_VFX_Trigger_C::Spawn_Decal' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, AK_Sound_Particle_Collision) == 0x000380, "Member 'ABP_VFX_Trigger_C::AK_Sound_Particle_Collision' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Material) == 0x000388, "Member 'ABP_VFX_Trigger_C::Decal_Material' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Size_Min) == 0x000390, "Member 'ABP_VFX_Trigger_C::Decal_Size_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Size_Max) == 0x000394, "Member 'ABP_VFX_Trigger_C::Decal_Size_Max' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Life_Min) == 0x000398, "Member 'ABP_VFX_Trigger_C::Decal_Life_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Life_Max) == 0x00039C, "Member 'ABP_VFX_Trigger_C::Decal_Life_Max' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Fade_Delay_Min) == 0x0003A0, "Member 'ABP_VFX_Trigger_C::Decal_Fade_Delay_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Decal_Fade_Delay_Max) == 0x0003A4, "Member 'ABP_VFX_Trigger_C::Decal_Fade_Delay_Max' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Emitters) == 0x0003A8, "Member 'ABP_VFX_Trigger_C::Emitters' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Emitters_Toggle) == 0x0003B8, "Member 'ABP_VFX_Trigger_C::Emitters_Toggle' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Beam_Endpoints) == 0x0003B9, "Member 'ABP_VFX_Trigger_C::Beam_Endpoints' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Beam_Start_Location) == 0x0003BC, "Member 'ABP_VFX_Trigger_C::Beam_Start_Location' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Beam_End_Location) == 0x0003C8, "Member 'ABP_VFX_Trigger_C::Beam_End_Location' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Base_Params) == 0x0003D8, "Member 'ABP_VFX_Trigger_C::Base_Params' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Max_Draw_Distance) == 0x0003E8, "Member 'ABP_VFX_Trigger_C::Max_Draw_Distance' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, UseNiagara) == 0x0003EC, "Member 'ABP_VFX_Trigger_C::UseNiagara' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, Random_Min) == 0x0003F0, "Member 'ABP_VFX_Trigger_C::Random_Min' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, RandomMax) == 0x0003F4, "Member 'ABP_VFX_Trigger_C::RandomMax' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, DelayMin) == 0x0003F8, "Member 'ABP_VFX_Trigger_C::DelayMin' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, UseDelay) == 0x0003FC, "Member 'ABP_VFX_Trigger_C::UseDelay' has a wrong offset!");
static_assert(offsetof(ABP_VFX_Trigger_C, DelayMax) == 0x000400, "Member 'ABP_VFX_Trigger_C::DelayMax' has a wrong offset!");

}

