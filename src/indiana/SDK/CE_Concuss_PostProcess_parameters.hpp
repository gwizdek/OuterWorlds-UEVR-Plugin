#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CE_Concuss_PostProcess

#include "Basic.hpp"


namespace SDK::Params
{

// Function CE_Concuss_PostProcess.CE_Concuss_PostProcess_C.ExecuteUbergraph_CE_Concuss_PostProcess
// 0x0020 (0x0020 - 0x0000)
struct CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Ratio;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bRestoredFromSave;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target_1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess) == 0x000008, "Wrong alignment on CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess");
static_assert(sizeof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess) == 0x000020, "Wrong size on CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess");
static_assert(offsetof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess, EntryPoint) == 0x000000, "Member 'CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess::EntryPoint' has a wrong offset!");
static_assert(offsetof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess, K2Node_Event_Target) == 0x000008, "Member 'CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess, K2Node_Event_Ratio) == 0x000010, "Member 'CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess::K2Node_Event_Ratio' has a wrong offset!");
static_assert(offsetof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess, K2Node_Event_bRestoredFromSave) == 0x000014, "Member 'CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess::K2Node_Event_bRestoredFromSave' has a wrong offset!");
static_assert(offsetof(CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess, K2Node_Event_Target_1) == 0x000018, "Member 'CE_Concuss_PostProcess_C_ExecuteUbergraph_CE_Concuss_PostProcess::K2Node_Event_Target_1' has a wrong offset!");

// Function CE_Concuss_PostProcess.CE_Concuss_PostProcess_C.ReceiveApplyEffect
// 0x0010 (0x0010 - 0x0000)
struct CE_Concuss_PostProcess_C_ReceiveApplyEffect final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRestoredFromSave;                                 // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CE_Concuss_PostProcess_C_ReceiveApplyEffect) == 0x000008, "Wrong alignment on CE_Concuss_PostProcess_C_ReceiveApplyEffect");
static_assert(sizeof(CE_Concuss_PostProcess_C_ReceiveApplyEffect) == 0x000010, "Wrong size on CE_Concuss_PostProcess_C_ReceiveApplyEffect");
static_assert(offsetof(CE_Concuss_PostProcess_C_ReceiveApplyEffect, Target) == 0x000000, "Member 'CE_Concuss_PostProcess_C_ReceiveApplyEffect::Target' has a wrong offset!");
static_assert(offsetof(CE_Concuss_PostProcess_C_ReceiveApplyEffect, Ratio_0) == 0x000008, "Member 'CE_Concuss_PostProcess_C_ReceiveApplyEffect::Ratio_0' has a wrong offset!");
static_assert(offsetof(CE_Concuss_PostProcess_C_ReceiveApplyEffect, bRestoredFromSave) == 0x00000C, "Member 'CE_Concuss_PostProcess_C_ReceiveApplyEffect::bRestoredFromSave' has a wrong offset!");

// Function CE_Concuss_PostProcess.CE_Concuss_PostProcess_C.ReceiveClearEffect
// 0x0008 (0x0008 - 0x0000)
struct CE_Concuss_PostProcess_C_ReceiveClearEffect final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CE_Concuss_PostProcess_C_ReceiveClearEffect) == 0x000008, "Wrong alignment on CE_Concuss_PostProcess_C_ReceiveClearEffect");
static_assert(sizeof(CE_Concuss_PostProcess_C_ReceiveClearEffect) == 0x000008, "Wrong size on CE_Concuss_PostProcess_C_ReceiveClearEffect");
static_assert(offsetof(CE_Concuss_PostProcess_C_ReceiveClearEffect, Target) == 0x000000, "Member 'CE_Concuss_PostProcess_C_ReceiveClearEffect::Target' has a wrong offset!");

}

