#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Snake_AnimBP

#include "Basic.hpp"

#include "Snake_AnimBP_classes.hpp"
#include "Snake_AnimBP_parameters.hpp"


namespace SDK
{

// Function Snake_AnimBP.Snake_AnimBP_C.ExecuteUbergraph_Snake_AnimBP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USnake_AnimBP_C::ExecuteUbergraph_Snake_AnimBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "ExecuteUbergraph_Snake_AnimBP");

	Params::Snake_AnimBP_C_ExecuteUbergraph_Snake_AnimBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Snake_AnimBP.Snake_AnimBP_C.AnimNotify_TurnOffRandomIdle
// (BlueprintCallable, BlueprintEvent)

void USnake_AnimBP_C::AnimNotify_TurnOffRandomIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "AnimNotify_TurnOffRandomIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Snake_AnimBP.Snake_AnimBP_C.AnimNotify_RandomIdle
// (BlueprintCallable, BlueprintEvent)

void USnake_AnimBP_C::AnimNotify_RandomIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "AnimNotify_RandomIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Snake_AnimBP.Snake_AnimBP_C.OnNewWeaponAnimations
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWeaponAnimations*                NewWeaponAnimations                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USnake_AnimBP_C::OnNewWeaponAnimations(class UWeaponAnimations* NewWeaponAnimations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "OnNewWeaponAnimations");

	Params::Snake_AnimBP_C_OnNewWeaponAnimations Parms{};

	Parms.NewWeaponAnimations = NewWeaponAnimations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Snake_AnimBP.Snake_AnimBP_C.NeutralTransition
// (BlueprintCallable, BlueprintEvent)

void USnake_AnimBP_C::NeutralTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "NeutralTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Snake_AnimBP.Snake_AnimBP_C.CombatTransition
// (BlueprintCallable, BlueprintEvent)

void USnake_AnimBP_C::CombatTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "CombatTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Snake_AnimBP.Snake_AnimBP_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USnake_AnimBP_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "BlueprintUpdateAnimation");

	Params::Snake_AnimBP_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Snake_AnimBP.Snake_AnimBP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void USnake_AnimBP_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Snake_AnimBP_C", "AnimGraph");

	Params::Snake_AnimBP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

