#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_DamageType

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Base_DamageType.Base_DamageType_C
// 0x0108 (0x01B8 - 0x00B0)
class UBase_DamageType_C : public UIndianaDamageType
{
public:
	class UParticleSystem*                        ImpactFx;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CritEmitters;                                      // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           NormalEmitters;                                    // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        ImpactFx_AOE;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNiagara_ImpactFX;                                // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Default_ImpactFX;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNiagara_MuzzleFlash;                             // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Default_MuzzleFlash;                               // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ESkill, class UNiagaraSystem*>           MuzzleFlash_Systems;                               // 0x0100(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraSystem*                         LingeringSmoke_Sytem;                              // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPhysicalSurface, class UNiagaraSystem*> Surface_ImpactFX;                                  // 0x0158(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MuzzleFlashAimedResize;                            // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        MuzzleSpawnParticleSystem;                         // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetupImpactFx(class UParticleSystemComponent* ParentEffect, bool bGraze, bool bCritical, bool bWeakSpot, bool bRadial, float Radius) const;
	void SetupSecondaryImpactFx(class UParticleSystemComponent* ParentEffect, bool bGraze, bool bCritical, bool bWeakSpot, bool bRadial, float Radius) const;
	void TriggerMuzzleFx(class USceneComponent* AttachComponent, bool IsFirstPerson) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Base_DamageType_C">();
	}
	static class UBase_DamageType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBase_DamageType_C>();
	}
};
static_assert(alignof(UBase_DamageType_C) == 0x000008, "Wrong alignment on UBase_DamageType_C");
static_assert(sizeof(UBase_DamageType_C) == 0x0001B8, "Wrong size on UBase_DamageType_C");
static_assert(offsetof(UBase_DamageType_C, ImpactFx) == 0x0000B0, "Member 'UBase_DamageType_C::ImpactFx' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, CritEmitters) == 0x0000B8, "Member 'UBase_DamageType_C::CritEmitters' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, NormalEmitters) == 0x0000C8, "Member 'UBase_DamageType_C::NormalEmitters' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, ImpactFx_AOE) == 0x0000D8, "Member 'UBase_DamageType_C::ImpactFx_AOE' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, IsNiagara_ImpactFX) == 0x0000E0, "Member 'UBase_DamageType_C::IsNiagara_ImpactFX' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, Default_ImpactFX) == 0x0000E8, "Member 'UBase_DamageType_C::Default_ImpactFX' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, IsNiagara_MuzzleFlash) == 0x0000F0, "Member 'UBase_DamageType_C::IsNiagara_MuzzleFlash' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, Default_MuzzleFlash) == 0x0000F8, "Member 'UBase_DamageType_C::Default_MuzzleFlash' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, MuzzleFlash_Systems) == 0x000100, "Member 'UBase_DamageType_C::MuzzleFlash_Systems' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, LingeringSmoke_Sytem) == 0x000150, "Member 'UBase_DamageType_C::LingeringSmoke_Sytem' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, Surface_ImpactFX) == 0x000158, "Member 'UBase_DamageType_C::Surface_ImpactFX' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, MuzzleFlashAimedResize) == 0x0001A8, "Member 'UBase_DamageType_C::MuzzleFlashAimedResize' has a wrong offset!");
static_assert(offsetof(UBase_DamageType_C, MuzzleSpawnParticleSystem) == 0x0001B0, "Member 'UBase_DamageType_C::MuzzleSpawnParticleSystem' has a wrong offset!");

}

