#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleContainer_BP

#include "Basic.hpp"

#include "MeshMaterialInstance_structs.hpp"
#include "Indiana_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TimelineMeshTransform_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SimpleContainer_BP.SimpleContainer_BP_C.ApplyLight
// 0x0068 (0x0068 - 0x0000)
struct SimpleContainer_BP_C_ApplyLight final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLightEnabled_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSealed_IsSealed;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMeshMaterialInstance>          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsBarred_IsBarred;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshMaterialInstance                  CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_IsLocked;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLightEnabled_ReturnValue_1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleContainer_BP_C_ApplyLight) == 0x000008, "Wrong alignment on SimpleContainer_BP_C_ApplyLight");
static_assert(sizeof(SimpleContainer_BP_C_ApplyLight) == 0x000068, "Wrong size on SimpleContainer_BP_C_ApplyLight");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SimpleContainer_BP_C_ApplyLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_IsLightEnabled_ReturnValue) == 0x000004, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_IsLightEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_IsSealed_IsSealed) == 0x000005, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_IsSealed_IsSealed' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, K2Node_MakeArray_Array) == 0x000008, "Member 'SimpleContainer_BP_C_ApplyLight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_IsBarred_IsBarred) == 0x000018, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_IsBarred_IsBarred' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_Array_Get_Item) == 0x000020, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_SelectFloat_ReturnValue) == 0x00003C, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_IsLocked_IsLocked) == 0x000044, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_IsLocked_IsLocked' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'SimpleContainer_BP_C_ApplyLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_SelectFloat_ReturnValue_1) == 0x00004C, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_IsLightEnabled_ReturnValue_1) == 0x000058, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_IsLightEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_SelectFloat_ReturnValue_2) == 0x00005C, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ApplyLight, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'SimpleContainer_BP_C_ApplyLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.GetLightingConfig
// 0x0010 (0x0010 - 0x0000)
struct SimpleContainer_BP_C_GetLightingConfig final
{
public:
	class UStaticMeshComponent*                   Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MaterialSlot;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleContainer_BP_C_GetLightingConfig) == 0x000008, "Wrong alignment on SimpleContainer_BP_C_GetLightingConfig");
static_assert(sizeof(SimpleContainer_BP_C_GetLightingConfig) == 0x000010, "Wrong size on SimpleContainer_BP_C_GetLightingConfig");
static_assert(offsetof(SimpleContainer_BP_C_GetLightingConfig, Mesh) == 0x000000, "Member 'SimpleContainer_BP_C_GetLightingConfig::Mesh' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_GetLightingConfig, MaterialSlot) == 0x000008, "Member 'SimpleContainer_BP_C_GetLightingConfig::MaterialSlot' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature final
{
public:
	struct FItemStack                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature) == 0x000008, "Wrong alignment on SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature");
static_assert(sizeof(SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature) == 0x000010, "Wrong size on SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature");
static_assert(offsetof(SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature, Item) == 0x000000, "Member 'SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_0_ItemStackDelegate__DelegateSignature::Item' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature final
{
public:
	struct FItemStack                             Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature) == 0x000008, "Wrong alignment on SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature");
static_assert(sizeof(SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature) == 0x000010, "Wrong size on SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature");
static_assert(offsetof(SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature, Item) == 0x000000, "Member 'SimpleContainer_BP_C_BndEvt__InventoryComponent_K2Node_ComponentBoundEvent_1_ItemStackDelegate__DelegateSignature::Item' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.ExecuteUbergraph_SimpleContainer_BP
// 0x00E0 (0x00E0 - 0x0000)
struct SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_InstantAnimation_1;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreSound;                          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InstantAnimation;                     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemStack                             K2Node_ComponentBoundEvent_Item_1;                 // 0x00C0(0x0010)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FItemStack                             K2Node_ComponentBoundEvent_Item;                   // 0x00D0(0x0010)(ConstParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP) == 0x000008, "Wrong alignment on SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP");
static_assert(sizeof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP) == 0x0000E0, "Wrong size on SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, EntryPoint) == 0x000000, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, K2Node_Event_InstantAnimation_1) == 0x000014, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::K2Node_Event_InstantAnimation_1' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, K2Node_Event_IgnoreSound) == 0x000015, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::K2Node_Event_IgnoreSound' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, K2Node_Event_InstantAnimation) == 0x000016, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::K2Node_Event_InstantAnimation' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, CallFunc_GetTimelineLength_ReturnValue) == 0x000018, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, CallFunc_RLerp_ReturnValue) == 0x00001C, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, CallFunc_VLerp_ReturnValue) == 0x000028, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000034, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, K2Node_ComponentBoundEvent_Item_1) == 0x0000C0, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::K2Node_ComponentBoundEvent_Item_1' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP, K2Node_ComponentBoundEvent_Item) == 0x0000D0, "Member 'SimpleContainer_BP_C_ExecuteUbergraph_SimpleContainer_BP::K2Node_ComponentBoundEvent_Item' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.OnAnimateClose
// 0x0002 (0x0002 - 0x0000)
struct SimpleContainer_BP_C_OnAnimateClose final
{
public:
	bool                                          IgnoreSound_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleContainer_BP_C_OnAnimateClose) == 0x000001, "Wrong alignment on SimpleContainer_BP_C_OnAnimateClose");
static_assert(sizeof(SimpleContainer_BP_C_OnAnimateClose) == 0x000002, "Wrong size on SimpleContainer_BP_C_OnAnimateClose");
static_assert(offsetof(SimpleContainer_BP_C_OnAnimateClose, IgnoreSound_0) == 0x000000, "Member 'SimpleContainer_BP_C_OnAnimateClose::IgnoreSound_0' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_OnAnimateClose, InstantAnimation) == 0x000001, "Member 'SimpleContainer_BP_C_OnAnimateClose::InstantAnimation' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.OnAnimateOpen
// 0x0001 (0x0001 - 0x0000)
struct SimpleContainer_BP_C_OnAnimateOpen final
{
public:
	bool                                          InstantAnimation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleContainer_BP_C_OnAnimateOpen) == 0x000001, "Wrong alignment on SimpleContainer_BP_C_OnAnimateOpen");
static_assert(sizeof(SimpleContainer_BP_C_OnAnimateOpen) == 0x000001, "Wrong size on SimpleContainer_BP_C_OnAnimateOpen");
static_assert(offsetof(SimpleContainer_BP_C_OnAnimateOpen, InstantAnimation) == 0x000000, "Member 'SimpleContainer_BP_C_OnAnimateOpen::InstantAnimation' has a wrong offset!");

// Function SimpleContainer_BP.SimpleContainer_BP_C.UserConstructionScript
// 0x00B0 (0x00B0 - 0x0000)
struct SimpleContainer_BP_C_UserConstructionScript final
{
public:
	TScriptInterface<class IOCL_Interactable_C>   K2Node_DynamicCast_AsOCL_Interactable;             // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocked_IsLocked;                        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetLightingConfig_Mesh;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLightingConfig_MaterialSlot;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshMaterialInstance                  K2Node_MakeStruct_MeshMaterialInstance;            // 0x0028(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_AssignMaterialInstanceBySlotName_Out;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimelineMeshTransform                 K2Node_MakeStruct_TimelineMeshTransform;           // 0x0078(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleContainer_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on SimpleContainer_BP_C_UserConstructionScript");
static_assert(sizeof(SimpleContainer_BP_C_UserConstructionScript) == 0x0000B0, "Wrong size on SimpleContainer_BP_C_UserConstructionScript");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, K2Node_DynamicCast_AsOCL_Interactable) == 0x000000, "Member 'SimpleContainer_BP_C_UserConstructionScript::K2Node_DynamicCast_AsOCL_Interactable' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SimpleContainer_BP_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_IsLocked_IsLocked) == 0x000012, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_IsLocked_IsLocked' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_GetLightingConfig_Mesh) == 0x000018, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_GetLightingConfig_Mesh' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_GetLightingConfig_MaterialSlot) == 0x000020, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_GetLightingConfig_MaterialSlot' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, K2Node_MakeStruct_MeshMaterialInstance) == 0x000028, "Member 'SimpleContainer_BP_C_UserConstructionScript::K2Node_MakeStruct_MeshMaterialInstance' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_IsMaterialSlotNameValid_ReturnValue) == 0x000040, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_IsMaterialSlotNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000044, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_AssignMaterialInstanceBySlotName_Out) == 0x000058, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_AssignMaterialInstanceBySlotName_Out' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, CallFunc_ComposeRotators_ReturnValue) == 0x00006C, "Member 'SimpleContainer_BP_C_UserConstructionScript::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleContainer_BP_C_UserConstructionScript, K2Node_MakeStruct_TimelineMeshTransform) == 0x000078, "Member 'SimpleContainer_BP_C_UserConstructionScript::K2Node_MakeStruct_TimelineMeshTransform' has a wrong offset!");

}

