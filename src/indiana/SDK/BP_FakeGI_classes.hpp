#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FakeGI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FakeGI.BP_FakeGI_C
// 0x02A8 (0x0560 - 0x02B8)
class ABP_FakeGI_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRuntimeFloatCurve                     Intensity;                                         // 0x02D0(0x0088)(Edit, BlueprintVisible)
	struct FRuntimeCurveLinearColor               Color;                                             // 0x0358(0x0208)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_FakeGI(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FakeGI_C">();
	}
	static class ABP_FakeGI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FakeGI_C>();
	}
};
static_assert(alignof(ABP_FakeGI_C) == 0x000008, "Wrong alignment on ABP_FakeGI_C");
static_assert(sizeof(ABP_FakeGI_C) == 0x000560, "Wrong size on ABP_FakeGI_C");
static_assert(offsetof(ABP_FakeGI_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_FakeGI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FakeGI_C, PointLight) == 0x0002C0, "Member 'ABP_FakeGI_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_FakeGI_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_FakeGI_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FakeGI_C, Intensity) == 0x0002D0, "Member 'ABP_FakeGI_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_FakeGI_C, Color) == 0x000358, "Member 'ABP_FakeGI_C::Color' has a wrong offset!");

}

