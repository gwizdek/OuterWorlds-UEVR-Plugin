#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContainerBase_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ContainerBase_BP.ContainerBase_BP_C
// 0x0060 (0x04A8 - 0x0448)
class AContainerBase_BP_C : public AContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        AttachmentCAC;                                     // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCAC;                                            // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           ActiveCAC;                                         // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class AActor*                                 CACActor;                                          // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSound;                                       // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CACClass;                                          // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 OCLAudioComponentClass;                            // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOCLAudioComponent*                     OCLAudioComponent;                                 // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContainerLightsEnabled;                            // 0x04A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLAnimateOpen__DelegateSignature(class AActor* Initiator, bool InFrontOfDoor, bool IgnoreSound_0, bool InstantAnimation);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLAnimateClose__DelegateSignature(class AActor* Initiator, bool IgnoreSound_0, bool InstantAnimation);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLCloseStart__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_2_OCLLockpickStart__DelegateSignature(class AActor* Initiator, float LockpickSeconds, int32 LockpickNumResources);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLLockpickInterrupted__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLLockpickSuccess__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_1_OCLOpenEnd__DelegateSignature(class AActor* Initiator);
	void ReceiveBeginPlay();
	void OnAnimateOpenComplete();
	void OnAnimateCloseComplete();
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLOpenStart__DelegateSignature(class AActor* Initiator);
	void OnPostConstruction();
	void OnStateChanged();
	void OnAnimateClose(bool IgnoreSound_0, bool InstantAnimation);
	void PlayOpeningAudio();
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_0_OCLBarred__DelegateSignature(class AActor* Initiator);
	void PlayClosingAudio();
	void PlayUnbarredAudio();
	void OnAnimateOpen(bool InstantAnimation);
	void PlayAmbientAudio();
	void OpenOCL(class AActor* Initiator, bool Force, bool Seal, bool IgnoreLockStatus, bool IgnoreStartEvent, bool IgnoreEndEvent, bool IgnoreSound_0, bool IgnoreAnimation);
	void CloseOCL(class AActor* Initiator, bool Force, bool Lock, bool Seal, bool IgnoreStartEvent, bool IgnoreEndEvent, bool IgnoreSound_0, bool IgnoreAnimation);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_9_OCLLockpickLoopStop__DelegateSignature(class AActor* Initiator);
	void StopLockpickLoopAudio();
	void ExecuteUbergraph_ContainerBase_BP(int32 EntryPoint);
	void StopLockpickAudio();
	void PlayLockpickAudio();
	void PlayLockpickInterruptedAudio();
	void PlayLockpickSucceedAudio();
	void PlayBarredAudio();
	void PlayUnlockedAudio();
	void PlayLockedAudio();
	void PlayClosedAudio();
	void PlayOpenAudio();
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_3_OCLCloseEnd__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_8_OCLUnbarred__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_7_OCLUnlocked__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_6_OCLLocked__DelegateSignature(class AActor* Initiator, bool IgnoreSound_0, bool InstantAnimation);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_5_OCLOpenAttemptedLocked__DelegateSignature(class AActor* Initiator);
	void BndEvt__OCLComponent_K2Node_ComponentBoundEvent_4_OCLOpenAttemptedLocked__DelegateSignature(class AActor* Initiator);
	void UserConstructionScript();
	void CheckCAC(bool Use, class AActor*& CAC_Actor, class USceneComponent* Attach_Point);
	void Update();
	void SignalAnimationComplete();
	void SetupCAC();
	void IsLocked(bool* IsLocked_0);
	void IsOpen(bool* IsOpen_0, bool* IsOpening);
	void SetIsLocked(bool IsLocked, bool* IsLockedOut);
	void IsBarred(bool* IsBarred_0);
	void IsClosed(bool* IsClosed_0);
	void IsSealed(bool* IsSealed_0);
	void ToggleOpenCloseState(class AActor* Initiator, bool Force, bool Lock, bool Seal, bool IgnoreLockStatus, bool IgnoreStartEvent, bool IgnoreEndEvent, bool IgnoreSound_0, bool InstantAnimation, bool* IsOpen, bool* IsOpening, bool* IsClosed, bool* IsClosing);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ContainerBase_BP_C">();
	}
	static class AContainerBase_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AContainerBase_BP_C>();
	}
};
static_assert(alignof(AContainerBase_BP_C) == 0x000008, "Wrong alignment on AContainerBase_BP_C");
static_assert(sizeof(AContainerBase_BP_C) == 0x0004A8, "Wrong size on AContainerBase_BP_C");
static_assert(offsetof(AContainerBase_BP_C, UberGraphFrame) == 0x000448, "Member 'AContainerBase_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, AttachmentCAC) == 0x000450, "Member 'AContainerBase_BP_C::AttachmentCAC' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, Arrow) == 0x000458, "Member 'AContainerBase_BP_C::Arrow' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, UseCAC) == 0x000460, "Member 'AContainerBase_BP_C::UseCAC' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, ActiveCAC) == 0x000468, "Member 'AContainerBase_BP_C::ActiveCAC' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, CACActor) == 0x000478, "Member 'AContainerBase_BP_C::CACActor' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, IgnoreSound) == 0x000480, "Member 'AContainerBase_BP_C::IgnoreSound' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, CACClass) == 0x000488, "Member 'AContainerBase_BP_C::CACClass' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, OCLAudioComponentClass) == 0x000490, "Member 'AContainerBase_BP_C::OCLAudioComponentClass' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, OCLAudioComponent) == 0x000498, "Member 'AContainerBase_BP_C::OCLAudioComponent' has a wrong offset!");
static_assert(offsetof(AContainerBase_BP_C, ContainerLightsEnabled) == 0x0004A0, "Member 'AContainerBase_BP_C::ContainerLightsEnabled' has a wrong offset!");

}

