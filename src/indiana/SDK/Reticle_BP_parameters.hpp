#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Reticle_BP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Reticle_BP.Reticle_BP_C.ExecuteUbergraph_Reticle_BP
// 0x0060 (0x0060 - 0x0000)
struct Reticle_BP_C_ExecuteUbergraph_Reticle_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewTTDRatio;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP) == 0x000008, "Wrong alignment on Reticle_BP_C_ExecuteUbergraph_Reticle_BP");
static_assert(sizeof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP) == 0x000060, "Wrong size on Reticle_BP_C_ExecuteUbergraph_Reticle_BP");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, EntryPoint) == 0x000000, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, K2Node_Event_MyGeometry) == 0x000004, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, CallFunc_PlayAnimation_ReturnValue_1) == 0x000048, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, K2Node_Event_NewTTDRatio) == 0x000050, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::K2Node_Event_NewTTDRatio' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_ExecuteUbergraph_Reticle_BP, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000058, "Member 'Reticle_BP_C_ExecuteUbergraph_Reticle_BP::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function Reticle_BP.Reticle_BP_C.SetTTDProgressRatio
// 0x0004 (0x0004 - 0x0000)
struct Reticle_BP_C_SetTTDProgressRatio final
{
public:
	float                                         NewTTDRatio;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Reticle_BP_C_SetTTDProgressRatio) == 0x000004, "Wrong alignment on Reticle_BP_C_SetTTDProgressRatio");
static_assert(sizeof(Reticle_BP_C_SetTTDProgressRatio) == 0x000004, "Wrong size on Reticle_BP_C_SetTTDProgressRatio");
static_assert(offsetof(Reticle_BP_C_SetTTDProgressRatio, NewTTDRatio) == 0x000000, "Member 'Reticle_BP_C_SetTTDProgressRatio::NewTTDRatio' has a wrong offset!");

// Function Reticle_BP.Reticle_BP_C.Tick
// 0x003C (0x003C - 0x0000)
struct Reticle_BP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Reticle_BP_C_Tick) == 0x000004, "Wrong alignment on Reticle_BP_C_Tick");
static_assert(sizeof(Reticle_BP_C_Tick) == 0x00003C, "Wrong size on Reticle_BP_C_Tick");
static_assert(offsetof(Reticle_BP_C_Tick, MyGeometry) == 0x000000, "Member 'Reticle_BP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Reticle_BP_C_Tick, InDeltaTime) == 0x000038, "Member 'Reticle_BP_C_Tick::InDeltaTime' has a wrong offset!");

}

