#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Snake_AnimBP

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CombatEnum_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Snake_AnimBP.Snake_AnimBP_C
// 0x3320 (0x3CC0 - 0x09A0)
class USnake_AnimBP_C final : public UWormAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x09A8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x09D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0A00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0A28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0A50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0A78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0AA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0AC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0AF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0B18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0B40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0B68(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B90(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0C10(0x0030)()
	struct FAnimNode_LocomotionPlay               AnimGraphNode_LocomotionPlay;                      // 0x0C40(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0CD0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D00(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0D80(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0DB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0E30(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0E60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0E88(0x0028)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_2;                      // 0x0EB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0F30(0x0030)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x0F60(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0FE0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1010(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x10C0(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1160(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1188(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x11B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x11D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1200(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1228(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1250(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1278(0x0028)()
	struct FAnimNode_RandomSequenceNamed          AnimGraphNode_RandomSequenceNamed_1;               // 0x12A0(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1328(0x0030)()
	struct FAnimNode_RandomSequenceNamed          AnimGraphNode_RandomSequenceNamed;                 // 0x1358(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x13E0(0x0030)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x1410(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1490(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x14C0(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1570(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x15A0(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x1650(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x1698(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x16E0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1728(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1770(0x00A0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1810(0x0018)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1828(0x0158)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1980(0x00A0)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x1A20(0x0090)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1AB0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1AF8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1B20(0x0048)()
	uint8                                         Pad_1B68[0x8];                                     // 0x1B68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_12;                      // 0x1B70(0x0170)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1CE0(0x0020)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_11;                      // 0x1D00(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_10;                      // 0x1E70(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_9;                       // 0x1FE0(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_8;                       // 0x2150(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_7;                       // 0x22C0(0x0170)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2430(0x0020)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_6;                       // 0x2450(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_5;                       // 0x25C0(0x0170)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_12;                         // 0x2730(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_11;                         // 0x2820(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_10;                         // 0x2910(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_9;                          // 0x2A00(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_8;                          // 0x2AF0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_7;                          // 0x2BE0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_6;                          // 0x2CD0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x2DC0(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2EB0(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x2ED8(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2FA0(0x0108)()
	uint8                                         Pad_30A8[0x8];                                     // 0x30A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_4;                       // 0x30B0(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_3;                       // 0x3220(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_2;                       // 0x3390(0x0170)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver_1;                       // 0x3500(0x0170)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x3670(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x3760(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x3850(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x3940(0x00F0)()
	struct FAnimNode_JointDriver                  AnimGraphNode_JointDriver;                         // 0x3A30(0x0170)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x3BA0(0x00F0)()
	class UCREA_Snake_WeaponAnimations_BP_C*      WeaponAnimationsBP;                                // 0x3C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECombatEnum                                   CombatEnum;                                        // 0x3C98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomIdle;                                        // 0x3C99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9A[0x2];                                     // 0x3C9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitFlinchActive;                                   // 0x3C9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitReactionDirection;                              // 0x3CA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitReactionRate;                                   // 0x3CA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitReactType                                 HitReactionType;                                   // 0x3CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA9[0x3];                                     // 0x3CA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HipSmooth;                                         // 0x3CAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Snake_AnimBP(int32 EntryPoint);
	void AnimNotify_TurnOffRandomIdle();
	void AnimNotify_RandomIdle();
	void OnNewWeaponAnimations(class UWeaponAnimations* NewWeaponAnimations);
	void NeutralTransition();
	void CombatTransition();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Snake_AnimBP_C">();
	}
	static class USnake_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USnake_AnimBP_C>();
	}
};
static_assert(alignof(USnake_AnimBP_C) == 0x000010, "Wrong alignment on USnake_AnimBP_C");
static_assert(sizeof(USnake_AnimBP_C) == 0x003CC0, "Wrong size on USnake_AnimBP_C");
static_assert(offsetof(USnake_AnimBP_C, UberGraphFrame) == 0x0009A0, "Member 'USnake_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Root) == 0x0009A8, "Member 'USnake_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_20) == 0x0009D8, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_19) == 0x000A00, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_18) == 0x000A28, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_17) == 0x000A50, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_16) == 0x000A78, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x000AA0, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000AC8, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x000AF0, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000B18, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000B40, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000B68, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000B90, "Member 'USnake_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_9) == 0x000C10, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_LocomotionPlay) == 0x000C40, "Member 'USnake_AnimBP_C::AnimGraphNode_LocomotionPlay' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_8) == 0x000CD0, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000D00, "Member 'USnake_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000D80, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000DB0, "Member 'USnake_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000E30, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000E60, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000E88, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_RandomPlayer_2) == 0x000EB0, "Member 'USnake_AnimBP_C::AnimGraphNode_RandomPlayer_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000F30, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_RandomPlayer_1) == 0x000F60, "Member 'USnake_AnimBP_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000FE0, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateMachine_2) == 0x001010, "Member 'USnake_AnimBP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x0010C0, "Member 'USnake_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x001160, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x001188, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0011B0, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0011D8, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x001200, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x001228, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x001250, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TransitionResult) == 0x001278, "Member 'USnake_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_RandomSequenceNamed_1) == 0x0012A0, "Member 'USnake_AnimBP_C::AnimGraphNode_RandomSequenceNamed_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_3) == 0x001328, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_RandomSequenceNamed) == 0x001358, "Member 'USnake_AnimBP_C::AnimGraphNode_RandomSequenceNamed' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0013E0, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_RandomPlayer) == 0x001410, "Member 'USnake_AnimBP_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001490, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x0014C0, "Member 'USnake_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateResult) == 0x001570, "Member 'USnake_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_StateMachine) == 0x0015A0, "Member 'USnake_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Slot_5) == 0x001650, "Member 'USnake_AnimBP_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Slot_4) == 0x001698, "Member 'USnake_AnimBP_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Slot_3) == 0x0016E0, "Member 'USnake_AnimBP_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Slot_2) == 0x001728, "Member 'USnake_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x001770, "Member 'USnake_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_LocalRefPose) == 0x001810, "Member 'USnake_AnimBP_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001828, "Member 'USnake_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001980, "Member 'USnake_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_PoseSnapshot) == 0x001A20, "Member 'USnake_AnimBP_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Slot_1) == 0x001AB0, "Member 'USnake_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001AF8, "Member 'USnake_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_Slot) == 0x001B20, "Member 'USnake_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_12) == 0x001B70, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_12' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001CE0, "Member 'USnake_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_11) == 0x001D00, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_11' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_10) == 0x001E70, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_10' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_9) == 0x001FE0, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_9' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_8) == 0x002150, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_8' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_7) == 0x0022C0, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_7' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x002430, "Member 'USnake_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_6) == 0x002450, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_6' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_5) == 0x0025C0, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_5' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_12) == 0x002730, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_12' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_11) == 0x002820, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_11' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_10) == 0x002910, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_10' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_9) == 0x002A00, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_9' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_8) == 0x002AF0, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_8' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_7) == 0x002BE0, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_7' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_6) == 0x002CD0, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_6' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_5) == 0x002DC0, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x002EB0, "Member 'USnake_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_TwoWayBlend) == 0x002ED8, "Member 'USnake_AnimBP_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_ModifyBone) == 0x002FA0, "Member 'USnake_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_4) == 0x0030B0, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_4' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_3) == 0x003220, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_3' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_2) == 0x003390, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver_1) == 0x003500, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_4) == 0x003670, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_3) == 0x003760, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_2) == 0x003850, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone_1) == 0x003940, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_JointDriver) == 0x003A30, "Member 'USnake_AnimBP_C::AnimGraphNode_JointDriver' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, AnimGraphNode_CopyBone) == 0x003BA0, "Member 'USnake_AnimBP_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, WeaponAnimationsBP) == 0x003C90, "Member 'USnake_AnimBP_C::WeaponAnimationsBP' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, CombatEnum) == 0x003C98, "Member 'USnake_AnimBP_C::CombatEnum' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, RandomIdle) == 0x003C99, "Member 'USnake_AnimBP_C::RandomIdle' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, HitFlinchActive) == 0x003C9C, "Member 'USnake_AnimBP_C::HitFlinchActive' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, HitReactionDirection) == 0x003CA0, "Member 'USnake_AnimBP_C::HitReactionDirection' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, HitReactionRate) == 0x003CA4, "Member 'USnake_AnimBP_C::HitReactionRate' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, HitReactionType) == 0x003CA8, "Member 'USnake_AnimBP_C::HitReactionType' has a wrong offset!");
static_assert(offsetof(USnake_AnimBP_C, HipSmooth) == 0x003CAC, "Member 'USnake_AnimBP_C::HipSmooth' has a wrong offset!");

}

