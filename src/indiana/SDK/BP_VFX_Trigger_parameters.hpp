#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VFX_Trigger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "EN_Particle_Event_Bindings_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.ExecuteUbergraph_BP_VFX_Trigger
// 0x0590 (0x0590 - 0x0000)
struct BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_EventName_3;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime_3;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ParticleTime_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity_2;                     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction_1;                    // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_CustomEvent_PhysMat;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_EventName_2;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ParticleCount;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_EventName_1;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ParticleTime;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity_1;                     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0xC];                                      // 0x01E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0xC];                                      // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x02B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0338(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x03C0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       K2Node_MakeArray_Array;                            // 0x03E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x03F8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0xC];                                      // 0x0414(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAkAmbientSound*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_1;        // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0488(0x0010)(ConstParm, ReferenceParm)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue_1;              // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_2;                 // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_3;                 // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x04D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0558(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x056A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x056B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0578(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger) == 0x000010, "Wrong alignment on BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger");
static_assert(sizeof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger) == 0x000590, "Wrong size on BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, EntryPoint) == 0x000000, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_delegate_Variable) == 0x000008, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EventName_3) == 0x000018, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EventName_3' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EmitterTime_3) == 0x000020, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EmitterTime_3' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_ParticleTime_1) == 0x000024, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_ParticleTime_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Location_2) == 0x000028, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Velocity_2) == 0x000034, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Velocity_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Direction_1) == 0x000040, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Direction_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Normal) == 0x00004C, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_BoneName) == 0x000058, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_PhysMat) == 0x000060, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EventName_2) == 0x000068, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EventName_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EmitterTime_2) == 0x000070, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EmitterTime_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_ParticleCount) == 0x000074, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_ParticleCount' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EventName_1) == 0x000078, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EventName_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EmitterTime_1) == 0x000080, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EmitterTime_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_ParticleTime) == 0x000084, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Location_1) == 0x000088, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Velocity_1) == 0x000094, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Velocity_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Direction) == 0x0000A0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EventName) == 0x0000AC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_EmitterTime) == 0x0000B4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Location) == 0x0000B8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_CustomEvent_Velocity) == 0x0000C4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_RandomRotator_ReturnValue) == 0x0000D0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakRotator_Roll) == 0x0000DC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakRotator_Pitch) == 0x0000E0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakRotator_Yaw) == 0x0000E4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_2) == 0x0000E9, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000EC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_ClampAngle_ReturnValue) == 0x0000F0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_ClampAngle_ReturnValue_1) == 0x0000F4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_MakeRotator_ReturnValue) == 0x0000F8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000104, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_GetRelativeTransform_ReturnValue) == 0x000190, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakTransform_Rotation) == 0x0001CC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakTransform_Scale) == 0x0001D8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0001F0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakTransform_Location_1) == 0x000220, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakTransform_Rotation_1) == 0x00022C, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakTransform_Scale_1) == 0x000238, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_MakeTransform_ReturnValue_1) == 0x000280, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0002B0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000338, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_struct_Variable) == 0x0003C0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_3) == 0x0003D0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BooleanOR_ReturnValue) == 0x0003D1, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003D4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_PostEventAtLocation_ReturnValue) == 0x0003E0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, K2Node_MakeArray_Array) == 0x0003E8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_delegate_Variable_1) == 0x0003F8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000408, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_MakeTransform_ReturnValue_2) == 0x000420, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_4) == 0x000450, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000458, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_FinishSpawningActor_ReturnValue) == 0x000460, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_5) == 0x000468, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_PostAkEvent_ReturnValue) == 0x00046C, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BooleanOR_ReturnValue_1) == 0x000470, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000474, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_PostEventAtLocation_ReturnValue_1) == 0x000480, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_PostEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_struct_Variable_1) == 0x000488, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_RandomRotator_ReturnValue_1) == 0x000498, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_RandomRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_PostAkEvent_ReturnValue_1) == 0x0004A4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakRotator_Roll_1) == 0x0004A8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakRotator_Pitch_1) == 0x0004AC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_BreakRotator_Yaw_1) == 0x0004B0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_ClampAngle_ReturnValue_2) == 0x0004B4, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_ClampAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_ClampAngle_ReturnValue_3) == 0x0004B8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_ClampAngle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_MakeRotator_ReturnValue_1) == 0x0004BC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_bool_IsClosed_Variable) == 0x0004C8, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0004CC, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0004D0, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_delegate_Variable_2) == 0x000558, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_6) == 0x000568, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_7) == 0x000569, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_bool_Has_Been_Initd_Variable) == 0x00056A, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_bool_Has_Been_Initd_Variable_1) == 0x00056B, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00056C, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_bool_IsClosed_Variable_1) == 0x000570, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, Temp_struct_Variable_2) == 0x000578, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_PostAkEvent_ReturnValue_2) == 0x000588, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger, CallFunc_IsValid_ReturnValue_8) == 0x00058C, "Member 'BP_VFX_Trigger_C_ExecuteUbergraph_BP_VFX_Trigger::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.ParticleSpawn
// 0x0024 (0x0024 - 0x0000)
struct BP_VFX_Trigger_C_ParticleSpawn final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Trigger_C_ParticleSpawn) == 0x000004, "Wrong alignment on BP_VFX_Trigger_C_ParticleSpawn");
static_assert(sizeof(BP_VFX_Trigger_C_ParticleSpawn) == 0x000024, "Wrong size on BP_VFX_Trigger_C_ParticleSpawn");
static_assert(offsetof(BP_VFX_Trigger_C_ParticleSpawn, EventName) == 0x000000, "Member 'BP_VFX_Trigger_C_ParticleSpawn::EventName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ParticleSpawn, EmitterTime) == 0x000008, "Member 'BP_VFX_Trigger_C_ParticleSpawn::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ParticleSpawn, Location) == 0x00000C, "Member 'BP_VFX_Trigger_C_ParticleSpawn::Location' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_ParticleSpawn, Velocity) == 0x000018, "Member 'BP_VFX_Trigger_C_ParticleSpawn::Velocity' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.Particle_Death
// 0x0034 (0x0034 - 0x0000)
struct BP_VFX_Trigger_C_Particle_Death final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Trigger_C_Particle_Death) == 0x000004, "Wrong alignment on BP_VFX_Trigger_C_Particle_Death");
static_assert(sizeof(BP_VFX_Trigger_C_Particle_Death) == 0x000034, "Wrong size on BP_VFX_Trigger_C_Particle_Death");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Death, EventName) == 0x000000, "Member 'BP_VFX_Trigger_C_Particle_Death::EventName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Death, EmitterTime) == 0x000008, "Member 'BP_VFX_Trigger_C_Particle_Death::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Death, ParticleTime) == 0x00000C, "Member 'BP_VFX_Trigger_C_Particle_Death::ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Death, Location) == 0x000010, "Member 'BP_VFX_Trigger_C_Particle_Death::Location' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Death, Velocity) == 0x00001C, "Member 'BP_VFX_Trigger_C_Particle_Death::Velocity' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Death, Direction) == 0x000028, "Member 'BP_VFX_Trigger_C_Particle_Death::Direction' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.Particle_Burst
// 0x0010 (0x0010 - 0x0000)
struct BP_VFX_Trigger_C_Particle_Burst final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleCount;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Trigger_C_Particle_Burst) == 0x000004, "Wrong alignment on BP_VFX_Trigger_C_Particle_Burst");
static_assert(sizeof(BP_VFX_Trigger_C_Particle_Burst) == 0x000010, "Wrong size on BP_VFX_Trigger_C_Particle_Burst");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Burst, EventName) == 0x000000, "Member 'BP_VFX_Trigger_C_Particle_Burst::EventName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Burst, EmitterTime) == 0x000008, "Member 'BP_VFX_Trigger_C_Particle_Burst::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Burst, ParticleCount) == 0x00000C, "Member 'BP_VFX_Trigger_C_Particle_Burst::ParticleCount' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.Particle_Collide
// 0x0050 (0x0050 - 0x0000)
struct BP_VFX_Trigger_C_Particle_Collide final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Trigger_C_Particle_Collide) == 0x000008, "Wrong alignment on BP_VFX_Trigger_C_Particle_Collide");
static_assert(sizeof(BP_VFX_Trigger_C_Particle_Collide) == 0x000050, "Wrong size on BP_VFX_Trigger_C_Particle_Collide");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, EventName) == 0x000000, "Member 'BP_VFX_Trigger_C_Particle_Collide::EventName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, EmitterTime) == 0x000008, "Member 'BP_VFX_Trigger_C_Particle_Collide::EmitterTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, ParticleTime) == 0x00000C, "Member 'BP_VFX_Trigger_C_Particle_Collide::ParticleTime' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, Location) == 0x000010, "Member 'BP_VFX_Trigger_C_Particle_Collide::Location' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, Velocity) == 0x00001C, "Member 'BP_VFX_Trigger_C_Particle_Collide::Velocity' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, Direction) == 0x000028, "Member 'BP_VFX_Trigger_C_Particle_Collide::Direction' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, Normal) == 0x000034, "Member 'BP_VFX_Trigger_C_Particle_Collide::Normal' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, BoneName) == 0x000040, "Member 'BP_VFX_Trigger_C_Particle_Collide::BoneName' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Particle_Collide, PhysMat) == 0x000048, "Member 'BP_VFX_Trigger_C_Particle_Collide::PhysMat' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.UserConstructionScript
// 0x00B8 (0x00B8 - 0x0000)
struct BP_VFX_Trigger_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VFX_Trigger_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_VFX_Trigger_C_UserConstructionScript");
static_assert(sizeof(BP_VFX_Trigger_C_UserConstructionScript) == 0x0000B8, "Wrong size on BP_VFX_Trigger_C_UserConstructionScript");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_RandomRotator_ReturnValue) == 0x000004, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_ClampAngle_ReturnValue) == 0x00001C, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_ClampAngle_ReturnValue_1) == 0x000020, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000024, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000030, "Member 'BP_VFX_Trigger_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.Bind_Events
// 0x0078 (0x0078 - 0x0000)
struct BP_VFX_Trigger_C_Bind_Events final
{
public:
	class UParticleSystemComponent*               PS_0;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EN_Particle_Event_Bindings>            Bindings;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UNiagaraComponent*                      NewParam;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_Particle_Event_Bindings                    CallFunc_Array_Get_Item;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName EventName, float EmitterTime, int32 ParticleCount)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_VFX_Trigger_C_Bind_Events) == 0x000008, "Wrong alignment on BP_VFX_Trigger_C_Bind_Events");
static_assert(sizeof(BP_VFX_Trigger_C_Bind_Events) == 0x000078, "Wrong size on BP_VFX_Trigger_C_Bind_Events");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, PS_0) == 0x000000, "Member 'BP_VFX_Trigger_C_Bind_Events::PS_0' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, Bindings) == 0x000008, "Member 'BP_VFX_Trigger_C_Bind_Events::Bindings' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, NewParam) == 0x000018, "Member 'BP_VFX_Trigger_C_Bind_Events::NewParam' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_VFX_Trigger_C_Bind_Events::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_VFX_Trigger_C_Bind_Events::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_VFX_Trigger_C_Bind_Events::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_VFX_Trigger_C_Bind_Events::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, K2Node_SwitchEnum_CmpSuccess) == 0x00002D, "Member 'BP_VFX_Trigger_C_Bind_Events::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, CallFunc_Less_IntInt_ReturnValue) == 0x00002E, "Member 'BP_VFX_Trigger_C_Bind_Events::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_VFX_Trigger_C_Bind_Events::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_VFX_Trigger_C_Bind_Events::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'BP_VFX_Trigger_C_Bind_Events::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'BP_VFX_Trigger_C_Bind_Events::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Bind_Events, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'BP_VFX_Trigger_C_Bind_Events::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.Update_Beam_Endpoints
// 0x0020 (0x0020 - 0x0000)
struct BP_VFX_Trigger_C_Update_Beam_Endpoints final
{
public:
	class UParticleSystemComponent*               PS_0;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Trigger_C_Update_Beam_Endpoints) == 0x000008, "Wrong alignment on BP_VFX_Trigger_C_Update_Beam_Endpoints");
static_assert(sizeof(BP_VFX_Trigger_C_Update_Beam_Endpoints) == 0x000020, "Wrong size on BP_VFX_Trigger_C_Update_Beam_Endpoints");
static_assert(offsetof(BP_VFX_Trigger_C_Update_Beam_Endpoints, PS_0) == 0x000000, "Member 'BP_VFX_Trigger_C_Update_Beam_Endpoints::PS_0' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Update_Beam_Endpoints, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_VFX_Trigger_C_Update_Beam_Endpoints::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFX_Trigger_C_Update_Beam_Endpoints, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000014, "Member 'BP_VFX_Trigger_C_Update_Beam_Endpoints::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function BP_VFX_Trigger.BP_VFX_Trigger_C.Update_Beam_Endpoints_Niagara
// 0x0008 (0x0008 - 0x0000)
struct BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara final
{
public:
	class UNiagaraComponent*                      NiagraParticleSystem;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara) == 0x000008, "Wrong alignment on BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara");
static_assert(sizeof(BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara) == 0x000008, "Wrong size on BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara");
static_assert(offsetof(BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara, NiagraParticleSystem) == 0x000000, "Member 'BP_VFX_Trigger_C_Update_Beam_Endpoints_Niagara::NiagraParticleSystem' has a wrong offset!");

}

