#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponSelect_BP

#include "Basic.hpp"

#include "WeaponSelect_BP_classes.hpp"
#include "WeaponSelect_BP_parameters.hpp"


namespace SDK
{

// Function WeaponSelect_BP.WeaponSelect_BP_C.ExecuteUbergraph_WeaponSelect_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::ExecuteUbergraph_WeaponSelect_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "ExecuteUbergraph_WeaponSelect_BP");

	Params::WeaponSelect_BP_C_ExecuteUbergraph_WeaponSelect_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.BndEvt__Radial_K2Node_ComponentBoundEvent_1_SectionSelectedSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::BndEvt__Radial_K2Node_ComponentBoundEvent_1_SectionSelectedSignature__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "BndEvt__Radial_K2Node_ComponentBoundEvent_1_SectionSelectedSignature__DelegateSignature");

	Params::WeaponSelect_BP_C_BndEvt__Radial_K2Node_ComponentBoundEvent_1_SectionSelectedSignature__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.OnSectionSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::OnSectionSelected(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "OnSectionSelected");

	Params::WeaponSelect_BP_C_OnSectionSelected Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.OnSetAmmoEquippedDelegate_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEquipped                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AmmoIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::OnSetAmmoEquippedDelegate_Event_0(bool bEquipped, int32 AmmoIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "OnSetAmmoEquippedDelegate_Event_0");

	Params::WeaponSelect_BP_C_OnSetAmmoEquippedDelegate_Event_0 Parms{};

	Parms.bEquipped = bEquipped;
	Parms.AmmoIndex = AmmoIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.OnSetWeaponEquippedDelegate_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WeaponIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::OnSetWeaponEquippedDelegate_Event_0(int32 WeaponIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "OnSetWeaponEquippedDelegate_Event_0");

	Params::WeaponSelect_BP_C_OnSetWeaponEquippedDelegate_Event_0 Parms{};

	Parms.WeaponIndex = WeaponIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "Tick");

	Params::WeaponSelect_BP_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWeaponSelect_BP_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.OnIntro
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       AnimationCompleteCallback                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWeaponSelect_BP_C::OnIntro(const TDelegate<void()>& AnimationCompleteCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "OnIntro");

	Params::WeaponSelect_BP_C_OnIntro Parms{};

	Parms.AnimationCompleteCallback = AnimationCompleteCallback;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.GetBackgroundSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWeaponRadialBackgroundSection_BP_C*AsHUDRadial_Section_BP                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::GetBackgroundSection(class UObject* Object, class UWeaponRadialBackgroundSection_BP_C** AsHUDRadial_Section_BP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "GetBackgroundSection");

	Params::WeaponSelect_BP_C_GetBackgroundSection Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (AsHUDRadial_Section_BP != nullptr)
		*AsHUDRadial_Section_BP = Parms.AsHUDRadial_Section_BP;
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.UpdateBackgroundVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UWeaponRadialBackgroundSection_BP_C*>TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   IndexToTest                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelect_BP_C::UpdateBackgroundVisibility(const TArray<class UWeaponRadialBackgroundSection_BP_C*>& TargetArray, int32 IndexToTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "UpdateBackgroundVisibility");

	Params::WeaponSelect_BP_C_UpdateBackgroundVisibility Parms{};

	Parms.TargetArray = std::move(TargetArray);
	Parms.IndexToTest = IndexToTest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelect_BP.WeaponSelect_BP_C.SetBackgroundVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UWeaponRadialBackgroundSection_BP_C*>Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWeaponSelect_BP_C::SetBackgroundVisibility(TArray<class UWeaponRadialBackgroundSection_BP_C*>& Array, int32 Index_0, bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelect_BP_C", "SetBackgroundVisibility");

	Params::WeaponSelect_BP_C_SetBackgroundVisibility Parms{};

	Parms.Array = std::move(Array);
	Parms.Index_0 = Index_0;
	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}

}

