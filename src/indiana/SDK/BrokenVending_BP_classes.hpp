#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BrokenVending_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TimelineMeshTransform_structs.hpp"
#include "MeshMaterialInstance_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BrokenVending_BP.BrokenVending_BP_C
// 0x00A0 (0x0358 - 0x02B8)
class ABrokenVending_BP_C : public AActor
{
public:
	class UStaticMeshComponent*                   Projector_2;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projector;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lid;                                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimelineMeshTransform                 LidMeshTransform;                                  // 0x02D8(0x0038)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimelineTime;                                      // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Translation;                                       // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshMaterialInstance                  LightMaterialInstance;                             // 0x0330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightEmissiveColor;                                // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyLight();
	void GetLightingConfig(class UStaticMeshComponent** Mesh, class FName* MaterialSlot);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BrokenVending_BP_C">();
	}
	static class ABrokenVending_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABrokenVending_BP_C>();
	}
};
static_assert(alignof(ABrokenVending_BP_C) == 0x000008, "Wrong alignment on ABrokenVending_BP_C");
static_assert(sizeof(ABrokenVending_BP_C) == 0x000358, "Wrong size on ABrokenVending_BP_C");
static_assert(offsetof(ABrokenVending_BP_C, Projector_2) == 0x0002B8, "Member 'ABrokenVending_BP_C::Projector_2' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, Projector) == 0x0002C0, "Member 'ABrokenVending_BP_C::Projector' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, Lid) == 0x0002C8, "Member 'ABrokenVending_BP_C::Lid' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, Frame) == 0x0002D0, "Member 'ABrokenVending_BP_C::Frame' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, LidMeshTransform) == 0x0002D8, "Member 'ABrokenVending_BP_C::LidMeshTransform' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, TimelineTime) == 0x000310, "Member 'ABrokenVending_BP_C::TimelineTime' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, Rotator) == 0x000314, "Member 'ABrokenVending_BP_C::Rotator' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, Translation) == 0x000320, "Member 'ABrokenVending_BP_C::Translation' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, LightMaterialInstance) == 0x000330, "Member 'ABrokenVending_BP_C::LightMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABrokenVending_BP_C, LightEmissiveColor) == 0x000348, "Member 'ABrokenVending_BP_C::LightEmissiveColor' has a wrong offset!");

}

