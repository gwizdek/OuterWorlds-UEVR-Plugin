#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Electric_Fence_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TrapTrigger_Box_x2_classes.hpp"
#include "MeshMaterialInstance_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Trap_Electric_Fence_BP.Trap_Electric_Fence_BP_C
// 0x00D0 (0x04F8 - 0x0428)
class ATrap_Electric_Fence_BP_C final : public ATrapTrigger_Box_x2_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Trap_Electric_Fence_BP_C;           // 0x0428(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_Electric_Gate;                                  // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ArmedSFX;                                          // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           BeamAudio;                                         // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BeamLauncher2;                                     // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BeamLauncher1;                                     // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Post1;                                             // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Post0;                                             // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Tripwire_Beam5;                                 // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Tripwire_Beam4;                                 // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Tripwire_Beam3;                                 // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Tripwire_Beam2;                                 // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Tripwire_Beam1;                                 // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrackingVolumeInflation;                           // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       BeamComponents;                                    // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UMaterialInstance*                      ArmedMaterialInstance;                             // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      UnarmedMaterialInstance;                           // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMeshMaterialInstance>          LightMaterialInstance;                             // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         BeamLauncherDSTCount;                              // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Disarmed_SFX;                                      // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Armed_SFX;                                         // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Loop_SFX;                                          // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewVar_0;                                          // 0x04E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseNiagara;                                        // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Trap_Electric_Fence_BP(int32 EntryPoint);
	void BeamLauncher_Destroyed(class AActor* Instigator_0);
	void OnTrapTriggerDeployed_Event_1();
	void OnTrapTriggerPreDeploy_Event_0(float SecondsTilDeployment);
	void ReceiveBeginPlay();
	void SetArmed(bool Armed);
	void UserConstructionScript();
	void ApplyBeamLocations();
	void TryDisarmTrapTrigger();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Trap_Electric_Fence_BP_C">();
	}
	static class ATrap_Electric_Fence_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrap_Electric_Fence_BP_C>();
	}
};
static_assert(alignof(ATrap_Electric_Fence_BP_C) == 0x000008, "Wrong alignment on ATrap_Electric_Fence_BP_C");
static_assert(sizeof(ATrap_Electric_Fence_BP_C) == 0x0004F8, "Wrong size on ATrap_Electric_Fence_BP_C");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, UberGraphFrame_Trap_Electric_Fence_BP_C) == 0x000428, "Member 'ATrap_Electric_Fence_BP_C::UberGraphFrame_Trap_Electric_Fence_BP_C' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, NS_Electric_Gate) == 0x000430, "Member 'ATrap_Electric_Fence_BP_C::NS_Electric_Gate' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, ArmedSFX) == 0x000438, "Member 'ATrap_Electric_Fence_BP_C::ArmedSFX' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, BeamAudio) == 0x000440, "Member 'ATrap_Electric_Fence_BP_C::BeamAudio' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, BeamLauncher2) == 0x000448, "Member 'ATrap_Electric_Fence_BP_C::BeamLauncher2' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, BeamLauncher1) == 0x000450, "Member 'ATrap_Electric_Fence_BP_C::BeamLauncher1' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, Post1) == 0x000458, "Member 'ATrap_Electric_Fence_BP_C::Post1' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, Post0) == 0x000460, "Member 'ATrap_Electric_Fence_BP_C::Post0' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, PS_Tripwire_Beam5) == 0x000468, "Member 'ATrap_Electric_Fence_BP_C::PS_Tripwire_Beam5' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, PS_Tripwire_Beam4) == 0x000470, "Member 'ATrap_Electric_Fence_BP_C::PS_Tripwire_Beam4' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, PS_Tripwire_Beam3) == 0x000478, "Member 'ATrap_Electric_Fence_BP_C::PS_Tripwire_Beam3' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, PS_Tripwire_Beam2) == 0x000480, "Member 'ATrap_Electric_Fence_BP_C::PS_Tripwire_Beam2' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, PS_Tripwire_Beam1) == 0x000488, "Member 'ATrap_Electric_Fence_BP_C::PS_Tripwire_Beam1' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, Length) == 0x000490, "Member 'ATrap_Electric_Fence_BP_C::Length' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, TrackingVolumeInflation) == 0x000494, "Member 'ATrap_Electric_Fence_BP_C::TrackingVolumeInflation' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, BeamComponents) == 0x000498, "Member 'ATrap_Electric_Fence_BP_C::BeamComponents' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, ArmedMaterialInstance) == 0x0004A8, "Member 'ATrap_Electric_Fence_BP_C::ArmedMaterialInstance' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, UnarmedMaterialInstance) == 0x0004B0, "Member 'ATrap_Electric_Fence_BP_C::UnarmedMaterialInstance' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, LightMaterialInstance) == 0x0004B8, "Member 'ATrap_Electric_Fence_BP_C::LightMaterialInstance' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, BeamLauncherDSTCount) == 0x0004C8, "Member 'ATrap_Electric_Fence_BP_C::BeamLauncherDSTCount' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, Disarmed_SFX) == 0x0004D0, "Member 'ATrap_Electric_Fence_BP_C::Disarmed_SFX' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, Armed_SFX) == 0x0004D8, "Member 'ATrap_Electric_Fence_BP_C::Armed_SFX' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, Loop_SFX) == 0x0004E0, "Member 'ATrap_Electric_Fence_BP_C::Loop_SFX' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, NewVar_0) == 0x0004E8, "Member 'ATrap_Electric_Fence_BP_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ATrap_Electric_Fence_BP_C, UseNiagara) == 0x0004F4, "Member 'ATrap_Electric_Fence_BP_C::UseNiagara' has a wrong offset!");

}

