#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Sound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PC_Sound.PC_Sound_C
// 0x0048 (0x03F0 - 0x03A8)
class UPC_Sound_C final : public UIndianaPlayerAudioComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UAkAudioBank*>                   ForceLoadBankArray;                                // 0x03B0(0x0010)(Edit, BlueprintVisible)
	float                                         Vis_MaxRange;                                      // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vis_CharacterEmitters;                             // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Vis_AmbientEmitters;                               // 0x03C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Vis_EmitterNameData;                               // 0x03C6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Vis_AssociatedEventData;                           // 0x03C7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Vis_DistanceData;                                  // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Vis_CharacterDataColor;                            // 0x03CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Vis_AmbientDataColor;                              // 0x03DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PC_Sound(int32 EntryPoint);
	void AudioDebug_SetAmbientDataColor(float R, float G, float B);
	void AudioDebug_SetCharacterDataColor(float R, float G, float B);
	void Cuil(float CuilLevel);
	void AudioDebug_SetMaxVisRange(float MaxVisRange);
	void AudioDebug_SetVisParams(bool ShowEmitterName, bool ShowAssociatedEvent, bool ShowDistance, float MaxVisRange);
	void AudioDebug_HideCharacterEmitters();
	void AudioDebug_ShowCharacterEmitters(float MaxVisRange);
	void AudioDebug_HideAmbientEmitters();
	void AudioDebug_ShowAmbientEmitters(float MaxVisRange);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void DebugVisualizeEmitters();
	void DebugDrawEmitterVisualization(class UAkComponent* EmitterToVisualize, const struct FVector& ListenerWorldLocation, const struct FLinearColor& DataColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PC_Sound_C">();
	}
	static class UPC_Sound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPC_Sound_C>();
	}
};
static_assert(alignof(UPC_Sound_C) == 0x000008, "Wrong alignment on UPC_Sound_C");
static_assert(sizeof(UPC_Sound_C) == 0x0003F0, "Wrong size on UPC_Sound_C");
static_assert(offsetof(UPC_Sound_C, UberGraphFrame) == 0x0003A8, "Member 'UPC_Sound_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, ForceLoadBankArray) == 0x0003B0, "Member 'UPC_Sound_C::ForceLoadBankArray' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_MaxRange) == 0x0003C0, "Member 'UPC_Sound_C::Vis_MaxRange' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_CharacterEmitters) == 0x0003C4, "Member 'UPC_Sound_C::Vis_CharacterEmitters' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_AmbientEmitters) == 0x0003C5, "Member 'UPC_Sound_C::Vis_AmbientEmitters' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_EmitterNameData) == 0x0003C6, "Member 'UPC_Sound_C::Vis_EmitterNameData' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_AssociatedEventData) == 0x0003C7, "Member 'UPC_Sound_C::Vis_AssociatedEventData' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_DistanceData) == 0x0003C8, "Member 'UPC_Sound_C::Vis_DistanceData' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_CharacterDataColor) == 0x0003CC, "Member 'UPC_Sound_C::Vis_CharacterDataColor' has a wrong offset!");
static_assert(offsetof(UPC_Sound_C, Vis_AmbientDataColor) == 0x0003DC, "Member 'UPC_Sound_C::Vis_AmbientDataColor' has a wrong offset!");

}

