#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StackSplitting_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function StackSplitting_BP.StackSplitting_BP_C.ExecuteUbergraph_StackSplitting_BP
// 0x0018 (0x0018 - 0x0000)
struct StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewHeight;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP) == 0x000008, "Wrong alignment on StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP");
static_assert(sizeof(StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP) == 0x000018, "Wrong size on StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP");
static_assert(offsetof(StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP, EntryPoint) == 0x000000, "Member 'StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP, K2Node_Event_NewHeight) == 0x000004, "Member 'StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP::K2Node_Event_NewHeight' has a wrong offset!");
static_assert(offsetof(StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'StackSplitting_BP_C_ExecuteUbergraph_StackSplitting_BP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function StackSplitting_BP.StackSplitting_BP_C.SetNewBackingMaterialHeight
// 0x0004 (0x0004 - 0x0000)
struct StackSplitting_BP_C_SetNewBackingMaterialHeight final
{
public:
	float                                         NewHeight;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StackSplitting_BP_C_SetNewBackingMaterialHeight) == 0x000004, "Wrong alignment on StackSplitting_BP_C_SetNewBackingMaterialHeight");
static_assert(sizeof(StackSplitting_BP_C_SetNewBackingMaterialHeight) == 0x000004, "Wrong size on StackSplitting_BP_C_SetNewBackingMaterialHeight");
static_assert(offsetof(StackSplitting_BP_C_SetNewBackingMaterialHeight, NewHeight) == 0x000000, "Member 'StackSplitting_BP_C_SetNewBackingMaterialHeight::NewHeight' has a wrong offset!");

}

