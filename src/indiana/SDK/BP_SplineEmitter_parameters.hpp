#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineEmitter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineEmitter.BP_SplineEmitter_C.ExecuteUbergraph_BP_SplineEmitter
// 0x0198 (0x0198 - 0x0000)
struct BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerWorldLocation_PlayerWorldLocation; // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEmitterLocationDeltaLength_EmitterWorldLocationDeltaLength; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x005C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_SmoothEmitterJump_SmoothedEmitterWorldLocation; // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0180(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue;        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter) == 0x000008, "Wrong alignment on BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter");
static_assert(sizeof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter) == 0x000198, "Wrong size on BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, EntryPoint) == 0x000000, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, Temp_struct_Variable) == 0x000008, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_GetPlayerWorldLocation_PlayerWorldLocation) == 0x00001C, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_GetPlayerWorldLocation_PlayerWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000028, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_GetEmitterLocationDeltaLength_EmitterWorldLocationDeltaLength) == 0x000040, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_GetEmitterLocationDeltaLength_EmitterWorldLocationDeltaLength' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_VSize_ReturnValue) == 0x000054, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00005C, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_SmoothEmitterJump_SmoothedEmitterWorldLocation) == 0x0000E4, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_SmoothEmitterJump_SmoothedEmitterWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0000F4, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_BooleanAND_ReturnValue_1) == 0x00017C, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, Temp_delegate_Variable) == 0x000180, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter, CallFunc_PostAssociatedAkEvent_ReturnValue) == 0x000190, "Member 'BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter::CallFunc_PostAssociatedAkEvent_ReturnValue' has a wrong offset!");

// Function BP_SplineEmitter.BP_SplineEmitter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineEmitter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineEmitter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplineEmitter_C_ReceiveTick");
static_assert(sizeof(BP_SplineEmitter_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplineEmitter_C_ReceiveTick");
static_assert(offsetof(BP_SplineEmitter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplineEmitter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplineEmitter.BP_SplineEmitter_C.UserConstructionScript
// 0x0094 (0x0094 - 0x0000)
struct BP_SplineEmitter_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SplineEmitter_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_SplineEmitter_C_UserConstructionScript");
static_assert(sizeof(BP_SplineEmitter_C_UserConstructionScript) == 0x000094, "Wrong size on BP_SplineEmitter_C_UserConstructionScript");
static_assert(offsetof(BP_SplineEmitter_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000000, "Member 'BP_SplineEmitter_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00000C, "Member 'BP_SplineEmitter_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_SplineEmitter.BP_SplineEmitter_C.GetPlayerWorldLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_SplineEmitter_C_GetPlayerWorldLocation final
{
public:
	struct FVector                                PlayerWorldLocation;                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AIndianaPlayerCharacter*                CallFunc_GetIndianaPC_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineEmitter_C_GetPlayerWorldLocation) == 0x000008, "Wrong alignment on BP_SplineEmitter_C_GetPlayerWorldLocation");
static_assert(sizeof(BP_SplineEmitter_C_GetPlayerWorldLocation) == 0x000028, "Wrong size on BP_SplineEmitter_C_GetPlayerWorldLocation");
static_assert(offsetof(BP_SplineEmitter_C_GetPlayerWorldLocation, PlayerWorldLocation) == 0x000000, "Member 'BP_SplineEmitter_C_GetPlayerWorldLocation::PlayerWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetPlayerWorldLocation, CallFunc_GetIndianaPC_ReturnValue) == 0x000010, "Member 'BP_SplineEmitter_C_GetPlayerWorldLocation::CallFunc_GetIndianaPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetPlayerWorldLocation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SplineEmitter_C_GetPlayerWorldLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetPlayerWorldLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'BP_SplineEmitter_C_GetPlayerWorldLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_SplineEmitter.BP_SplineEmitter_C.GetEmitterLocationDeltaLength
// 0x002C (0x002C - 0x0000)
struct BP_SplineEmitter_C_GetEmitterLocationDeltaLength final
{
public:
	struct FVector                                NewEmitterWorldLocation;                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterWorldLocationDeltaLength;                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength) == 0x000004, "Wrong alignment on BP_SplineEmitter_C_GetEmitterLocationDeltaLength");
static_assert(sizeof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength) == 0x00002C, "Wrong size on BP_SplineEmitter_C_GetEmitterLocationDeltaLength");
static_assert(offsetof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength, NewEmitterWorldLocation) == 0x000000, "Member 'BP_SplineEmitter_C_GetEmitterLocationDeltaLength::NewEmitterWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength, EmitterWorldLocationDeltaLength) == 0x00000C, "Member 'BP_SplineEmitter_C_GetEmitterLocationDeltaLength::EmitterWorldLocationDeltaLength' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_SplineEmitter_C_GetEmitterLocationDeltaLength::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_SplineEmitter_C_GetEmitterLocationDeltaLength::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_GetEmitterLocationDeltaLength, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'BP_SplineEmitter_C_GetEmitterLocationDeltaLength::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_SplineEmitter.BP_SplineEmitter_C.SmoothEmitterJump
// 0x0044 (0x0044 - 0x0000)
struct BP_SplineEmitter_C_SmoothEmitterJump final
{
public:
	struct FVector                                NewEmitterWorldLocation;                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothSpeed_0;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SmoothedEmitterWorldLocation;                      // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentSmoothedEmitterWorldLocation;               // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineEmitter_C_SmoothEmitterJump) == 0x000004, "Wrong alignment on BP_SplineEmitter_C_SmoothEmitterJump");
static_assert(sizeof(BP_SplineEmitter_C_SmoothEmitterJump) == 0x000044, "Wrong size on BP_SplineEmitter_C_SmoothEmitterJump");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, NewEmitterWorldLocation) == 0x000000, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::NewEmitterWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, DeltaTime) == 0x00000C, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, SmoothSpeed_0) == 0x000010, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::SmoothSpeed_0' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, SmoothedEmitterWorldLocation) == 0x000014, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::SmoothedEmitterWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, CurrentSmoothedEmitterWorldLocation) == 0x000020, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::CurrentSmoothedEmitterWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineEmitter_C_SmoothEmitterJump, CallFunc_VInterpTo_ReturnValue) == 0x000038, "Member 'BP_SplineEmitter_C_SmoothEmitterJump::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");

}

