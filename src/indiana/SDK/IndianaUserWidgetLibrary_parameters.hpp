#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IndianaUserWidgetLibrary

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function IndianaUserWidgetLibrary.IndianaUserWidgetLibrary_C.ContinueAnimation
// 0x0038 (0x0038 - 0x0000)
struct IndianaUserWidgetLibrary_C_ContinueAnimation final
{
public:
	class UUserWidget*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InAnimation;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLoopsToPlay;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlaybackSpeed;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelativePlaybackTime_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IndianaUserWidgetLibrary_C_ContinueAnimation) == 0x000008, "Wrong alignment on IndianaUserWidgetLibrary_C_ContinueAnimation");
static_assert(sizeof(IndianaUserWidgetLibrary_C_ContinueAnimation) == 0x000038, "Wrong size on IndianaUserWidgetLibrary_C_ContinueAnimation");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, Target) == 0x000000, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::Target' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, InAnimation) == 0x000008, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::InAnimation' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, NumLoopsToPlay) == 0x000010, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::NumLoopsToPlay' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, PlayMode) == 0x000014, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::PlayMode' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, PlaybackSpeed) == 0x000018, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, __WorldContext) == 0x000020, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::__WorldContext' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, CallFunc_GetRelativePlaybackTime_ReturnValue) == 0x000028, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::CallFunc_GetRelativePlaybackTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function IndianaUserWidgetLibrary.IndianaUserWidgetLibrary_C.PlayAnimationWithCallback
// 0x0040 (0x0040 - 0x0000)
struct IndianaUserWidgetLibrary_C_PlayAnimationWithCallback final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InAnimation;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAtTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLoopsToPlay;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlaybackSpeed;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Event;                                             // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback) == 0x000008, "Wrong alignment on IndianaUserWidgetLibrary_C_PlayAnimationWithCallback");
static_assert(sizeof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback) == 0x000040, "Wrong size on IndianaUserWidgetLibrary_C_PlayAnimationWithCallback");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, UserWidget) == 0x000000, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::UserWidget' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, InAnimation) == 0x000008, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::InAnimation' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, StartAtTime) == 0x000010, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::StartAtTime' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, NumLoopsToPlay) == 0x000014, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::NumLoopsToPlay' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, PlayMode) == 0x000018, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::PlayMode' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, PlaybackSpeed) == 0x00001C, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, Event) == 0x000020, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::Event' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, __WorldContext) == 0x000030, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::__WorldContext' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_PlayAnimationWithCallback, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'IndianaUserWidgetLibrary_C_PlayAnimationWithCallback::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function IndianaUserWidgetLibrary.IndianaUserWidgetLibrary_C.GetRelativePlaybackTime
// 0x0048 (0x0048 - 0x0000)
struct IndianaUserWidgetLibrary_C_GetRelativePlaybackTime final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 Animation;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationTimeRemaining_ReturnValue;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime) == 0x000008, "Wrong alignment on IndianaUserWidgetLibrary_C_GetRelativePlaybackTime");
static_assert(sizeof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime) == 0x000048, "Wrong size on IndianaUserWidgetLibrary_C_GetRelativePlaybackTime");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, UserWidget) == 0x000000, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::UserWidget' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, Animation) == 0x000008, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::Animation' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, PlayMode) == 0x000010, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::PlayMode' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, __WorldContext) == 0x000018, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, ReturnValue) == 0x000020, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, Temp_byte_Variable) == 0x000024, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, CallFunc_GetAnimationTimeRemaining_ReturnValue) == 0x000028, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::CallFunc_GetAnimationTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, CallFunc_GetEndTime_ReturnValue) == 0x00002C, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000030, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, Temp_float_Variable) == 0x000034, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, K2Node_Select_Default) == 0x000038, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_GetRelativePlaybackTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'IndianaUserWidgetLibrary_C_GetRelativePlaybackTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function IndianaUserWidgetLibrary.IndianaUserWidgetLibrary_C.ContinueAnimationWithCallback
// 0x0040 (0x0040 - 0x0000)
struct IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback final
{
public:
	class UUserWidget*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InAnimation;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLoopsToPlay;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlaybackSpeed;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Event;                                             // 0x001C(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelativePlaybackTime_ReturnValue;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback) == 0x000008, "Wrong alignment on IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback");
static_assert(sizeof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback) == 0x000040, "Wrong size on IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, Target) == 0x000000, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::Target' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, InAnimation) == 0x000008, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::InAnimation' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, NumLoopsToPlay) == 0x000010, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::NumLoopsToPlay' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, PlayMode) == 0x000014, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::PlayMode' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, PlaybackSpeed) == 0x000018, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, Event) == 0x00001C, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::Event' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, __WorldContext) == 0x000030, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::__WorldContext' has a wrong offset!");
static_assert(offsetof(IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback, CallFunc_GetRelativePlaybackTime_ReturnValue) == 0x000038, "Member 'IndianaUserWidgetLibrary_C_ContinueAnimationWithCallback::CallFunc_GetRelativePlaybackTime_ReturnValue' has a wrong offset!");

}

