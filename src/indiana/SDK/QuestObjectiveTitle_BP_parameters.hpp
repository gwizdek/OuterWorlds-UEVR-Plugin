#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestObjectiveTitle_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Indiana_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function QuestObjectiveTitle_BP.QuestObjectiveTitle_BP_C.ExecuteUbergraph_QuestObjectiveTitle_BP
// 0x0080 (0x0080 - 0x0000)
struct QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompletionStatus                             K2Node_Event_ObjectiveStatus;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompletionStatus                             Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorAndOpacity_ReturnValue;           // 0x0020(0x0028)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0028)()
};
static_assert(alignof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP) == 0x000008, "Wrong alignment on QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP");
static_assert(sizeof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP) == 0x000080, "Wrong size on QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, EntryPoint) == 0x000000, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, K2Node_Event_ObjectiveStatus) == 0x000004, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::K2Node_Event_ObjectiveStatus' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, Temp_byte_Variable) == 0x000005, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, Temp_float_Variable) == 0x000008, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, Temp_float_Variable_1) == 0x00000C, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, Temp_float_Variable_2) == 0x000010, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, Temp_float_Variable_3) == 0x000014, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, Temp_float_Variable_4) == 0x000018, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, K2Node_Select_Default) == 0x00001C, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, CallFunc_GetColorAndOpacity_ReturnValue) == 0x000020, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::CallFunc_GetColorAndOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'QuestObjectiveTitle_BP_C_ExecuteUbergraph_QuestObjectiveTitle_BP::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function QuestObjectiveTitle_BP.QuestObjectiveTitle_BP_C.OnObjectiveStatusChange
// 0x0001 (0x0001 - 0x0000)
struct QuestObjectiveTitle_BP_C_OnObjectiveStatusChange final
{
public:
	ECompletionStatus                             ObjectiveStatus;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestObjectiveTitle_BP_C_OnObjectiveStatusChange) == 0x000001, "Wrong alignment on QuestObjectiveTitle_BP_C_OnObjectiveStatusChange");
static_assert(sizeof(QuestObjectiveTitle_BP_C_OnObjectiveStatusChange) == 0x000001, "Wrong size on QuestObjectiveTitle_BP_C_OnObjectiveStatusChange");
static_assert(offsetof(QuestObjectiveTitle_BP_C_OnObjectiveStatusChange, ObjectiveStatus) == 0x000000, "Member 'QuestObjectiveTitle_BP_C_OnObjectiveStatusChange::ObjectiveStatus' has a wrong offset!");

}

