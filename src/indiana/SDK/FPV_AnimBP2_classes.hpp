#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FPV_AnimBP2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Indiana_structs.hpp"
#include "Indiana_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass FPV_AnimBP2.FPV_AnimBP2_C
// 0x4030 (0x4630 - 0x0600)
class UFPV_AnimBP2_C final : public UFPVAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0608(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x0638(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0680(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x06C8(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x07D0(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x07F0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0838(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_57;                 // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_56;                 // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x08F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x0920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x0948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x0998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x09C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x09E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0A38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0A60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x0A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x0AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x0AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x0B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x0B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0B50(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x0B78(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0BF8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x0C28(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x0CA8(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0CD8(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0CF0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x0D20(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0DA0(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x0E60(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0EE0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0F10(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0F90(0x0080)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_5;          // 0x1010(0x0198)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x11A8(0x00A0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x1248(0x0198)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x13E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x1410(0x0080)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x1490(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x14C8(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x1548(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1610(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x1690(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x16B0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x16D0(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x17D8(0x0080)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x1858(0x0198)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x19F0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1A90(0x0080)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x1B10(0x00D0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x1BE0(0x0198)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1D78(0x0030)()
	struct FAnimNode_LocomotionPlay               AnimGraphNode_LocomotionPlay;                      // 0x1DA8(0x0090)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1E38(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1EF8(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1F78(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x2040(0x0080)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x20C0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x20F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x2178(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x21A8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x2258(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x22D8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x23A0(0x0080)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x2420(0x0198)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x25B8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x2658(0x0080)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x26D8(0x00D0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x27A8(0x0198)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x2940(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x2970(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x2A20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x2A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x2A70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x2A98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x2AC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x2AE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x2B10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x2B38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x2B60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x2B88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x2BB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x2BD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x2C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x2C28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x2C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x2C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x2CA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x2CC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x2CF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x2D18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x2D40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x2D68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x2D90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x2DB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x2DE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x2E08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x2E30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2E58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2E80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x2EA8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x2F28(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2F58(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2FD8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x3008(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x3088(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x30B8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x3138(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x3168(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x31E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3218(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x3298(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x32C8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x3348(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3378(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x33F8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3428(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x34A8(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x34D8(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x34F0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3520(0x00B0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x35D0(0x00D0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x36A0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x36E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x3710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x3738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x3760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x3788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x37B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x37D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x3828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x3850(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x3878(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x3968(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x3998(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3A88(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x3AB8(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3BA8(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x3BD8(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x3BF0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x3C20(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x3CD0(0x0048)()
	uint8                                         Pad_3D18[0x8];                                     // 0x3D18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x3D20(0x01E0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x3F00(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x3F20(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x4100(0x01E0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x42E0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x4300(0x0108)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x4408(0x00D0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x44D8(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x44F8(0x0048)()
	class UWeaponAnimationsFPV_BP_C*              WeaponAnimationsBP;                                // 0x4540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimationsFPV_BP_C*              OriginalWeaponAnimationsBP;                        // 0x4548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimationsFPV_BP_C*              HolsteredWeaponAnimationsBP;                       // 0x4550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MovementStateIsInAir;                              // 0x4558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          MovementStateIsClimbing;                           // 0x4559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MovementStateIsSprinting;                          // 0x455A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          FineAimingJumpTreeEnabled;                         // 0x455B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BlockingJumpTreeEnabled;                           // 0x455C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455D[0x3];                                     // 0x455D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CameraBoneRotator;                                 // 0x4560(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_456C[0x4];                                     // 0x456C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpaceBase*                        LocomotionBlendSpace;                              // 0x4570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UBlendSpaceBase*                        FineAimLocomotionBlendSpace;                       // 0x4578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UBlendSpaceBase*                        BlockLocomotionBlendSpace;                         // 0x4580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintSequence;                                    // 0x4588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   LookAimOffset;                                     // 0x4590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   BlockLookAimOffset;                                // 0x4598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAimOffsetBlendSpace*                   FineAimLookAimOffset;                              // 0x45A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          JumpStart;                                         // 0x45A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_45A9[0x7];                                     // 0x45A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      JumpStartSequence;                                 // 0x45B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      FallingSequence;                                   // 0x45B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      JumpEndSequence;                                   // 0x45C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      FineAimJumpStartSequence;                          // 0x45C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      FineAimFallingSequence;                            // 0x45D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      FineAimJumpEndSequence;                            // 0x45D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         AdditiveJumpStrength;                              // 0x45E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_45E4[0x4];                                     // 0x45E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      BlockJumpStartSequence;                            // 0x45E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      BlockFallingSequence;                              // 0x45F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      BlockJumpEndSequence;                              // 0x45F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          SprintStartIsValid;                                // 0x4600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SprintEndIsValid;                                  // 0x4601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4602[0x2];                                     // 0x4602(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothedTurnSpeed;                                 // 0x4604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothedLookUpSpeed;                               // 0x4608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionSpeed;                                   // 0x460C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HobbledAddditveStrength;                           // 0x4610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprintBlocked;                                   // 0x4614(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4615[0x3];                                     // 0x4615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WalkAmplitudeSmoothed;                             // 0x4618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraBobActive;                                   // 0x461C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            HitReactSequence;                                  // 0x4620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTransitioningBetweenEquipement;                  // 0x4628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ValidSprintEnd;                                    // 0x4629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_FPV_AnimBP2(int32 EntryPoint);
	void OnBlockHit(bool bBlockedMeleeAttack);
	void OnNewWeaponAnimations(class UWeaponAnimations* NewWeaponAnimations);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void OnBlockEnd();
	void OnBlockStart();
	void OnDodged(EDodgeDirection DodgeDirection);
	void OnStopCrouch();
	void OnStartCrouch();
	void OnLanded(float FallDistance);
	void OnJumped();
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_744857BB4685E5589ADCBB971D2BEA7B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_95F99F3845AC3F1A3EDD89AA5E70D42C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_FBE345234802265512F99DBA843CE40C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_02297E7A46C7333EF5B2AF83448E7DDA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_C808514449864397697391AD712402F7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_LayeredBoneBlend_CDDE03BF431D63B906681F9085DB2FF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_BlendListByBool_E257E04645621D0B5AA855BB140E4EAC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_RotationOffsetBlendSpace_5469D11B490CFD934EACD6ACDAC3C7C9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_8DD794D343413FC836851E8147525ED0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_700F798D4CF1CE0090E113B77AC51F78();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_558B2A9043B0627DA0E543B0E6A2B300();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_BlendListByBool_12BF9B7B480C92B19A4D0CA8FBDF9C90();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_RotationOffsetBlendSpace_970AC589472C3955744193AA9FEE4BA0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_79F906B042635C33C671639AA7359422();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_ModifyBone_8C768CE6486F081FDDC89F870BF05669();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_1452710C488AF2AB4C8A168208ADB031();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_0D7D5146408A922B06762DBB9AAC008A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_011FBCB9470888D366327097D2C4622F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_FF847FC74D1FB979EDAB279968197FC3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_CA437A75462404B364BF5BB335072D3B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_A37382D748FA59995EFB9C9E59535F2D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_LayeredBoneBlend_C6D616EA433282CF9F287A8474513C2F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_A3DB140E4847E00472F7478BEF5BACB1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_BlendListByBool_70B3E24542E3D403D11C67BC1CCF7D03();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_RotationOffsetBlendSpace_BB67755249EB784741D586915A6A2638();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_SequencePlayer_9F63D97B494933A39EB154986D74A53A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_D4050A8149AACE25F4284489BEFFEE40();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_5A48FE094EB2D486EB747BBBA5D0BEB2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_6FEE0C0E4DCC01A75FE539ADF7E2A543();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_744D66AD4264B2B3A2D923A82A5CC216();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_EB0D7049426D41B2D8C815B69BF930D9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_475B389544A2AE58A9C9C0BB7B43661F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_438867824E92E6A6126A1C999B7E6622();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_DB3802D942E00737D748CAAAE07D1BC7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_3F9D194F4DA0ECDAF2E13EA148863A25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_D6A48A63436A54FF31E53BB2D5C1C100();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_BA43C67746C048D61862349365F4DF26();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_8D99D3404442856569F87FAC93FF519F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_A87EA53B4241AD8FB018EABA19D925BC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_34C09A16446CAD108D2D18A4CDD4C6B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_TransitionResult_C16E017D4032063B009869A89CC97F3B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_FPV_AnimBP2_AnimGraphNode_ModifyBone_92ECF0944465C24CD12526852F98C86F();
	void UpdateVariables(float Delta);
	void UpdateWeaponAnimations();
	void IsPlayingMontageOnFullyBody(bool* Result);
	void IsPlayingMontageOnDeath(bool* Result);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FPV_AnimBP2_C">();
	}
	static class UFPV_AnimBP2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFPV_AnimBP2_C>();
	}
};
static_assert(alignof(UFPV_AnimBP2_C) == 0x000010, "Wrong alignment on UFPV_AnimBP2_C");
static_assert(sizeof(UFPV_AnimBP2_C) == 0x004630, "Wrong size on UFPV_AnimBP2_C");
static_assert(offsetof(UFPV_AnimBP2_C, UberGraphFrame) == 0x000600, "Member 'UFPV_AnimBP2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Root) == 0x000608, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot_6) == 0x000638, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot_5) == 0x000680, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ModifyBone_2) == 0x0006C8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0007D0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot_4) == 0x0007F0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot_3) == 0x000838, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_57) == 0x000880, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_57' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_56) == 0x0008A8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_56' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_55) == 0x0008D0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_54) == 0x0008F8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_53) == 0x000920, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_52) == 0x000948, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_51) == 0x000970, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_50) == 0x000998, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_49) == 0x0009C0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_48) == 0x0009E8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_47) == 0x000A10, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_46) == 0x000A38, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_45) == 0x000A60, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_44) == 0x000A88, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_43) == 0x000AB0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_42) == 0x000AD8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_41) == 0x000B00, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_40) == 0x000B28, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_39) == 0x000B50, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_25) == 0x000B78, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_21) == 0x000BF8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_24) == 0x000C28, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_20) == 0x000CA8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LocalRefPose) == 0x000CD8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_19) == 0x000CF0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_23) == 0x000D20, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000DA0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_22) == 0x000E60, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_18) == 0x000EE0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_21) == 0x000F10, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_20) == 0x000F90, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_RotationOffsetBlendSpace_5) == 0x001010, "Member 'UFPV_AnimBP2_C::AnimGraphNode_RotationOffsetBlendSpace_5' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_BlendListByBool_2) == 0x0011A8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x001248, "Member 'UFPV_AnimBP2_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_17) == 0x0013E0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_19) == 0x001410, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_MakeDynamicAdditive_1) == 0x001490, "Member 'UFPV_AnimBP2_C::AnimGraphNode_MakeDynamicAdditive_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_18) == 0x0014C8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyAdditive_2) == 0x001548, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_17) == 0x001610, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LocalToComponentSpace_2) == 0x001690, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0016B0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ModifyBone_1) == 0x0016D0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_16) == 0x0017D8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x001858, "Member 'UFPV_AnimBP2_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_BlendListByBool_1) == 0x0019F0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_15) == 0x001A90, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x001B10, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x001BE0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_16) == 0x001D78, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LocomotionPlay) == 0x001DA8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LocomotionPlay' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LayeredBoneBlend) == 0x001E38, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_14) == 0x001EF8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyAdditive_1) == 0x001F78, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_13) == 0x002040, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_MakeDynamicAdditive) == 0x0020C0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_12) == 0x0020F8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_15) == 0x002178, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateMachine_3) == 0x0021A8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_11) == 0x002258, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyAdditive) == 0x0022D8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_10) == 0x0023A0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x002420, "Member 'UFPV_AnimBP2_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_BlendListByBool) == 0x0025B8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_9) == 0x002658, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x0026D8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0027A8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_14) == 0x002940, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateMachine_2) == 0x002970, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_38) == 0x002A20, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_37) == 0x002A48, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_36) == 0x002A70, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_35) == 0x002A98, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_34) == 0x002AC0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_33) == 0x002AE8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_32) == 0x002B10, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_31) == 0x002B38, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_30) == 0x002B60, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_29) == 0x002B88, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_28) == 0x002BB0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_27) == 0x002BD8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_26) == 0x002C00, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_25) == 0x002C28, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_24) == 0x002C50, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_23) == 0x002C78, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_22) == 0x002CA0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_21) == 0x002CC8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_20) == 0x002CF0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_19) == 0x002D18, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_18) == 0x002D40, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_17) == 0x002D68, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_16) == 0x002D90, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_15) == 0x002DB8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_14) == 0x002DE0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_13) == 0x002E08, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_12) == 0x002E30, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_11) == 0x002E58, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_10) == 0x002E80, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_8) == 0x002EA8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_13) == 0x002F28, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_7) == 0x002F58, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_12) == 0x002FD8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_6) == 0x003008, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_11) == 0x003088, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_5) == 0x0030B8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_10) == 0x003138, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_4) == 0x003168, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_9) == 0x0031E8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_3) == 0x003218, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_8) == 0x003298, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_2) == 0x0032C8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_7) == 0x003348, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer_1) == 0x003378, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_6) == 0x0033F8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_SequencePlayer) == 0x003428, "Member 'UFPV_AnimBP2_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_5) == 0x0034A8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_IdentityPose_1) == 0x0034D8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_4) == 0x0034F0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateMachine_1) == 0x003520, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x0035D0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot_2) == 0x0036A0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_9) == 0x0036E8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_8) == 0x003710, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_7) == 0x003738, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_6) == 0x003760, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_5) == 0x003788, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_4) == 0x0037B0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_3) == 0x0037D8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_2) == 0x003800, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult_1) == 0x003828, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TransitionResult) == 0x003850, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_BlendSpacePlayer_2) == 0x003878, "Member 'UFPV_AnimBP2_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_3) == 0x003968, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_BlendSpacePlayer_1) == 0x003998, "Member 'UFPV_AnimBP2_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_2) == 0x003A88, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_BlendSpacePlayer) == 0x003AB8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult_1) == 0x003BA8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_IdentityPose) == 0x003BD8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateResult) == 0x003BF0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_StateMachine) == 0x003C20, "Member 'UFPV_AnimBP2_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot_1) == 0x003CD0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TwoBoneIK_2) == 0x003D20, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LocalToComponentSpace_1) == 0x003F00, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TwoBoneIK_1) == 0x003F20, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_TwoBoneIK) == 0x004100, "Member 'UFPV_AnimBP2_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_LocalToComponentSpace) == 0x0042E0, "Member 'UFPV_AnimBP2_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ModifyBone) == 0x004300, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x004408, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_ComponentToLocalSpace) == 0x0044D8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AnimGraphNode_Slot) == 0x0044F8, "Member 'UFPV_AnimBP2_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, WeaponAnimationsBP) == 0x004540, "Member 'UFPV_AnimBP2_C::WeaponAnimationsBP' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, OriginalWeaponAnimationsBP) == 0x004548, "Member 'UFPV_AnimBP2_C::OriginalWeaponAnimationsBP' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, HolsteredWeaponAnimationsBP) == 0x004550, "Member 'UFPV_AnimBP2_C::HolsteredWeaponAnimationsBP' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, MovementStateIsInAir) == 0x004558, "Member 'UFPV_AnimBP2_C::MovementStateIsInAir' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, MovementStateIsClimbing) == 0x004559, "Member 'UFPV_AnimBP2_C::MovementStateIsClimbing' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, MovementStateIsSprinting) == 0x00455A, "Member 'UFPV_AnimBP2_C::MovementStateIsSprinting' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FineAimingJumpTreeEnabled) == 0x00455B, "Member 'UFPV_AnimBP2_C::FineAimingJumpTreeEnabled' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, BlockingJumpTreeEnabled) == 0x00455C, "Member 'UFPV_AnimBP2_C::BlockingJumpTreeEnabled' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, CameraBoneRotator) == 0x004560, "Member 'UFPV_AnimBP2_C::CameraBoneRotator' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, LocomotionBlendSpace) == 0x004570, "Member 'UFPV_AnimBP2_C::LocomotionBlendSpace' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FineAimLocomotionBlendSpace) == 0x004578, "Member 'UFPV_AnimBP2_C::FineAimLocomotionBlendSpace' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, BlockLocomotionBlendSpace) == 0x004580, "Member 'UFPV_AnimBP2_C::BlockLocomotionBlendSpace' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, SprintSequence) == 0x004588, "Member 'UFPV_AnimBP2_C::SprintSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, LookAimOffset) == 0x004590, "Member 'UFPV_AnimBP2_C::LookAimOffset' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, BlockLookAimOffset) == 0x004598, "Member 'UFPV_AnimBP2_C::BlockLookAimOffset' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FineAimLookAimOffset) == 0x0045A0, "Member 'UFPV_AnimBP2_C::FineAimLookAimOffset' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, JumpStart) == 0x0045A8, "Member 'UFPV_AnimBP2_C::JumpStart' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, JumpStartSequence) == 0x0045B0, "Member 'UFPV_AnimBP2_C::JumpStartSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FallingSequence) == 0x0045B8, "Member 'UFPV_AnimBP2_C::FallingSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, JumpEndSequence) == 0x0045C0, "Member 'UFPV_AnimBP2_C::JumpEndSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FineAimJumpStartSequence) == 0x0045C8, "Member 'UFPV_AnimBP2_C::FineAimJumpStartSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FineAimFallingSequence) == 0x0045D0, "Member 'UFPV_AnimBP2_C::FineAimFallingSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, FineAimJumpEndSequence) == 0x0045D8, "Member 'UFPV_AnimBP2_C::FineAimJumpEndSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, AdditiveJumpStrength) == 0x0045E0, "Member 'UFPV_AnimBP2_C::AdditiveJumpStrength' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, BlockJumpStartSequence) == 0x0045E8, "Member 'UFPV_AnimBP2_C::BlockJumpStartSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, BlockFallingSequence) == 0x0045F0, "Member 'UFPV_AnimBP2_C::BlockFallingSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, BlockJumpEndSequence) == 0x0045F8, "Member 'UFPV_AnimBP2_C::BlockJumpEndSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, SprintStartIsValid) == 0x004600, "Member 'UFPV_AnimBP2_C::SprintStartIsValid' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, SprintEndIsValid) == 0x004601, "Member 'UFPV_AnimBP2_C::SprintEndIsValid' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, SmoothedTurnSpeed) == 0x004604, "Member 'UFPV_AnimBP2_C::SmoothedTurnSpeed' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, SmoothedLookUpSpeed) == 0x004608, "Member 'UFPV_AnimBP2_C::SmoothedLookUpSpeed' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, LocomotionSpeed) == 0x00460C, "Member 'UFPV_AnimBP2_C::LocomotionSpeed' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, HobbledAddditveStrength) == 0x004610, "Member 'UFPV_AnimBP2_C::HobbledAddditveStrength' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, IsSprintBlocked) == 0x004614, "Member 'UFPV_AnimBP2_C::IsSprintBlocked' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, WalkAmplitudeSmoothed) == 0x004618, "Member 'UFPV_AnimBP2_C::WalkAmplitudeSmoothed' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, CameraBobActive) == 0x00461C, "Member 'UFPV_AnimBP2_C::CameraBobActive' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, HitReactSequence) == 0x004620, "Member 'UFPV_AnimBP2_C::HitReactSequence' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, IsTransitioningBetweenEquipement) == 0x004628, "Member 'UFPV_AnimBP2_C::IsTransitioningBetweenEquipement' has a wrong offset!");
static_assert(offsetof(UFPV_AnimBP2_C, ValidSprintEnd) == 0x004629, "Member 'UFPV_AnimBP2_C::ValidSprintEnd' has a wrong offset!");

}

