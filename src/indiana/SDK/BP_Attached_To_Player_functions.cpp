#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Attached_To_Player

#include "Basic.hpp"

#include "BP_Attached_To_Player_classes.hpp"
#include "BP_Attached_To_Player_parameters.hpp"


namespace SDK
{

// Function BP_Attached_To_Player.BP_Attached_To_Player_C.ExecuteUbergraph_BP_Attached_To_Player
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attached_To_Player_C::ExecuteUbergraph_BP_Attached_To_Player(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "ExecuteUbergraph_BP_Attached_To_Player");

	Params::BP_Attached_To_Player_C_ExecuteUbergraph_BP_Attached_To_Player Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Grab_Triggers_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_Attached_To_Player_C::Grab_Triggers_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Grab_Triggers_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Exited
// (BlueprintCallable, BlueprintEvent)

void ABP_Attached_To_Player_C::Exited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Exited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Entered
// (BlueprintCallable, BlueprintEvent)

void ABP_Attached_To_Player_C::Entered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Entered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Bind
// (BlueprintCallable, BlueprintEvent)

void ABP_Attached_To_Player_C::Bind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Bind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Activate
// (BlueprintCallable, BlueprintEvent)

void ABP_Attached_To_Player_C::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attached_To_Player_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "ReceiveEndPlay");

	Params::BP_Attached_To_Player_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.End_Overlap_Container
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attached_To_Player_C::End_Overlap_Container(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "End_Overlap_Container");

	Params::BP_Attached_To_Player_C_End_Overlap_Container Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Begin_Overlap_Container
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attached_To_Player_C::Begin_Overlap_Container(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Begin_Overlap_Container");

	Params::BP_Attached_To_Player_C_Begin_Overlap_Container Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Begin_Overlap_Exit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attached_To_Player_C::Begin_Overlap_Exit(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Begin_Overlap_Exit");

	Params::BP_Attached_To_Player_C_Begin_Overlap_Exit Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.Begin_Overlap_Entrance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attached_To_Player_C::Begin_Overlap_Entrance(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "Begin_Overlap_Entrance");

	Params::BP_Attached_To_Player_C_Begin_Overlap_Entrance Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Attached_To_Player_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Attached_To_Player.BP_Attached_To_Player_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Attached_To_Player_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attached_To_Player_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

