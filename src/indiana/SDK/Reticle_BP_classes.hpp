#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Reticle_BP

#include "Basic.hpp"

#include "Indiana_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Reticle_BP.Reticle_BP_C
// 0x0050 (0x03F0 - 0x03A0)
class UReticle_BP_C final : public UReticleWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShrinkInnards;                                     // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GrowInnards;                                       // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_1;                                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TTDFill;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TTDFillMat;                                        // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RezCooldownMat;                                    // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Reticle_BP(int32 EntryPoint);
	void Construct();
	void SetTTDProgressRatio(float NewTTDRatio);
	void ShrinkTTDRotator();
	void ExpandTTDRotator();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Reticle_BP_C">();
	}
	static class UReticle_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReticle_BP_C>();
	}
};
static_assert(alignof(UReticle_BP_C) == 0x000008, "Wrong alignment on UReticle_BP_C");
static_assert(sizeof(UReticle_BP_C) == 0x0003F0, "Wrong size on UReticle_BP_C");
static_assert(offsetof(UReticle_BP_C, UberGraphFrame) == 0x0003A0, "Member 'UReticle_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, ShrinkInnards) == 0x0003A8, "Member 'UReticle_BP_C::ShrinkInnards' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, GrowInnards) == 0x0003B0, "Member 'UReticle_BP_C::GrowInnards' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, Image_0) == 0x0003B8, "Member 'UReticle_BP_C::Image_0' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, Image_2) == 0x0003C0, "Member 'UReticle_BP_C::Image_2' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, InvalidationBox_0) == 0x0003C8, "Member 'UReticle_BP_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, InvalidationBox_1) == 0x0003D0, "Member 'UReticle_BP_C::InvalidationBox_1' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, TTDFill) == 0x0003D8, "Member 'UReticle_BP_C::TTDFill' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, TTDFillMat) == 0x0003E0, "Member 'UReticle_BP_C::TTDFillMat' has a wrong offset!");
static_assert(offsetof(UReticle_BP_C, RezCooldownMat) == 0x0003E8, "Member 'UReticle_BP_C::RezCooldownMat' has a wrong offset!");

}

