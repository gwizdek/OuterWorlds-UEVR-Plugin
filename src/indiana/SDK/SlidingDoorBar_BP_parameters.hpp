#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingDoorBar_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Indiana_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SlidingDoorBar_BP.SlidingDoorBar_BP_C.ExecuteUbergraph_SlidingDoorBar_BP
// 0x0128 (0x0128 - 0x0000)
struct SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_IsOn;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InstantAnimation;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP) == 0x000004, "Wrong alignment on SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP");
static_assert(sizeof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP) == 0x000128, "Wrong size on SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, EntryPoint) == 0x000000, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, CallFunc_RLerp_ReturnValue) == 0x000004, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000010, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, K2Node_CustomEvent_IsOn) == 0x000098, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::K2Node_CustomEvent_IsOn' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, K2Node_CustomEvent_InstantAnimation) == 0x000099, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::K2Node_CustomEvent_InstantAnimation' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, CallFunc_GetTimelineLength_ReturnValue) == 0x00009C, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000A0, "Member 'SlidingDoorBar_BP_C_ExecuteUbergraph_SlidingDoorBar_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function SlidingDoorBar_BP.SlidingDoorBar_BP_C.OnSetState
// 0x0002 (0x0002 - 0x0000)
struct SlidingDoorBar_BP_C_OnSetState final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoorBar_BP_C_OnSetState) == 0x000001, "Wrong alignment on SlidingDoorBar_BP_C_OnSetState");
static_assert(sizeof(SlidingDoorBar_BP_C_OnSetState) == 0x000002, "Wrong size on SlidingDoorBar_BP_C_OnSetState");
static_assert(offsetof(SlidingDoorBar_BP_C_OnSetState, IsOn) == 0x000000, "Member 'SlidingDoorBar_BP_C_OnSetState::IsOn' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_OnSetState, InstantAnimation) == 0x000001, "Member 'SlidingDoorBar_BP_C_OnSetState::InstantAnimation' has a wrong offset!");

// Function SlidingDoorBar_BP.SlidingDoorBar_BP_C.SetState
// 0x000C (0x000C - 0x0000)
struct SlidingDoorBar_BP_C_SetState final
{
public:
	int32                                         StateIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSound;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InstantAnimation;                                  // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unused;                                            // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetState_Unused;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoorBar_BP_C_SetState) == 0x000004, "Wrong alignment on SlidingDoorBar_BP_C_SetState");
static_assert(sizeof(SlidingDoorBar_BP_C_SetState) == 0x00000C, "Wrong size on SlidingDoorBar_BP_C_SetState");
static_assert(offsetof(SlidingDoorBar_BP_C_SetState, StateIndex) == 0x000000, "Member 'SlidingDoorBar_BP_C_SetState::StateIndex' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_SetState, IgnoreSound) == 0x000004, "Member 'SlidingDoorBar_BP_C_SetState::IgnoreSound' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_SetState, InstantAnimation) == 0x000005, "Member 'SlidingDoorBar_BP_C_SetState::InstantAnimation' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_SetState, Unused) == 0x000006, "Member 'SlidingDoorBar_BP_C_SetState::Unused' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_SetState, CallFunc_Greater_IntInt_ReturnValue) == 0x000007, "Member 'SlidingDoorBar_BP_C_SetState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_SetState, CallFunc_SetState_Unused) == 0x000008, "Member 'SlidingDoorBar_BP_C_SetState::CallFunc_SetState_Unused' has a wrong offset!");

// Function SlidingDoorBar_BP.SlidingDoorBar_BP_C.CanInteract
// 0x0030 (0x0030 - 0x0000)
struct SlidingDoorBar_BP_C_CanInteract final
{
public:
	class AIndianaCharacter*                      Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInteractPayload                       Payload;                                           // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInteract_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentState_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoorBar_BP_C_CanInteract) == 0x000008, "Wrong alignment on SlidingDoorBar_BP_C_CanInteract");
static_assert(sizeof(SlidingDoorBar_BP_C_CanInteract) == 0x000030, "Wrong size on SlidingDoorBar_BP_C_CanInteract");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, Initiator) == 0x000000, "Member 'SlidingDoorBar_BP_C_CanInteract::Initiator' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, Payload) == 0x000008, "Member 'SlidingDoorBar_BP_C_CanInteract::Payload' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, ReturnValue) == 0x000020, "Member 'SlidingDoorBar_BP_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_CanInteract_ReturnValue) == 0x000021, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_CanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_IsPlaying_ReturnValue) == 0x000022, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_GetCurrentState_ReturnValue) == 0x000024, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoorBar_BP_C_CanInteract, CallFunc_BooleanAND_ReturnValue_1) == 0x00002B, "Member 'SlidingDoorBar_BP_C_CanInteract::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

