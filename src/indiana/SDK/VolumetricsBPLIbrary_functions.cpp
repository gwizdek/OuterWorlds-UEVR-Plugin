#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VolumetricsBPLIbrary

#include "Basic.hpp"

#include "VolumetricsBPLIbrary_classes.hpp"
#include "VolumetricsBPLIbrary_parameters.hpp"


namespace SDK
{

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Create and Assign RT
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RT                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextureRenderTargetFormat              Format                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVolumetricsBPLIbrary_C::Create_and_Assign_RT(class UTextureRenderTarget2D*& RT, const struct FIntPoint& Size, ETextureRenderTargetFormat Format, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VolumetricsBPLIbrary_C", "Create and Assign RT");

	Params::VolumetricsBPLIbrary_C_Create_and_Assign_RT Parms{};

	Parms.RT = RT;
	Parms.Size = std::move(Size);
	Parms.Format = Format;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	RT = Parms.RT;
}


// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Create and Assign MID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVolumetricsBPLIbrary_C::Create_and_Assign_MID(class UMaterialInstanceDynamic*& Mid, class UMaterialInterface* Parent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VolumetricsBPLIbrary_C", "Create and Assign MID");

	Params::VolumetricsBPLIbrary_C_Create_and_Assign_MID Parms{};

	Parms.Mid = Mid;
	Parms.Parent = Parent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Mid = Parms.Mid;
}


// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.PseudoVolume Dimensions
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EVolumeTextureDimensions                Dimensions                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        RT_Size                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        XY_Frames                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Volume_Size                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVolumetricsBPLIbrary_C::PseudoVolume_Dimensions(EVolumeTextureDimensions Dimensions, class UObject* __WorldContext, struct FIntPoint* RT_Size, struct FIntPoint* XY_Frames, int32* Volume_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VolumetricsBPLIbrary_C", "PseudoVolume Dimensions");

	Params::VolumetricsBPLIbrary_C_PseudoVolume_Dimensions Parms{};

	Parms.Dimensions = Dimensions;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RT_Size != nullptr)
		*RT_Size = std::move(Parms.RT_Size);

	if (XY_Frames != nullptr)
		*XY_Frames = std::move(Parms.XY_Frames);

	if (Volume_Size != nullptr)
		*Volume_Size = Parms.Volume_Size;
}


// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.RT Size Compare
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Match                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UVolumetricsBPLIbrary_C::RT_Size_Compare(class UTextureRenderTarget2D*& A, class UTextureRenderTarget2D*& B, class UObject* __WorldContext, bool* Match)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VolumetricsBPLIbrary_C", "RT Size Compare");

	Params::VolumetricsBPLIbrary_C_RT_Size_Compare Parms{};

	Parms.A = A;
	Parms.B = B;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	A = Parms.A;
	B = Parms.B;

	if (Match != nullptr)
		*Match = Parms.Match;
}


// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Get Texture Size
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVolumetricsBPLIbrary_C::Get_Texture_Size(class UTexture* Texture, class UObject* __WorldContext, struct FIntPoint* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VolumetricsBPLIbrary_C", "Get Texture Size");

	Params::VolumetricsBPLIbrary_C_Get_Texture_Size Parms{};

	Parms.Texture = Texture;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.GetFirstActorOfClass
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVolumetricsBPLIbrary_C::GetFirstActorOfClass(class UObject* WorldContent, class UClass* Class_0, class UObject* __WorldContext, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VolumetricsBPLIbrary_C", "GetFirstActorOfClass");

	Params::VolumetricsBPLIbrary_C_GetFirstActorOfClass Parms{};

	Parms.WorldContent = WorldContent;
	Parms.Class_0 = Class_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}

}

