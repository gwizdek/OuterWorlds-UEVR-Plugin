#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TeleportDoorBase_BP

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "Engine_structs.hpp"
#include "InteractableActorBase_BP_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TeleportDoorBase_BP.TeleportDoorBase_BP_C
// 0x0078 (0x0388 - 0x0310)
class ATeleportDoorBase_BP_C : public AInteractableActorBase_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TeleportDoorBase_BP_C;              // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class AIndianaPlayerStart>     TargetPlayerStart;                                 // 0x0318(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	struct FLocString                             InteractLocString;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutTime;                                       // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeHoldTime;                                      // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInTime;                                        // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FadeEventTimer;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              On_Sequence_End;                                   // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         FadeAlpha;                                         // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FadeColor;                                         // 0x0374(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TeleportDoorBase_BP(int32 EntryPoint);
	void OnFadeInComplete();
	void OnFadeOutComplete();
	void OnInteract_Event(class AActor* Actor);
	void ReceiveBeginPlay();
	void TeleportToStart();
	void FadeOut(float FadeOutTime_0, TDelegate<void()> FadeOutComplete);
	void FadeIn(float FadeInTime_0, TDelegate<void()> FadeInComplete);
	void OnOpen();
	void ResetState();

	EInteractionType GetInteraction(const struct FInteractionDescription& Description, const struct FInteractPayload& Payload, float InteractDistance) const;
	struct FLocString GetInteractLocString() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TeleportDoorBase_BP_C">();
	}
	static class ATeleportDoorBase_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATeleportDoorBase_BP_C>();
	}
};
static_assert(alignof(ATeleportDoorBase_BP_C) == 0x000008, "Wrong alignment on ATeleportDoorBase_BP_C");
static_assert(sizeof(ATeleportDoorBase_BP_C) == 0x000388, "Wrong size on ATeleportDoorBase_BP_C");
static_assert(offsetof(ATeleportDoorBase_BP_C, UberGraphFrame_TeleportDoorBase_BP_C) == 0x000310, "Member 'ATeleportDoorBase_BP_C::UberGraphFrame_TeleportDoorBase_BP_C' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, TargetPlayerStart) == 0x000318, "Member 'ATeleportDoorBase_BP_C::TargetPlayerStart' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, InteractLocString) == 0x000340, "Member 'ATeleportDoorBase_BP_C::InteractLocString' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, FadeOutTime) == 0x000348, "Member 'ATeleportDoorBase_BP_C::FadeOutTime' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, FadeHoldTime) == 0x00034C, "Member 'ATeleportDoorBase_BP_C::FadeHoldTime' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, FadeInTime) == 0x000350, "Member 'ATeleportDoorBase_BP_C::FadeInTime' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, FadeEventTimer) == 0x000358, "Member 'ATeleportDoorBase_BP_C::FadeEventTimer' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, On_Sequence_End) == 0x000360, "Member 'ATeleportDoorBase_BP_C::On_Sequence_End' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, FadeAlpha) == 0x000370, "Member 'ATeleportDoorBase_BP_C::FadeAlpha' has a wrong offset!");
static_assert(offsetof(ATeleportDoorBase_BP_C, FadeColor) == 0x000374, "Member 'ATeleportDoorBase_BP_C::FadeColor' has a wrong offset!");

}

