#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputGuide_BP

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function InputGuide_BP.InputGuide_BP_C.ExecuteUbergraph_InputGuide_BP
// 0x0088 (0x0088 - 0x0000)
struct InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentProgressRatio;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP) == 0x000008, "Wrong alignment on InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP");
static_assert(sizeof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP) == 0x000088, "Wrong size on InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, EntryPoint) == 0x000000, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, Temp_byte_Variable) == 0x000004, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, Temp_byte_Variable_1) == 0x000005, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_R) == 0x000008, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_G) == 0x00000C, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_B) == 0x000010, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_A) == 0x000014, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_R_1) == 0x000018, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_G_1) == 0x00001C, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_B_1) == 0x000020, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_BreakColor_A_1) == 0x000024, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_MakeColor_ReturnValue) == 0x000028, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_MakeColor_ReturnValue_1) == 0x000038, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, K2Node_Event_bVisible) == 0x000048, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000049, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, K2Node_Event_CurrentProgressRatio) == 0x00004C, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::K2Node_Event_CurrentProgressRatio' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_PlayAnimation_ReturnValue_1) == 0x000068, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, Temp_bool_Variable) == 0x000070, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, K2Node_Select_Default) == 0x000071, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_PlayAnimation_ReturnValue_2) == 0x000078, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'InputGuide_BP_C_ExecuteUbergraph_InputGuide_BP::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function InputGuide_BP.InputGuide_BP_C.OnInteractionProgressChange
// 0x0004 (0x0004 - 0x0000)
struct InputGuide_BP_C_OnInteractionProgressChange final
{
public:
	float                                         CurrentProgressRatio;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputGuide_BP_C_OnInteractionProgressChange) == 0x000004, "Wrong alignment on InputGuide_BP_C_OnInteractionProgressChange");
static_assert(sizeof(InputGuide_BP_C_OnInteractionProgressChange) == 0x000004, "Wrong size on InputGuide_BP_C_OnInteractionProgressChange");
static_assert(offsetof(InputGuide_BP_C_OnInteractionProgressChange, CurrentProgressRatio) == 0x000000, "Member 'InputGuide_BP_C_OnInteractionProgressChange::CurrentProgressRatio' has a wrong offset!");

// Function InputGuide_BP.InputGuide_BP_C.InteractChanged
// 0x0001 (0x0001 - 0x0000)
struct InputGuide_BP_C_InteractChanged final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputGuide_BP_C_InteractChanged) == 0x000001, "Wrong alignment on InputGuide_BP_C_InteractChanged");
static_assert(sizeof(InputGuide_BP_C_InteractChanged) == 0x000001, "Wrong size on InputGuide_BP_C_InteractChanged");
static_assert(offsetof(InputGuide_BP_C_InteractChanged, bVisible) == 0x000000, "Member 'InputGuide_BP_C_InteractChanged::bVisible' has a wrong offset!");

}

