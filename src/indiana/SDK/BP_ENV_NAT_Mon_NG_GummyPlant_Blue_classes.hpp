#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENV_NAT_Mon_NG_GummyPlant_Blue

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ENV_NAT_Mon_NG_GummyPlant_Blue.BP_ENV_NAT_Mon_NG_GummyPlant_Blue_C
// 0x0098 (0x0350 - 0x02B8)
class ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C final : public AActor
{
public:
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_01;                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_019;                    // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_018;                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_017;                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_016;                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_015;                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_014;                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_013;                    // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_012;                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_011;                    // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_010;                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_09;                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_08;                     // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_07;                     // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_06;                     // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_05;                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_04;                     // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_03;                     // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ENV_NAT_Mon_NG_Gummy_Plant_02;                     // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ENV_NAT_Mon_NG_GummyPlant_Blue_C">();
	}
	static class ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C>();
	}
};
static_assert(alignof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C) == 0x000008, "Wrong alignment on ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C");
static_assert(sizeof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C) == 0x000350, "Wrong size on ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_01) == 0x0002B8, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_01' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_019) == 0x0002C0, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_019' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_018) == 0x0002C8, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_018' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_017) == 0x0002D0, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_017' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_016) == 0x0002D8, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_016' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_015) == 0x0002E0, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_015' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_014) == 0x0002E8, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_014' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_013) == 0x0002F0, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_013' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_012) == 0x0002F8, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_012' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_011) == 0x000300, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_011' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_010) == 0x000308, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_010' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_09) == 0x000310, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_09' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_08) == 0x000318, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_08' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_07) == 0x000320, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_07' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_06) == 0x000328, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_06' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_05) == 0x000330, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_05' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_04) == 0x000338, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_04' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_03) == 0x000340, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_03' has a wrong offset!");
static_assert(offsetof(ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C, ENV_NAT_Mon_NG_Gummy_Plant_02) == 0x000348, "Member 'ABP_ENV_NAT_Mon_NG_GummyPlant_Blue_C::ENV_NAT_Mon_NG_Gummy_Plant_02' has a wrong offset!");

}

