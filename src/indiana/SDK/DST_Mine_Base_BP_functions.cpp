#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DST_Mine_Base_BP

#include "Basic.hpp"

#include "DST_Mine_Base_BP_classes.hpp"
#include "DST_Mine_Base_BP_parameters.hpp"


namespace SDK
{

// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.ExecuteUbergraph_DST_Mine_Base_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADST_Mine_Base_BP_C::ExecuteUbergraph_DST_Mine_Base_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "ExecuteUbergraph_DST_Mine_Base_BP");

	Params::DST_Mine_Base_BP_C_ExecuteUbergraph_DST_Mine_Base_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADST_Mine_Base_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.SpawnExplosion
// (BlueprintCallable, BlueprintEvent)

void ADST_Mine_Base_BP_C::SpawnExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "SpawnExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.HideLight
// (BlueprintCallable, BlueprintEvent)

void ADST_Mine_Base_BP_C::HideLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "HideLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.ReceiveTriggerUntripped
// (Event, Protected, BlueprintEvent)

void ADST_Mine_Base_BP_C::ReceiveTriggerUntripped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "ReceiveTriggerUntripped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.ReceiveTriggerTripped
// (Event, Protected, BlueprintEvent)

void ADST_Mine_Base_BP_C::ReceiveTriggerTripped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "ReceiveTriggerTripped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.OnDestructibleDestroyed_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADST_Mine_Base_BP_C::OnDestructibleDestroyed_Event_0(class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "OnDestructibleDestroyed_Event_0");

	Params::DST_Mine_Base_BP_C_OnDestructibleDestroyed_Event_0 Parms{};

	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ADST_Mine_Base_BP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ADST_Mine_Base_BP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.SetLightParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FColor                           Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightIntensity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpecularScale_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Temperature_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttenuationRadius_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADST_Mine_Base_BP_C::SetLightParameters(const struct FColor& Color, float LightIntensity, float SpecularScale_0, float Temperature_0, float AttenuationRadius_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "SetLightParameters");

	Params::DST_Mine_Base_BP_C_SetLightParameters Parms{};

	Parms.Color = std::move(Color);
	Parms.LightIntensity = LightIntensity;
	Parms.SpecularScale_0 = SpecularScale_0;
	Parms.Temperature_0 = Temperature_0;
	Parms.AttenuationRadius_0 = AttenuationRadius_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DST_Mine_Base_BP.DST_Mine_Base_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADST_Mine_Base_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DST_Mine_Base_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

