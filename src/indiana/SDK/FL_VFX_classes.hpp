#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_VFX

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "EN_Material_Parameters_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FL_VFX.FL_VFX_C
// 0x0000 (0x0030 - 0x0030)
class UFL_VFX_C final : public UBlueprintFunctionLibrary
{
public:
	static void Death_Materials(class USkeletalMeshComponent* Skeletal_Mesh, const struct FLinearColor& RevealEmissiveColor, float FadeOut, float LeadingEdgeBlend, float RevealAmount, float EmissiveLevel, float LeadingEdgeAmount, float RevealEdgeTightness, float EmissiveBaseValue, class UTexture* RevealRMEA, class UTexture* RevealNormal, class UTexture* RevealBaseColor, class AActor* Actor, class UObject* __WorldContext, bool* Start_Transition, TArray<class UMaterialInstanceDynamic*>* Character_MIDs, class UMaterialInstanceDynamic** Teeth_MID);
	static void Emitter_Toggle(TArray<class FName>& Emitters, TArray<class UParticleSystemComponent*>& Particle_Systems, bool Toggle, class UObject* __WorldContext);
	static void PS_Parameters(TArray<class UParticleSystemComponent*>& PS_Array, bool Set_Color, class FName Color_Param, const struct FLinearColor& Color, bool Set_Float, class FName Float_Param, float Float, bool Set_Vector, class FName Vector_Param, const struct FVector& Vector, class UObject* __WorldContext);
	static void Tagged_Children(class USceneComponent* Parent_Mesh, class FName Child_Component_Tag, class FName MaterialSlotName, class UObject* __WorldContext, class UMaterialInstanceDynamic** Mid, TArray<class UMaterialInstanceDynamic*>* MIDs);
	static void MID_Adjustments(TArray<class UMaterialInstanceDynamic*>& MIDs, TArray<int32>& Mat_MID_Index, TArray<class FName>& Mat_Slot_Params, TArray<struct FVector>& Mat_Slot_Floats, TArray<struct FLinearColor>& Mat_Colors_A, TArray<struct FLinearColor>& Mat_Colors_B, TArray<EN_Material_Parameters>& Mat_Param_Change, float Lerp_Alpha, TArray<float>& Edited_Scalars, TArray<struct FLinearColor>& Edited_Colors, bool Reset_Values, class UObject* __WorldContext);
	static void MID_Creation_Skeletal(class USkeletalMeshComponent* Skeletal_Mesh, TArray<class FName>& Material_Slot_Name, bool Create_Child_MID, int32 Child_Indices_Start, TArray<class FName>& Child_Components_Tags, class UObject* __WorldContext, TArray<class UMaterialInstanceDynamic*>* MIDs);
	static void MID_Creation_Static(class AStaticMeshActor* Static_Mesh, TArray<class FName>& Material_Slot_Name, bool Create_Child_MID, int32 Child_Indices_Start, TArray<class FName>& Child_Components_Tags, class UObject* __WorldContext, TArray<class UMaterialInstanceDynamic*>* MIDs);
	static void Decal_Spawn(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& Location, const struct FVector& Normal, float Decal_Size_Min, float Decal_Size_Max, float Decal_Life_Min, float Decal_Life_Max, float Decal_Fade_Delay_Min, float Decal_Fade_Delay_Max, class UObject* __WorldContext);
	static void Unlock_Doors(class UObject* __WorldContext);
	static void Hit_Flash(const struct FEventEffectParams& Params_0, class UObject* __WorldContext, struct FLinearColor* Scene_Color_Tint, float* Delay_Duration);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FL_VFX_C">();
	}
	static class UFL_VFX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFL_VFX_C>();
	}
};
static_assert(alignof(UFL_VFX_C) == 0x000008, "Wrong alignment on UFL_VFX_C");
static_assert(sizeof(UFL_VFX_C) == 0x000030, "Wrong size on UFL_VFX_C");

}

