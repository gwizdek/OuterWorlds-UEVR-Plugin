#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_VFX

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Indiana_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "EN_Material_Parameters_structs.hpp"


namespace SDK::Params
{

// Function FL_VFX.FL_VFX_C.Death_Materials
// 0x03B8 (0x03B8 - 0x0000)
struct FL_VFX_C_Death_Materials final
{
public:
	class USkeletalMeshComponent*                 Skeletal_Mesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RevealEmissiveColor;                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOut;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeadingEdgeBlend;                                  // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevealAmount;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveLevel;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeadingEdgeAmount;                                 // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevealEdgeTightness;                               // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveBaseValue;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               RevealRMEA;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               RevealNormal;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               RevealBaseColor;                                   // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Start_Transition;                                  // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       Character_MIDs;                                    // 0x0068(0x0010)(Parm, OutParm)
	class UMaterialInstanceDynamic*               Teeth_MID;                                         // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Teeth;                                         // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh5;                                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Base_Materials5;                                   // 0x0090(0x0010)(Edit, BlueprintVisible)
	class UMeshComponent*                         Mesh4;                                             // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Base_Materials4;                                   // 0x00A8(0x0010)(Edit, BlueprintVisible)
	class UMeshComponent*                         Mesh3;                                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh2;                                             // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh;                                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Base_Materials3;                                   // 0x00D0(0x0010)(Edit, BlueprintVisible)
	TArray<class UMaterialInterface*>             Base_Materials2;                                   // 0x00E0(0x0010)(Edit, BlueprintVisible)
	TArray<class UMaterialInterface*>             Base_Materials;                                    // 0x00F0(0x0010)(Edit, BlueprintVisible)
	float                                         EmissiveBaseValue_FL;                              // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOut_FL;                                        // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               RevealBaseColor_FL;                                // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               RevealNormal_FL;                                   // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevealEdgeTightness_FL;                            // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeadingEdgeAmount_FL;                              // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveLevel_FL;                                  // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevealAmount_FL;                                   // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               RevealRMEA_FL;                                     // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeadingEdgeBlend_FL;                               // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RevealEmissiveColor_FL;                            // 0x0134(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionStart;                                   // 0x0144(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Character_Skeletal_Mesh;                           // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0150(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetAllAppearanceRelatedMeshes_Meshes;     // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue_1;    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_1;           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0258(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_2;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_3;                         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_4;                         // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_5;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_16;                        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_VFX_C_Death_Materials) == 0x000008, "Wrong alignment on FL_VFX_C_Death_Materials");
static_assert(sizeof(FL_VFX_C_Death_Materials) == 0x0003B8, "Wrong size on FL_VFX_C_Death_Materials");
static_assert(offsetof(FL_VFX_C_Death_Materials, Skeletal_Mesh) == 0x000000, "Member 'FL_VFX_C_Death_Materials::Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealEmissiveColor) == 0x000008, "Member 'FL_VFX_C_Death_Materials::RevealEmissiveColor' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, FadeOut) == 0x000018, "Member 'FL_VFX_C_Death_Materials::FadeOut' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, LeadingEdgeBlend) == 0x00001C, "Member 'FL_VFX_C_Death_Materials::LeadingEdgeBlend' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealAmount) == 0x000020, "Member 'FL_VFX_C_Death_Materials::RevealAmount' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, EmissiveLevel) == 0x000024, "Member 'FL_VFX_C_Death_Materials::EmissiveLevel' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, LeadingEdgeAmount) == 0x000028, "Member 'FL_VFX_C_Death_Materials::LeadingEdgeAmount' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealEdgeTightness) == 0x00002C, "Member 'FL_VFX_C_Death_Materials::RevealEdgeTightness' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, EmissiveBaseValue) == 0x000030, "Member 'FL_VFX_C_Death_Materials::EmissiveBaseValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealRMEA) == 0x000038, "Member 'FL_VFX_C_Death_Materials::RevealRMEA' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealNormal) == 0x000040, "Member 'FL_VFX_C_Death_Materials::RevealNormal' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealBaseColor) == 0x000048, "Member 'FL_VFX_C_Death_Materials::RevealBaseColor' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Actor) == 0x000050, "Member 'FL_VFX_C_Death_Materials::Actor' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, __WorldContext) == 0x000058, "Member 'FL_VFX_C_Death_Materials::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Start_Transition) == 0x000060, "Member 'FL_VFX_C_Death_Materials::Start_Transition' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Character_MIDs) == 0x000068, "Member 'FL_VFX_C_Death_Materials::Character_MIDs' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Teeth_MID) == 0x000078, "Member 'FL_VFX_C_Death_Materials::Teeth_MID' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, MID_Teeth) == 0x000080, "Member 'FL_VFX_C_Death_Materials::MID_Teeth' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Mesh5) == 0x000088, "Member 'FL_VFX_C_Death_Materials::Mesh5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Base_Materials5) == 0x000090, "Member 'FL_VFX_C_Death_Materials::Base_Materials5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Mesh4) == 0x0000A0, "Member 'FL_VFX_C_Death_Materials::Mesh4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Base_Materials4) == 0x0000A8, "Member 'FL_VFX_C_Death_Materials::Base_Materials4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Mesh3) == 0x0000B8, "Member 'FL_VFX_C_Death_Materials::Mesh3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Mesh2) == 0x0000C0, "Member 'FL_VFX_C_Death_Materials::Mesh2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Mesh) == 0x0000C8, "Member 'FL_VFX_C_Death_Materials::Mesh' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Base_Materials3) == 0x0000D0, "Member 'FL_VFX_C_Death_Materials::Base_Materials3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Base_Materials2) == 0x0000E0, "Member 'FL_VFX_C_Death_Materials::Base_Materials2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Base_Materials) == 0x0000F0, "Member 'FL_VFX_C_Death_Materials::Base_Materials' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, EmissiveBaseValue_FL) == 0x000100, "Member 'FL_VFX_C_Death_Materials::EmissiveBaseValue_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, FadeOut_FL) == 0x000104, "Member 'FL_VFX_C_Death_Materials::FadeOut_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealBaseColor_FL) == 0x000108, "Member 'FL_VFX_C_Death_Materials::RevealBaseColor_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealNormal_FL) == 0x000110, "Member 'FL_VFX_C_Death_Materials::RevealNormal_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealEdgeTightness_FL) == 0x000118, "Member 'FL_VFX_C_Death_Materials::RevealEdgeTightness_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, LeadingEdgeAmount_FL) == 0x00011C, "Member 'FL_VFX_C_Death_Materials::LeadingEdgeAmount_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, EmissiveLevel_FL) == 0x000120, "Member 'FL_VFX_C_Death_Materials::EmissiveLevel_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealAmount_FL) == 0x000124, "Member 'FL_VFX_C_Death_Materials::RevealAmount_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealRMEA_FL) == 0x000128, "Member 'FL_VFX_C_Death_Materials::RevealRMEA_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, LeadingEdgeBlend_FL) == 0x000130, "Member 'FL_VFX_C_Death_Materials::LeadingEdgeBlend_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, RevealEmissiveColor_FL) == 0x000134, "Member 'FL_VFX_C_Death_Materials::RevealEmissiveColor_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, TransitionStart) == 0x000144, "Member 'FL_VFX_C_Death_Materials::TransitionStart' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Character_Skeletal_Mesh) == 0x000148, "Member 'FL_VFX_C_Death_Materials::Character_Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, MIDs) == 0x000150, "Member 'FL_VFX_C_Death_Materials::MIDs' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable) == 0x000160, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_GetAllAppearanceRelatedMeshes_Meshes) == 0x000168, "Member 'FL_VFX_C_Death_Materials::CallFunc_GetAllAppearanceRelatedMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue) == 0x000178, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_1) == 0x000180, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_2) == 0x000184, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_1) == 0x000188, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_2) == 0x00018C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_3) == 0x000190, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_4) == 0x000194, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_3) == 0x000198, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_4) == 0x00019C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_5) == 0x0001A0, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_6) == 0x0001A4, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001A8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001AC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_7) == 0x0001B0, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_8) == 0x0001B4, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001B8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_8) == 0x0001BC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_9) == 0x0001C0, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Variable_10) == 0x0001C4, "Member 'FL_VFX_C_Death_Materials::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_9) == 0x0001C8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_10) == 0x0001CC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Array_Index_Variable) == 0x0001D0, "Member 'FL_VFX_C_Death_Materials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Loop_Counter_Variable) == 0x0001D4, "Member 'FL_VFX_C_Death_Materials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Loop_Counter_Variable_1) == 0x0001D8, "Member 'FL_VFX_C_Death_Materials::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_11) == 0x0001DC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_12) == 0x0001E0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Array_Index_Variable_1) == 0x0001E4, "Member 'FL_VFX_C_Death_Materials::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Array_Index_Variable_2) == 0x0001E8, "Member 'FL_VFX_C_Death_Materials::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Loop_Counter_Variable_2) == 0x0001EC, "Member 'FL_VFX_C_Death_Materials::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_13) == 0x0001F0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Array_Index_Variable_3) == 0x0001F4, "Member 'FL_VFX_C_Death_Materials::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Loop_Counter_Variable_3) == 0x0001F8, "Member 'FL_VFX_C_Death_Materials::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_14) == 0x0001FC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Loop_Counter_Variable_4) == 0x000200, "Member 'FL_VFX_C_Death_Materials::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_15) == 0x000208, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Array_Index_Variable_4) == 0x00020C, "Member 'FL_VFX_C_Death_Materials::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Loop_Counter_Variable_5) == 0x000210, "Member 'FL_VFX_C_Death_Materials::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item) == 0x000218, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_IsMaterialSlotNameValid_ReturnValue) == 0x000220, "Member 'FL_VFX_C_Death_Materials::CallFunc_IsMaterialSlotNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_GetMaterialIndex_ReturnValue) == 0x000224, "Member 'FL_VFX_C_Death_Materials::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_GetMaterial_ReturnValue) == 0x000228, "Member 'FL_VFX_C_Death_Materials::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_IsMaterialSlotNameValid_ReturnValue_1) == 0x000230, "Member 'FL_VFX_C_Death_Materials::CallFunc_IsMaterialSlotNameValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000238, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_GetMaterialIndex_ReturnValue_1) == 0x000240, "Member 'FL_VFX_C_Death_Materials::CallFunc_GetMaterialIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_GetMaterial_ReturnValue_1) == 0x000248, "Member 'FL_VFX_C_Death_Materials::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000250, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_GetMaterials_ReturnValue) == 0x000258, "Member 'FL_VFX_C_Death_Materials::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Add_IntInt_ReturnValue_16) == 0x000268, "Member 'FL_VFX_C_Death_Materials::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, K2Node_SwitchInteger_CmpSuccess) == 0x00026C, "Member 'FL_VFX_C_Death_Materials::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_1) == 0x000274, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_1) == 0x000278, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000280, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_2) == 0x000288, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_2) == 0x00028C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_3) == 0x000298, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x0002A0, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x0002A8, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_3) == 0x0002B0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_4) == 0x0002B4, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002B8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_4) == 0x0002B9, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, Temp_int_Array_Index_Variable_5) == 0x0002BC, "Member 'FL_VFX_C_Death_Materials::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_4) == 0x0002C0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_5) == 0x0002C8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x0002D0, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x0002D8, "Member 'FL_VFX_C_Death_Materials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_5) == 0x0002E0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_5) == 0x0002E4, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_AddUnique_ReturnValue) == 0x0002E8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0002EC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0002F0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_AddUnique_ReturnValue_3) == 0x0002F4, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_AddUnique_ReturnValue_4) == 0x0002F8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_6) == 0x000300, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_6) == 0x000308, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_6) == 0x00030C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_7) == 0x000310, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_7) == 0x000318, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_8) == 0x000320, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_7) == 0x000328, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_8) == 0x00032C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_9) == 0x000330, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_8) == 0x000338, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_9) == 0x00033C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_10) == 0x000340, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_9) == 0x000348, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_10) == 0x00034C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_11) == 0x000350, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_10) == 0x000358, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_11) == 0x00035C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_12) == 0x000360, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_11) == 0x000368, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_12) == 0x00036C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_13) == 0x000370, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_12) == 0x000378, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_13) == 0x00037C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_14) == 0x000380, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_13) == 0x000388, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_14) == 0x00038C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_15) == 0x000390, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_14) == 0x000398, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_15) == 0x00039C, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Get_Item_16) == 0x0003A0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_15) == 0x0003A8, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Array_Length_ReturnValue_16) == 0x0003AC, "Member 'FL_VFX_C_Death_Materials::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Death_Materials, CallFunc_Less_IntInt_ReturnValue_16) == 0x0003B0, "Member 'FL_VFX_C_Death_Materials::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.Emitter_Toggle
// 0x0070 (0x0070 - 0x0000)
struct FL_VFX_C_Emitter_Toggle final
{
public:
	TArray<class FName>                           Emitters;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UParticleSystemComponent*>       Particle_Systems;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Toggle;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_VFX_C_Emitter_Toggle) == 0x000008, "Wrong alignment on FL_VFX_C_Emitter_Toggle");
static_assert(sizeof(FL_VFX_C_Emitter_Toggle) == 0x000070, "Wrong size on FL_VFX_C_Emitter_Toggle");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Emitters) == 0x000000, "Member 'FL_VFX_C_Emitter_Toggle::Emitters' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Particle_Systems) == 0x000010, "Member 'FL_VFX_C_Emitter_Toggle::Particle_Systems' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Toggle) == 0x000020, "Member 'FL_VFX_C_Emitter_Toggle::Toggle' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, __WorldContext) == 0x000028, "Member 'FL_VFX_C_Emitter_Toggle::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'FL_VFX_C_Emitter_Toggle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Temp_int_Array_Index_Variable) == 0x000044, "Member 'FL_VFX_C_Emitter_Toggle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'FL_VFX_C_Emitter_Toggle::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Array_Get_Item) == 0x00004C, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'FL_VFX_C_Emitter_Toggle::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Emitter_Toggle, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'FL_VFX_C_Emitter_Toggle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.PS_Parameters
// 0x0080 (0x0080 - 0x0000)
struct FL_VFX_C_PS_Parameters final
{
public:
	TArray<class UParticleSystemComponent*>       PS_Array;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Set_Color;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Color_Param;                                       // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Float;                                         // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Float_Param;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Float;                                             // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Vector;                                        // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Vector_Param;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x0048(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_VFX_C_PS_Parameters) == 0x000008, "Wrong alignment on FL_VFX_C_PS_Parameters");
static_assert(sizeof(FL_VFX_C_PS_Parameters) == 0x000080, "Wrong size on FL_VFX_C_PS_Parameters");
static_assert(offsetof(FL_VFX_C_PS_Parameters, PS_Array) == 0x000000, "Member 'FL_VFX_C_PS_Parameters::PS_Array' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Set_Color) == 0x000010, "Member 'FL_VFX_C_PS_Parameters::Set_Color' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Color_Param) == 0x000014, "Member 'FL_VFX_C_PS_Parameters::Color_Param' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Color) == 0x00001C, "Member 'FL_VFX_C_PS_Parameters::Color' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Set_Float) == 0x00002C, "Member 'FL_VFX_C_PS_Parameters::Set_Float' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Float_Param) == 0x000030, "Member 'FL_VFX_C_PS_Parameters::Float_Param' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Float) == 0x000038, "Member 'FL_VFX_C_PS_Parameters::Float' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Set_Vector) == 0x00003C, "Member 'FL_VFX_C_PS_Parameters::Set_Vector' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Vector_Param) == 0x000040, "Member 'FL_VFX_C_PS_Parameters::Vector_Param' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Vector) == 0x000048, "Member 'FL_VFX_C_PS_Parameters::Vector' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, __WorldContext) == 0x000058, "Member 'FL_VFX_C_PS_Parameters::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'FL_VFX_C_PS_Parameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Temp_int_Array_Index_Variable) == 0x000064, "Member 'FL_VFX_C_PS_Parameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'FL_VFX_C_PS_Parameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, CallFunc_Array_Get_Item) == 0x000070, "Member 'FL_VFX_C_PS_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'FL_VFX_C_PS_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'FL_VFX_C_PS_Parameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_PS_Parameters, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'FL_VFX_C_PS_Parameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.Tagged_Children
// 0x00C0 (0x00C0 - 0x0000)
struct FL_VFX_C_Tagged_Children final
{
public:
	class USceneComponent*                        Parent_Mesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Child_Component_Tag;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MaterialSlotName;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0028(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       MIDs_FL;                                           // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class USceneComponent*>                CallFunc_FindChildComponentsByTag_ChildComponents; // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_FindChildComponentsByTag_ReturnValue;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_VFX_C_Tagged_Children) == 0x000008, "Wrong alignment on FL_VFX_C_Tagged_Children");
static_assert(sizeof(FL_VFX_C_Tagged_Children) == 0x0000C0, "Wrong size on FL_VFX_C_Tagged_Children");
static_assert(offsetof(FL_VFX_C_Tagged_Children, Parent_Mesh) == 0x000000, "Member 'FL_VFX_C_Tagged_Children::Parent_Mesh' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, Child_Component_Tag) == 0x000008, "Member 'FL_VFX_C_Tagged_Children::Child_Component_Tag' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, MaterialSlotName) == 0x000010, "Member 'FL_VFX_C_Tagged_Children::MaterialSlotName' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, __WorldContext) == 0x000018, "Member 'FL_VFX_C_Tagged_Children::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, Mid) == 0x000020, "Member 'FL_VFX_C_Tagged_Children::Mid' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, MIDs) == 0x000028, "Member 'FL_VFX_C_Tagged_Children::MIDs' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, MIDs_FL) == 0x000038, "Member 'FL_VFX_C_Tagged_Children::MIDs_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_FindChildComponentsByTag_ChildComponents) == 0x000048, "Member 'FL_VFX_C_Tagged_Children::CallFunc_FindChildComponentsByTag_ChildComponents' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_FindChildComponentsByTag_ReturnValue) == 0x000058, "Member 'FL_VFX_C_Tagged_Children::CallFunc_FindChildComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'FL_VFX_C_Tagged_Children::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'FL_VFX_C_Tagged_Children::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_Array_Get_Item) == 0x000068, "Member 'FL_VFX_C_Tagged_Children::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, K2Node_DynamicCast_AsMesh_Component) == 0x000070, "Member 'FL_VFX_C_Tagged_Children::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'FL_VFX_C_Tagged_Children::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, K2Node_DynamicCast_AsPrimitive_Component) == 0x000080, "Member 'FL_VFX_C_Tagged_Children::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'FL_VFX_C_Tagged_Children::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_GetMaterialIndex_ReturnValue) == 0x00008C, "Member 'FL_VFX_C_Tagged_Children::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'FL_VFX_C_Tagged_Children::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_GetMaterial_ReturnValue) == 0x000098, "Member 'FL_VFX_C_Tagged_Children::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A0, "Member 'FL_VFX_C_Tagged_Children::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'FL_VFX_C_Tagged_Children::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'FL_VFX_C_Tagged_Children::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B0, "Member 'FL_VFX_C_Tagged_Children::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Tagged_Children, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'FL_VFX_C_Tagged_Children::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.MID_Adjustments
// 0x01A0 (0x01A0 - 0x0000)
struct FL_VFX_C_MID_Adjustments final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Mat_MID_Index;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           Mat_Slot_Params;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FVector>                        Mat_Slot_Floats;                                   // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FLinearColor>                   Mat_Colors_A;                                      // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FLinearColor>                   Mat_Colors_B;                                      // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<EN_Material_Parameters>                Mat_Param_Change;                                  // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Lerp_Alpha;                                        // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Edited_Scalars;                                    // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FLinearColor>                   Edited_Colors;                                     // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Reset_Values;                                      // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x00C4(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_Material_Parameters                        CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_4;                         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x011C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_6;                         // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_Material_Parameters                        CallFunc_Array_Get_Item_8;                         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Array_Get_Item_9;                         // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_10;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_11;                        // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_VFX_C_MID_Adjustments) == 0x000008, "Wrong alignment on FL_VFX_C_MID_Adjustments");
static_assert(sizeof(FL_VFX_C_MID_Adjustments) == 0x0001A0, "Wrong size on FL_VFX_C_MID_Adjustments");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, MIDs) == 0x000000, "Member 'FL_VFX_C_MID_Adjustments::MIDs' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Mat_MID_Index) == 0x000010, "Member 'FL_VFX_C_MID_Adjustments::Mat_MID_Index' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Mat_Slot_Params) == 0x000020, "Member 'FL_VFX_C_MID_Adjustments::Mat_Slot_Params' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Mat_Slot_Floats) == 0x000030, "Member 'FL_VFX_C_MID_Adjustments::Mat_Slot_Floats' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Mat_Colors_A) == 0x000040, "Member 'FL_VFX_C_MID_Adjustments::Mat_Colors_A' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Mat_Colors_B) == 0x000050, "Member 'FL_VFX_C_MID_Adjustments::Mat_Colors_B' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Mat_Param_Change) == 0x000060, "Member 'FL_VFX_C_MID_Adjustments::Mat_Param_Change' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Lerp_Alpha) == 0x000070, "Member 'FL_VFX_C_MID_Adjustments::Lerp_Alpha' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Edited_Scalars) == 0x000078, "Member 'FL_VFX_C_MID_Adjustments::Edited_Scalars' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Edited_Colors) == 0x000088, "Member 'FL_VFX_C_MID_Adjustments::Edited_Colors' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Reset_Values) == 0x000098, "Member 'FL_VFX_C_MID_Adjustments::Reset_Values' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, __WorldContext) == 0x0000A0, "Member 'FL_VFX_C_MID_Adjustments::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'FL_VFX_C_MID_Adjustments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'FL_VFX_C_MID_Adjustments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_struct_Variable) == 0x0000C4, "Member 'FL_VFX_C_MID_Adjustments::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_3) == 0x0000E4, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, K2Node_SwitchEnum_CmpSuccess) == 0x0000EC, "Member 'FL_VFX_C_MID_Adjustments::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_4) == 0x0000F0, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_BreakVector_X) == 0x0000FC, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_BreakVector_Y) == 0x000100, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_BreakVector_Z) == 0x000104, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_LinearColorLerp_ReturnValue) == 0x000108, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Lerp_ReturnValue) == 0x000118, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_float_Variable) == 0x00011C, "Member 'FL_VFX_C_MID_Adjustments::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_bool_Has_Been_Initd_Variable) == 0x000120, "Member 'FL_VFX_C_MID_Adjustments::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_bool_IsClosed_Variable) == 0x000121, "Member 'FL_VFX_C_MID_Adjustments::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_int_Loop_Counter_Variable_1) == 0x000124, "Member 'FL_VFX_C_MID_Adjustments::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Less_IntInt_ReturnValue_1) == 0x000128, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_int_Array_Index_Variable_1) == 0x000130, "Member 'FL_VFX_C_MID_Adjustments::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_5) == 0x000134, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_6) == 0x000138, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_7) == 0x000148, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_8) == 0x000150, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_9) == 0x000154, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, K2Node_SwitchEnum_CmpSuccess_1) == 0x000164, "Member 'FL_VFX_C_MID_Adjustments::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000168, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_10) == 0x000178, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Array_Get_Item_11) == 0x000180, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_BreakVector_X_1) == 0x00018C, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_BreakVector_Y_1) == 0x000190, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_BreakVector_Z_1) == 0x000194, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, CallFunc_Lerp_ReturnValue_1) == 0x000198, "Member 'FL_VFX_C_MID_Adjustments::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_bool_Has_Been_Initd_Variable_1) == 0x00019C, "Member 'FL_VFX_C_MID_Adjustments::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Adjustments, Temp_bool_IsClosed_Variable_1) == 0x00019D, "Member 'FL_VFX_C_MID_Adjustments::Temp_bool_IsClosed_Variable_1' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.MID_Creation_Skeletal
// 0x0130 (0x0130 - 0x0000)
struct FL_VFX_C_MID_Creation_Skeletal final
{
public:
	class USkeletalMeshComponent*                 Skeletal_Mesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Material_Slot_Name;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Create_Child_MID;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Child_Indices_Start;                               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Child_Components_Tags;                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0038(0x0010)(Parm, OutParm)
	int32                                         Child_Tags_FL;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MIDs_FL;                                           // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_FindChildComponentsByTag_ChildComponents; // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_FindChildComponentsByTag_ReturnValue;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_3;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_1;           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_VFX_C_MID_Creation_Skeletal) == 0x000008, "Wrong alignment on FL_VFX_C_MID_Creation_Skeletal");
static_assert(sizeof(FL_VFX_C_MID_Creation_Skeletal) == 0x000130, "Wrong size on FL_VFX_C_MID_Creation_Skeletal");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Skeletal_Mesh) == 0x000000, "Member 'FL_VFX_C_MID_Creation_Skeletal::Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Material_Slot_Name) == 0x000008, "Member 'FL_VFX_C_MID_Creation_Skeletal::Material_Slot_Name' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Create_Child_MID) == 0x000018, "Member 'FL_VFX_C_MID_Creation_Skeletal::Create_Child_MID' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Child_Indices_Start) == 0x00001C, "Member 'FL_VFX_C_MID_Creation_Skeletal::Child_Indices_Start' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Child_Components_Tags) == 0x000020, "Member 'FL_VFX_C_MID_Creation_Skeletal::Child_Components_Tags' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, __WorldContext) == 0x000030, "Member 'FL_VFX_C_MID_Creation_Skeletal::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, MIDs) == 0x000038, "Member 'FL_VFX_C_MID_Creation_Skeletal::MIDs' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Child_Tags_FL) == 0x000048, "Member 'FL_VFX_C_MID_Creation_Skeletal::Child_Tags_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, MIDs_FL) == 0x000050, "Member 'FL_VFX_C_MID_Creation_Skeletal::MIDs_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_int_Array_Index_Variable) == 0x000060, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_bool_True_if_break_was_hit_Variable) == 0x000080, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_Get_Item) == 0x000088, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_IsMaterialSlotNameValid_ReturnValue) == 0x000091, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_IsMaterialSlotNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_GetMaterialIndex_ReturnValue) == 0x000094, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_GetMaterial_ReturnValue) == 0x000098, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A0, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_int_Variable) == 0x0000AC, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_FindChildComponentsByTag_ChildComponents) == 0x0000C8, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_FindChildComponentsByTag_ChildComponents' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_FindChildComponentsByTag_ReturnValue) == 0x0000D8, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_FindChildComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, Temp_int_Variable_1) == 0x0000DC, "Member 'FL_VFX_C_MID_Creation_Skeletal::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_Get_Item_3) == 0x0000E0, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, K2Node_DynamicCast_AsMesh_Component) == 0x0000E8, "Member 'FL_VFX_C_MID_Creation_Skeletal::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'FL_VFX_C_MID_Creation_Skeletal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, K2Node_DynamicCast_AsPrimitive_Component) == 0x0000F8, "Member 'FL_VFX_C_MID_Creation_Skeletal::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'FL_VFX_C_MID_Creation_Skeletal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_GetMaterialIndex_ReturnValue_1) == 0x000104, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_GetMaterialIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_GetMaterial_ReturnValue_1) == 0x000108, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000118, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Less_IntInt_ReturnValue_1) == 0x000120, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_AddUnique_ReturnValue) == 0x000124, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Skeletal, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000128, "Member 'FL_VFX_C_MID_Creation_Skeletal::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.MID_Creation_Static
// 0x0130 (0x0130 - 0x0000)
struct FL_VFX_C_MID_Creation_Static final
{
public:
	class AStaticMeshActor*                       Static_Mesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Material_Slot_Name;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Create_Child_MID;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Child_Indices_Start;                               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Child_Components_Tags;                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0038(0x0010)(Parm, OutParm)
	int32                                         Child_Tags_FL;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MIDs_FL;                                           // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_FindChildComponentsByTag_ChildComponents; // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_FindChildComponentsByTag_ReturnValue;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_3;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialIndex_ReturnValue_1;           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_VFX_C_MID_Creation_Static) == 0x000008, "Wrong alignment on FL_VFX_C_MID_Creation_Static");
static_assert(sizeof(FL_VFX_C_MID_Creation_Static) == 0x000130, "Wrong size on FL_VFX_C_MID_Creation_Static");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Static_Mesh) == 0x000000, "Member 'FL_VFX_C_MID_Creation_Static::Static_Mesh' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Material_Slot_Name) == 0x000008, "Member 'FL_VFX_C_MID_Creation_Static::Material_Slot_Name' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Create_Child_MID) == 0x000018, "Member 'FL_VFX_C_MID_Creation_Static::Create_Child_MID' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Child_Indices_Start) == 0x00001C, "Member 'FL_VFX_C_MID_Creation_Static::Child_Indices_Start' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Child_Components_Tags) == 0x000020, "Member 'FL_VFX_C_MID_Creation_Static::Child_Components_Tags' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, __WorldContext) == 0x000030, "Member 'FL_VFX_C_MID_Creation_Static::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, MIDs) == 0x000038, "Member 'FL_VFX_C_MID_Creation_Static::MIDs' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Child_Tags_FL) == 0x000048, "Member 'FL_VFX_C_MID_Creation_Static::Child_Tags_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, MIDs_FL) == 0x000050, "Member 'FL_VFX_C_MID_Creation_Static::MIDs_FL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_int_Array_Index_Variable) == 0x000060, "Member 'FL_VFX_C_MID_Creation_Static::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'FL_VFX_C_MID_Creation_Static::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'FL_VFX_C_MID_Creation_Static::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_bool_True_if_break_was_hit_Variable) == 0x000080, "Member 'FL_VFX_C_MID_Creation_Static::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'FL_VFX_C_MID_Creation_Static::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_Get_Item) == 0x000088, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_GetMaterialIndex_ReturnValue) == 0x000094, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_GetMaterial_ReturnValue) == 0x000098, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A0, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_int_Variable) == 0x0000AC, "Member 'FL_VFX_C_MID_Creation_Static::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_FindChildComponentsByTag_ChildComponents) == 0x0000C8, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_FindChildComponentsByTag_ChildComponents' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_FindChildComponentsByTag_ReturnValue) == 0x0000D8, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_FindChildComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, Temp_int_Variable_1) == 0x0000DC, "Member 'FL_VFX_C_MID_Creation_Static::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_Get_Item_3) == 0x0000E0, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, K2Node_DynamicCast_AsMesh_Component) == 0x0000E8, "Member 'FL_VFX_C_MID_Creation_Static::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'FL_VFX_C_MID_Creation_Static::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, K2Node_DynamicCast_AsPrimitive_Component) == 0x0000F8, "Member 'FL_VFX_C_MID_Creation_Static::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'FL_VFX_C_MID_Creation_Static::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_GetMaterialIndex_ReturnValue_1) == 0x000104, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_GetMaterialIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_GetMaterial_ReturnValue_1) == 0x000108, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000118, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Less_IntInt_ReturnValue_1) == 0x000120, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_AddUnique_ReturnValue) == 0x000124, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_MID_Creation_Static, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000128, "Member 'FL_VFX_C_MID_Creation_Static::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.Decal_Spawn
// 0x0098 (0x0098 - 0x0000)
struct FL_VFX_C_Decal_Spawn final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Size_Min;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Size_Max;                                    // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Life_Min;                                    // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Life_Max;                                    // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Fade_Delay_Min;                              // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_Fade_Delay_Max;                              // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_VFX_C_Decal_Spawn) == 0x000008, "Wrong alignment on FL_VFX_C_Decal_Spawn");
static_assert(sizeof(FL_VFX_C_Decal_Spawn) == 0x000098, "Wrong size on FL_VFX_C_Decal_Spawn");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, WorldContextObject) == 0x000000, "Member 'FL_VFX_C_Decal_Spawn::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, DecalMaterial) == 0x000008, "Member 'FL_VFX_C_Decal_Spawn::DecalMaterial' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Location) == 0x000010, "Member 'FL_VFX_C_Decal_Spawn::Location' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Normal) == 0x00001C, "Member 'FL_VFX_C_Decal_Spawn::Normal' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Decal_Size_Min) == 0x000028, "Member 'FL_VFX_C_Decal_Spawn::Decal_Size_Min' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Decal_Size_Max) == 0x00002C, "Member 'FL_VFX_C_Decal_Spawn::Decal_Size_Max' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Decal_Life_Min) == 0x000030, "Member 'FL_VFX_C_Decal_Spawn::Decal_Life_Min' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Decal_Life_Max) == 0x000034, "Member 'FL_VFX_C_Decal_Spawn::Decal_Life_Max' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Decal_Fade_Delay_Min) == 0x000038, "Member 'FL_VFX_C_Decal_Spawn::Decal_Fade_Delay_Min' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, Decal_Fade_Delay_Max) == 0x00003C, "Member 'FL_VFX_C_Decal_Spawn::Decal_Fade_Delay_Max' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, __WorldContext) == 0x000040, "Member 'FL_VFX_C_Decal_Spawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_RandomFloatInRange_ReturnValue) == 0x000048, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00004C, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000050, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000054, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000064, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Decal_Spawn, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000090, "Member 'FL_VFX_C_Decal_Spawn::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.Unlock_Doors
// 0x0018 (0x0018 - 0x0000)
struct FL_VFX_C_Unlock_Doors final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADoor*>                          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(FL_VFX_C_Unlock_Doors) == 0x000008, "Wrong alignment on FL_VFX_C_Unlock_Doors");
static_assert(sizeof(FL_VFX_C_Unlock_Doors) == 0x000018, "Wrong size on FL_VFX_C_Unlock_Doors");
static_assert(offsetof(FL_VFX_C_Unlock_Doors, __WorldContext) == 0x000000, "Member 'FL_VFX_C_Unlock_Doors::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Unlock_Doors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'FL_VFX_C_Unlock_Doors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function FL_VFX.FL_VFX_C.Hit_Flash
// 0x00F8 (0x00F8 - 0x0000)
struct FL_VFX_C_Hit_Flash final
{
public:
	struct FEventEffectParams                     Params_0;                                          // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Scene_Color_Tint;                                  // 0x0088(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_Duration;                                    // 0x0098(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Character_Hit;                                     // 0x009C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Scene_Color_Tint_Base;                             // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_DurationFL;                                  // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Flash_Strength;                                    // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetEventEffectPhysicalSurface_ReturnValue; // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AIndianaPlayerCharacter*                CallFunc_GetIndianaPC_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_VFX_C_Hit_Flash) == 0x000008, "Wrong alignment on FL_VFX_C_Hit_Flash");
static_assert(sizeof(FL_VFX_C_Hit_Flash) == 0x0000F8, "Wrong size on FL_VFX_C_Hit_Flash");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Params_0) == 0x000000, "Member 'FL_VFX_C_Hit_Flash::Params_0' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, __WorldContext) == 0x000080, "Member 'FL_VFX_C_Hit_Flash::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Scene_Color_Tint) == 0x000088, "Member 'FL_VFX_C_Hit_Flash::Scene_Color_Tint' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Delay_Duration) == 0x000098, "Member 'FL_VFX_C_Hit_Flash::Delay_Duration' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Character_Hit) == 0x00009C, "Member 'FL_VFX_C_Hit_Flash::Character_Hit' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Scene_Color_Tint_Base) == 0x0000A0, "Member 'FL_VFX_C_Hit_Flash::Scene_Color_Tint_Base' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Delay_DurationFL) == 0x0000B0, "Member 'FL_VFX_C_Hit_Flash::Delay_DurationFL' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, Flash_Strength) == 0x0000B4, "Member 'FL_VFX_C_Hit_Flash::Flash_Strength' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0000B8, "Member 'FL_VFX_C_Hit_Flash::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_GetEventEffectPhysicalSurface_ReturnValue) == 0x0000BC, "Member 'FL_VFX_C_Hit_Flash::CallFunc_GetEventEffectPhysicalSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000BD, "Member 'FL_VFX_C_Hit_Flash::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000C0, "Member 'FL_VFX_C_Hit_Flash::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_Contains_ReturnValue) == 0x0000D0, "Member 'FL_VFX_C_Hit_Flash::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, K2Node_MakeStruct_LinearColor) == 0x0000D4, "Member 'FL_VFX_C_Hit_Flash::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_GetIndianaPC_ReturnValue) == 0x0000E8, "Member 'FL_VFX_C_Hit_Flash::CallFunc_GetIndianaPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_VFX_C_Hit_Flash, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F0, "Member 'FL_VFX_C_Hit_Flash::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

}

