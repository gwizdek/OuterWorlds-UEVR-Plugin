#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineEmitter

#include "Basic.hpp"

#include "BP_SplineEmitter_classes.hpp"
#include "BP_SplineEmitter_parameters.hpp"


namespace SDK
{

// Function BP_SplineEmitter.BP_SplineEmitter_C.ExecuteUbergraph_BP_SplineEmitter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineEmitter_C::ExecuteUbergraph_BP_SplineEmitter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "ExecuteUbergraph_BP_SplineEmitter");

	Params::BP_SplineEmitter_C_ExecuteUbergraph_BP_SplineEmitter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineEmitter.BP_SplineEmitter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SplineEmitter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineEmitter.BP_SplineEmitter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineEmitter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "ReceiveTick");

	Params::BP_SplineEmitter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineEmitter.BP_SplineEmitter_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineEmitter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineEmitter.BP_SplineEmitter_C.GetPlayerWorldLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          PlayerWorldLocation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineEmitter_C::GetPlayerWorldLocation(struct FVector* PlayerWorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "GetPlayerWorldLocation");

	Params::BP_SplineEmitter_C_GetPlayerWorldLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerWorldLocation != nullptr)
		*PlayerWorldLocation = std::move(Parms.PlayerWorldLocation);
}


// Function BP_SplineEmitter.BP_SplineEmitter_C.GetEmitterLocationDeltaLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewEmitterWorldLocation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterWorldLocationDeltaLength                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineEmitter_C::GetEmitterLocationDeltaLength(const struct FVector& NewEmitterWorldLocation, float* EmitterWorldLocationDeltaLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "GetEmitterLocationDeltaLength");

	Params::BP_SplineEmitter_C_GetEmitterLocationDeltaLength Parms{};

	Parms.NewEmitterWorldLocation = std::move(NewEmitterWorldLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (EmitterWorldLocationDeltaLength != nullptr)
		*EmitterWorldLocationDeltaLength = Parms.EmitterWorldLocationDeltaLength;
}


// Function BP_SplineEmitter.BP_SplineEmitter_C.SmoothEmitterJump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewEmitterWorldLocation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SmoothSpeed_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SmoothedEmitterWorldLocation                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineEmitter_C::SmoothEmitterJump(const struct FVector& NewEmitterWorldLocation, float DeltaTime, float SmoothSpeed_0, struct FVector* SmoothedEmitterWorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineEmitter_C", "SmoothEmitterJump");

	Params::BP_SplineEmitter_C_SmoothEmitterJump Parms{};

	Parms.NewEmitterWorldLocation = std::move(NewEmitterWorldLocation);
	Parms.DeltaTime = DeltaTime;
	Parms.SmoothSpeed_0 = SmoothSpeed_0;

	UObject::ProcessEvent(Func, &Parms);

	if (SmoothedEmitterWorldLocation != nullptr)
		*SmoothedEmitterWorldLocation = std::move(Parms.SmoothedEmitterWorldLocation);
}

}

