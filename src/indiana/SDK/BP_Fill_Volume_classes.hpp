#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Fill_Volume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Fill_Volume.BP_Fill_Volume_C
// 0x0078 (0x0330 - 0x02B8)
class ABP_Fill_Volume_C final : public AActor
{
public:
	class UNiagaraComponent*                      Niagara;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_Area;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Particle_Bounds;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Particle_Bounds_Scale;                             // 0x02D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              Particle_Area_Size;                                // 0x02E8(0x0010)(Edit, BlueprintVisible)
	bool                                          Show_Bounds;                                       // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Particle_System;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Match_Bounds_Scale;                                // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Material;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Element_Index;                                     // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swap_Material;                                     // 0x031C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Max_Draw_Distance;                                 // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseNiagara;                                        // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Spawn_Rate;                                        // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Fill_Volume_C">();
	}
	static class ABP_Fill_Volume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Fill_Volume_C>();
	}
};
static_assert(alignof(ABP_Fill_Volume_C) == 0x000008, "Wrong alignment on ABP_Fill_Volume_C");
static_assert(sizeof(ABP_Fill_Volume_C) == 0x000330, "Wrong size on ABP_Fill_Volume_C");
static_assert(offsetof(ABP_Fill_Volume_C, Niagara) == 0x0002B8, "Member 'ABP_Fill_Volume_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, PS_Area) == 0x0002C0, "Member 'ABP_Fill_Volume_C::PS_Area' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Particle_Bounds) == 0x0002C8, "Member 'ABP_Fill_Volume_C::Particle_Bounds' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Billboard) == 0x0002D0, "Member 'ABP_Fill_Volume_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Particle_Bounds_Scale) == 0x0002D8, "Member 'ABP_Fill_Volume_C::Particle_Bounds_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Particle_Area_Size) == 0x0002E8, "Member 'ABP_Fill_Volume_C::Particle_Area_Size' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Show_Bounds) == 0x0002F8, "Member 'ABP_Fill_Volume_C::Show_Bounds' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Particle_System) == 0x000300, "Member 'ABP_Fill_Volume_C::Particle_System' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Match_Bounds_Scale) == 0x000308, "Member 'ABP_Fill_Volume_C::Match_Bounds_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Material) == 0x000310, "Member 'ABP_Fill_Volume_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Element_Index) == 0x000318, "Member 'ABP_Fill_Volume_C::Element_Index' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Swap_Material) == 0x00031C, "Member 'ABP_Fill_Volume_C::Swap_Material' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Max_Draw_Distance) == 0x000320, "Member 'ABP_Fill_Volume_C::Max_Draw_Distance' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, UseNiagara) == 0x000324, "Member 'ABP_Fill_Volume_C::UseNiagara' has a wrong offset!");
static_assert(offsetof(ABP_Fill_Volume_C, Spawn_Rate) == 0x000328, "Member 'ABP_Fill_Volume_C::Spawn_Rate' has a wrong offset!");

}

