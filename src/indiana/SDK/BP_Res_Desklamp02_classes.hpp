#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Res_Desklamp02

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Res_Desklamp02.BP_Res_Desklamp02_C
// 0x0038 (0x02F0 - 0x02B8)
class ABP_Res_Desklamp02_C final : public AActor
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightIntensity;                                    // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightTemperature;                                  // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InnerConeAngle;                                    // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OuterConeAngle;                                    // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightOn;                                           // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseLight;                                          // 0x02ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Res_Desklamp02_C">();
	}
	static class ABP_Res_Desklamp02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Res_Desklamp02_C>();
	}
};
static_assert(alignof(ABP_Res_Desklamp02_C) == 0x000008, "Wrong alignment on ABP_Res_Desklamp02_C");
static_assert(sizeof(ABP_Res_Desklamp02_C) == 0x0002F0, "Wrong size on ABP_Res_Desklamp02_C");
static_assert(offsetof(ABP_Res_Desklamp02_C, SpotLight) == 0x0002B8, "Member 'ABP_Res_Desklamp02_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, StaticMesh) == 0x0002C0, "Member 'ABP_Res_Desklamp02_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, LightIntensity) == 0x0002C8, "Member 'ABP_Res_Desklamp02_C::LightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, AttenuationRadius) == 0x0002CC, "Member 'ABP_Res_Desklamp02_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, LightColor) == 0x0002D0, "Member 'ABP_Res_Desklamp02_C::LightColor' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, LightTemperature) == 0x0002E0, "Member 'ABP_Res_Desklamp02_C::LightTemperature' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, InnerConeAngle) == 0x0002E4, "Member 'ABP_Res_Desklamp02_C::InnerConeAngle' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, OuterConeAngle) == 0x0002E8, "Member 'ABP_Res_Desklamp02_C::OuterConeAngle' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, LightOn) == 0x0002EC, "Member 'ABP_Res_Desklamp02_C::LightOn' has a wrong offset!");
static_assert(offsetof(ABP_Res_Desklamp02_C, UseLight) == 0x0002ED, "Member 'ABP_Res_Desklamp02_C::UseLight' has a wrong offset!");

}

