#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ceiling_Fluorescent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ceiling_Fluorescent.BP_Ceiling_Fluorescent_C
// 0x0040 (0x02F8 - 0x02B8)
class ABP_Ceiling_Fluorescent_C final : public AActor
{
public:
	class UPointLightComponent*                   InteriorBounce;                                    // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Light_On;                                          // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Intensity;                                         // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temperature;                                       // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLight;                                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ceiling_Fluorescent_C">();
	}
	static class ABP_Ceiling_Fluorescent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ceiling_Fluorescent_C>();
	}
};
static_assert(alignof(ABP_Ceiling_Fluorescent_C) == 0x000008, "Wrong alignment on ABP_Ceiling_Fluorescent_C");
static_assert(sizeof(ABP_Ceiling_Fluorescent_C) == 0x0002F8, "Wrong size on ABP_Ceiling_Fluorescent_C");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, InteriorBounce) == 0x0002B8, "Member 'ABP_Ceiling_Fluorescent_C::InteriorBounce' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, PointLight) == 0x0002C0, "Member 'ABP_Ceiling_Fluorescent_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, StaticMesh) == 0x0002C8, "Member 'ABP_Ceiling_Fluorescent_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, AttenuationRadius) == 0x0002D0, "Member 'ABP_Ceiling_Fluorescent_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, Light_On) == 0x0002D4, "Member 'ABP_Ceiling_Fluorescent_C::Light_On' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, Intensity) == 0x0002D8, "Member 'ABP_Ceiling_Fluorescent_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, Color) == 0x0002DC, "Member 'ABP_Ceiling_Fluorescent_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, Temperature) == 0x0002EC, "Member 'ABP_Ceiling_Fluorescent_C::Temperature' has a wrong offset!");
static_assert(offsetof(ABP_Ceiling_Fluorescent_C, UseLight) == 0x0002F0, "Member 'ABP_Ceiling_Fluorescent_C::UseLight' has a wrong offset!");

}

