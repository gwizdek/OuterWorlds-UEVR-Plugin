#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AbilityOverview_BP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Indiana_structs.hpp"


namespace SDK::Params
{

// Function AbilityOverview_BP.AbilityOverview_BP_C.ExecuteUbergraph_AbilityOverview_BP
// 0x0044 (0x0044 - 0x0000)
struct AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityPosition                              K2Node_Event_AbillityPosition;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsPlayerInCombat;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRestoring;                           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP) == 0x000004, "Wrong alignment on AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP");
static_assert(sizeof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP) == 0x000044, "Wrong size on AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP");
static_assert(offsetof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP, EntryPoint) == 0x000000, "Member 'AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP, K2Node_Event_AbillityPosition) == 0x000004, "Member 'AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP::K2Node_Event_AbillityPosition' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP, K2Node_Event_IsPlayerInCombat) == 0x000005, "Member 'AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP::K2Node_Event_IsPlayerInCombat' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP, K2Node_Event_bRestoring) == 0x000006, "Member 'AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP::K2Node_Event_bRestoring' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP, K2Node_Event_MyGeometry) == 0x000008, "Member 'AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP, K2Node_Event_InDeltaTime) == 0x000040, "Member 'AbilityOverview_BP_C_ExecuteUbergraph_AbilityOverview_BP::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function AbilityOverview_BP.AbilityOverview_BP_C.OnAbilityCooldownFinished
// 0x0001 (0x0001 - 0x0000)
struct AbilityOverview_BP_C_OnAbilityCooldownFinished final
{
public:
	EAbilityPosition                              AbillityPosition;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityOverview_BP_C_OnAbilityCooldownFinished) == 0x000001, "Wrong alignment on AbilityOverview_BP_C_OnAbilityCooldownFinished");
static_assert(sizeof(AbilityOverview_BP_C_OnAbilityCooldownFinished) == 0x000001, "Wrong size on AbilityOverview_BP_C_OnAbilityCooldownFinished");
static_assert(offsetof(AbilityOverview_BP_C_OnAbilityCooldownFinished, AbillityPosition) == 0x000000, "Member 'AbilityOverview_BP_C_OnAbilityCooldownFinished::AbillityPosition' has a wrong offset!");

// Function AbilityOverview_BP.AbilityOverview_BP_C.Tick
// 0x003C (0x003C - 0x0000)
struct AbilityOverview_BP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityOverview_BP_C_Tick) == 0x000004, "Wrong alignment on AbilityOverview_BP_C_Tick");
static_assert(sizeof(AbilityOverview_BP_C_Tick) == 0x00003C, "Wrong size on AbilityOverview_BP_C_Tick");
static_assert(offsetof(AbilityOverview_BP_C_Tick, MyGeometry) == 0x000000, "Member 'AbilityOverview_BP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_Tick, InDeltaTime) == 0x000038, "Member 'AbilityOverview_BP_C_Tick::InDeltaTime' has a wrong offset!");

// Function AbilityOverview_BP.AbilityOverview_BP_C.OnPlayerCombatStateChange
// 0x0002 (0x0002 - 0x0000)
struct AbilityOverview_BP_C_OnPlayerCombatStateChange final
{
public:
	bool                                          IsPlayerInCombat;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestoring;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AbilityOverview_BP_C_OnPlayerCombatStateChange) == 0x000001, "Wrong alignment on AbilityOverview_BP_C_OnPlayerCombatStateChange");
static_assert(sizeof(AbilityOverview_BP_C_OnPlayerCombatStateChange) == 0x000002, "Wrong size on AbilityOverview_BP_C_OnPlayerCombatStateChange");
static_assert(offsetof(AbilityOverview_BP_C_OnPlayerCombatStateChange, IsPlayerInCombat) == 0x000000, "Member 'AbilityOverview_BP_C_OnPlayerCombatStateChange::IsPlayerInCombat' has a wrong offset!");
static_assert(offsetof(AbilityOverview_BP_C_OnPlayerCombatStateChange, bRestoring) == 0x000001, "Member 'AbilityOverview_BP_C_OnPlayerCombatStateChange::bRestoring' has a wrong offset!");

}

