#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoviePlayer

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class MoviePlayer.MoviePlayerSettings
// 0x0018 (0x0048 - 0x0030)
class UMoviePlayerSettings final : public UObject
{
public:
	bool                                          bWaitForMoviesToComplete;                          // 0x0030(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoviesAreSkippable;                               // 0x0031(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkippingPlaybackAtEngineInitStage;                // 0x0032(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumLoadingScreenDisplayTime;                   // 0x0034(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StartupMovies;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MoviePlayerSettings">();
	}
	static class UMoviePlayerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePlayerSettings>();
	}
};
static_assert(alignof(UMoviePlayerSettings) == 0x000008, "Wrong alignment on UMoviePlayerSettings");
static_assert(sizeof(UMoviePlayerSettings) == 0x000048, "Wrong size on UMoviePlayerSettings");
static_assert(offsetof(UMoviePlayerSettings, bWaitForMoviesToComplete) == 0x000030, "Member 'UMoviePlayerSettings::bWaitForMoviesToComplete' has a wrong offset!");
static_assert(offsetof(UMoviePlayerSettings, bMoviesAreSkippable) == 0x000031, "Member 'UMoviePlayerSettings::bMoviesAreSkippable' has a wrong offset!");
static_assert(offsetof(UMoviePlayerSettings, bSkippingPlaybackAtEngineInitStage) == 0x000032, "Member 'UMoviePlayerSettings::bSkippingPlaybackAtEngineInitStage' has a wrong offset!");
static_assert(offsetof(UMoviePlayerSettings, MinimumLoadingScreenDisplayTime) == 0x000034, "Member 'UMoviePlayerSettings::MinimumLoadingScreenDisplayTime' has a wrong offset!");
static_assert(offsetof(UMoviePlayerSettings, StartupMovies) == 0x000038, "Member 'UMoviePlayerSettings::StartupMovies' has a wrong offset!");

}

