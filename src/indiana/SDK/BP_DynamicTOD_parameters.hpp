#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DynamicTOD

#include "Basic.hpp"

#include "Indiana_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DynamicTOD.BP_DynamicTOD_C.ExecuteUbergraph_BP_DynamicTOD
// 0x03A8 (0x03A8 - 0x0000)
struct BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeBetweenUpdates;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_UpdateLength;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_2;    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Wetness;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OverlappedActor_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWeatherAmount_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentMaterialWetness_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentWeatherAmount;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentMaterialWetness;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeIn_3;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeIn_2;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetRawHour_ReturnValue;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetRawHour_ReturnValue_1;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeIn_1;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeIn;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ATriggerVolume*                         CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue_1;         // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0174(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time_5;                         // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_4;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_3;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_5;      // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_14;                      // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_15;                      // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_2;                         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_1;                         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeatherStateContainer*                 CallFunc_SaveWeatherValues_BP_Output;              // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_1;        // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_2;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeatherStateContainer*                 CallFunc_GetPreviousWeatherState_ReturnValue;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue_1;    // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue;         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_16;                      // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_17;                      // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_18;                      // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_3;        // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_4;        // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313[0x1];                                      // 0x0313(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_5;        // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x5];                                      // 0x031B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANiagaraActor*                          CallFunc_Array_Get_Item_1;                         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F[0x1];                                      // 0x033F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_6;        // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_6;         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue_2;    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_19;                      // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_20;                      // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATriggerVolume*                         CallFunc_Array_Get_Item_2;                         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD");
static_assert(sizeof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD) == 0x0003A8, "Wrong size on BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, EntryPoint) == 0x000000, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_2) == 0x000024, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_3) == 0x000028, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_4) == 0x00002C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_5) == 0x000030, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_6) == 0x000034, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_7) == 0x000038, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_8) == 0x00003C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_9) == 0x000040, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_Event_DeltaSeconds) == 0x000048, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_TimeBetweenUpdates) == 0x000054, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_TimeBetweenUpdates' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_UpdateLength) == 0x000058, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_UpdateLength' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000060, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000068, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetScalarParameterValue_ReturnValue_2) == 0x000070, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetScalarParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000074, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Wetness) == 0x00007C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Wetness' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_OverlappedActor_1) == 0x000080, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_OtherActor_1) == 0x000088, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_Event_CurrentWeatherAmount_1) == 0x000090, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_Event_CurrentWeatherAmount_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_Event_CurrentMaterialWetness_1) == 0x000094, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_Event_CurrentMaterialWetness_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_Event_CurrentWeatherAmount) == 0x000098, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_Event_CurrentWeatherAmount' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_Event_CurrentMaterialWetness) == 0x00009C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_Event_CurrentMaterialWetness' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_OverlappedActor) == 0x0000A0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_OtherActor) == 0x0000A8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsOverlappingActor_ReturnValue) == 0x0000B0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetActorBounds_Origin) == 0x0000C0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetActorBounds_BoxExtent) == 0x0000CC, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BreakVector_X) == 0x0000D8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BreakVector_Y) == 0x0000DC, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000100, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_TimeIn_3) == 0x000104, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_TimeIn_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_TimeIn_2) == 0x000108, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_TimeIn_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00010D, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_K2_GetRawHour_ReturnValue) == 0x000110, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_K2_GetRawHour_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_SelectFloat_ReturnValue) == 0x000114, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000118, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000119, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_int_Loop_Counter_Variable_1) == 0x00011C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_int_Array_Index_Variable_1) == 0x000124, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_K2_GetRawHour_ReturnValue_1) == 0x000128, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_K2_GetRawHour_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_10) == 0x00012C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_11) == 0x000130, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_TimeIn_1) == 0x000134, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_TimeIn_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000138, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_TimeIn) == 0x00013C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_TimeIn' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000141, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Not_PreBool_ReturnValue_2) == 0x000142, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000158, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BooleanAND_ReturnValue_1) == 0x000161, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000168, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000170, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsOverlappingActor_ReturnValue_1) == 0x000171, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsOverlappingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000174, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_12) == 0x0001FC, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000200, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_MakeVector_ReturnValue_1) == 0x000204, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_SwitchEnum_CmpSuccess) == 0x000210, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_MakeVector_ReturnValue_2) == 0x000214, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000220, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Time_5) == 0x000224, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Time_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x000228, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomFloatInRange_ReturnValue) == 0x00022C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Time_4) == 0x000230, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Time_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x000234, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Array_Length_ReturnValue_1) == 0x000238, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_IntInt_ReturnValue_1) == 0x00023C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000240, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Time_3) == 0x000248, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Time_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_EqualEqual_FloatFloat_ReturnValue_5) == 0x00024C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_EqualEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000250, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_int_Loop_Counter_Variable_2) == 0x000254, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_IntInt_ReturnValue_2) == 0x000258, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00025C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_FloatFloat_ReturnValue) == 0x000260, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_13) == 0x000264, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000268, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00026C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_14) == 0x000270, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000274, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000278, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_15) == 0x00027C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Time_2) == 0x000280, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Time_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Time_1) == 0x000284, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Time_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_CustomEvent_Time) == 0x000288, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x00028C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_SaveWeatherValues_BP_Output) == 0x000290, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_SaveWeatherValues_BP_Output' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, K2Node_Event_EndPlayReason) == 0x000298, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x00029C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x0002A0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue) == 0x0002A4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002A8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue_1) == 0x0002AC, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0002B0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue_2) == 0x0002B4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0002B8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPreviousWeatherState_ReturnValue) == 0x0002C0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPreviousWeatherState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue) == 0x0002C8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue_1) == 0x0002C9, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x0002D0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x0002D8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x0002E0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0002E4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetHorizontalDistanceTo_ReturnValue_1) == 0x0002E8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetHorizontalDistanceTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0002EC, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_K2_GetNormalizedTime_ReturnValue) == 0x0002F0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_K2_GetNormalizedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_16) == 0x0002F4, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_17) == 0x0002F8, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_18) == 0x0002FC, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue_2) == 0x000300, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue_3) == 0x000304, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000308, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue_3) == 0x000309, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue_4) == 0x00030C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000310, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000311, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue_4) == 0x000312, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue_5) == 0x000314, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x000318, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Not_PreBool_ReturnValue_3) == 0x000319, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BooleanAND_ReturnValue_2) == 0x00031A, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x000320, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000328, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_SelectFloat_ReturnValue_1) == 0x00032C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Array_Get_Item_1) == 0x000330, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Array_Length_ReturnValue_2) == 0x000338, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue_5) == 0x00033C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Less_IntInt_ReturnValue_2) == 0x00033D, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_BooleanAND_ReturnValue_3) == 0x00033E, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetDistanceTo_ReturnValue) == 0x000340, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Conv_FloatToString_ReturnValue) == 0x000348, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x000358, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Concat_StrStr_ReturnValue) == 0x000360, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlaybackPosition_ReturnValue_6) == 0x000370, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlaybackPosition_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x000374, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetPlayerCharacter_ReturnValue_6) == 0x000378, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetPlayerCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_GetHorizontalDistanceTo_ReturnValue_2) == 0x000380, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_GetHorizontalDistanceTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_19) == 0x000384, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000388, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Lerp_ReturnValue_20) == 0x00038C, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Lerp_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, Temp_int_Array_Index_Variable_2) == 0x000390, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_Array_Get_Item_2) == 0x000398, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD, CallFunc_IsValid_ReturnValue_6) == 0x0003A0, "Member 'BP_DynamicTOD_C_ExecuteUbergraph_BP_DynamicTOD::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_DynamicTOD_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_DynamicTOD_C_ReceiveEndPlay");
static_assert(sizeof(BP_DynamicTOD_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_DynamicTOD_C_ReceiveEndPlay");
static_assert(offsetof(BP_DynamicTOD_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_DynamicTOD_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormLocalizedDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_SandStormLocalizedDuration final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormLocalizedDuration) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SandStormLocalizedDuration");
static_assert(sizeof(BP_DynamicTOD_C_SandStormLocalizedDuration) == 0x000004, "Wrong size on BP_DynamicTOD_C_SandStormLocalizedDuration");
static_assert(offsetof(BP_DynamicTOD_C_SandStormLocalizedDuration, Time_0) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormLocalizedDuration::Time_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Localized Sandstorm End
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_Localized_Sandstorm_End final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Localized_Sandstorm_End) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Localized_Sandstorm_End");
static_assert(sizeof(BP_DynamicTOD_C_Localized_Sandstorm_End) == 0x000004, "Wrong size on BP_DynamicTOD_C_Localized_Sandstorm_End");
static_assert(offsetof(BP_DynamicTOD_C_Localized_Sandstorm_End, Time_0) == 0x000000, "Member 'BP_DynamicTOD_C_Localized_Sandstorm_End::Time_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Localized Sandstorm Start
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_Localized_Sandstorm_Start final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Localized_Sandstorm_Start) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Localized_Sandstorm_Start");
static_assert(sizeof(BP_DynamicTOD_C_Localized_Sandstorm_Start) == 0x000004, "Wrong size on BP_DynamicTOD_C_Localized_Sandstorm_Start");
static_assert(offsetof(BP_DynamicTOD_C_Localized_Sandstorm_Start, Time_0) == 0x000000, "Member 'BP_DynamicTOD_C_Localized_Sandstorm_Start::Time_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormEnding
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_SandStormEnding final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormEnding) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SandStormEnding");
static_assert(sizeof(BP_DynamicTOD_C_SandStormEnding) == 0x000004, "Wrong size on BP_DynamicTOD_C_SandStormEnding");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnding, Time_0) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormEnding::Time_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_SandStormDuration final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormDuration) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SandStormDuration");
static_assert(sizeof(BP_DynamicTOD_C_SandStormDuration) == 0x000004, "Wrong size on BP_DynamicTOD_C_SandStormDuration");
static_assert(offsetof(BP_DynamicTOD_C_SandStormDuration, Time_0) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormDuration::Time_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormForming
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_SandStormForming final
{
public:
	float                                         Time_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormForming) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SandStormForming");
static_assert(sizeof(BP_DynamicTOD_C_SandStormForming) == 0x000004, "Wrong size on BP_DynamicTOD_C_SandStormForming");
static_assert(offsetof(BP_DynamicTOD_C_SandStormForming, Time_0) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormForming::Time_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.CloudForming
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_CloudForming final
{
public:
	float                                         TimeIn;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_CloudForming) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_CloudForming");
static_assert(sizeof(BP_DynamicTOD_C_CloudForming) == 0x000004, "Wrong size on BP_DynamicTOD_C_CloudForming");
static_assert(offsetof(BP_DynamicTOD_C_CloudForming, TimeIn) == 0x000000, "Member 'BP_DynamicTOD_C_CloudForming::TimeIn' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Drying
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_Drying final
{
public:
	float                                         TimeIn;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Drying) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Drying");
static_assert(sizeof(BP_DynamicTOD_C_Drying) == 0x000004, "Wrong size on BP_DynamicTOD_C_Drying");
static_assert(offsetof(BP_DynamicTOD_C_Drying, TimeIn) == 0x000000, "Member 'BP_DynamicTOD_C_Drying::TimeIn' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Weather_End
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_Weather_End final
{
public:
	float                                         TimeIn;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Weather_End) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Weather_End");
static_assert(sizeof(BP_DynamicTOD_C_Weather_End) == 0x000004, "Wrong size on BP_DynamicTOD_C_Weather_End");
static_assert(offsetof(BP_DynamicTOD_C_Weather_End, TimeIn) == 0x000000, "Member 'BP_DynamicTOD_C_Weather_End::TimeIn' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Rain_Start
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_Rain_Start final
{
public:
	float                                         TimeIn;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Rain_Start) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Rain_Start");
static_assert(sizeof(BP_DynamicTOD_C_Rain_Start) == 0x000004, "Wrong size on BP_DynamicTOD_C_Rain_Start");
static_assert(offsetof(BP_DynamicTOD_C_Rain_Start, TimeIn) == 0x000000, "Member 'BP_DynamicTOD_C_Rain_Start::TimeIn' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.DEPRECATED_Begin_Overlap_Container
// 0x0010 (0x0010 - 0x0000)
struct BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container");
static_assert(sizeof(BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container) == 0x000010, "Wrong size on BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container");
static_assert(offsetof(BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container, OverlappedActor) == 0x000000, "Member 'BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container, OtherActor) == 0x000008, "Member 'BP_DynamicTOD_C_DEPRECATED_Begin_Overlap_Container::OtherActor' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherTimelineUpdateReverse
// 0x0008 (0x0008 - 0x0000)
struct BP_DynamicTOD_C_WeatherTimelineUpdateReverse final
{
public:
	float                                         CurrentWeatherAmount;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMaterialWetness;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_WeatherTimelineUpdateReverse) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_WeatherTimelineUpdateReverse");
static_assert(sizeof(BP_DynamicTOD_C_WeatherTimelineUpdateReverse) == 0x000008, "Wrong size on BP_DynamicTOD_C_WeatherTimelineUpdateReverse");
static_assert(offsetof(BP_DynamicTOD_C_WeatherTimelineUpdateReverse, CurrentWeatherAmount) == 0x000000, "Member 'BP_DynamicTOD_C_WeatherTimelineUpdateReverse::CurrentWeatherAmount' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherTimelineUpdateReverse, CurrentMaterialWetness) == 0x000004, "Member 'BP_DynamicTOD_C_WeatherTimelineUpdateReverse::CurrentMaterialWetness' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherTimelineUpdateForward
// 0x0008 (0x0008 - 0x0000)
struct BP_DynamicTOD_C_WeatherTimelineUpdateForward final
{
public:
	float                                         CurrentWeatherAmount;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMaterialWetness;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_WeatherTimelineUpdateForward) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_WeatherTimelineUpdateForward");
static_assert(sizeof(BP_DynamicTOD_C_WeatherTimelineUpdateForward) == 0x000008, "Wrong size on BP_DynamicTOD_C_WeatherTimelineUpdateForward");
static_assert(offsetof(BP_DynamicTOD_C_WeatherTimelineUpdateForward, CurrentWeatherAmount) == 0x000000, "Member 'BP_DynamicTOD_C_WeatherTimelineUpdateForward::CurrentWeatherAmount' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherTimelineUpdateForward, CurrentMaterialWetness) == 0x000004, "Member 'BP_DynamicTOD_C_WeatherTimelineUpdateForward::CurrentMaterialWetness' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.DEPRECATED_End_Overlap_Container
// 0x0010 (0x0010 - 0x0000)
struct BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container");
static_assert(sizeof(BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container) == 0x000010, "Wrong size on BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container");
static_assert(offsetof(BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container, OverlappedActor) == 0x000000, "Member 'BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container, OtherActor) == 0x000008, "Member 'BP_DynamicTOD_C_DEPRECATED_End_Overlap_Container::OtherActor' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SetWetness
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_SetWetness final
{
public:
	float                                         Wetness_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SetWetness) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SetWetness");
static_assert(sizeof(BP_DynamicTOD_C_SetWetness) == 0x000004, "Wrong size on BP_DynamicTOD_C_SetWetness");
static_assert(offsetof(BP_DynamicTOD_C_SetWetness, Wetness_0) == 0x000000, "Member 'BP_DynamicTOD_C_SetWetness::Wetness_0' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SetStepShadow
// 0x0008 (0x0008 - 0x0000)
struct BP_DynamicTOD_C_SetStepShadow final
{
public:
	float                                         TimeBetweenUpdates;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateLength;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SetStepShadow) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SetStepShadow");
static_assert(sizeof(BP_DynamicTOD_C_SetStepShadow) == 0x000008, "Wrong size on BP_DynamicTOD_C_SetStepShadow");
static_assert(offsetof(BP_DynamicTOD_C_SetStepShadow, TimeBetweenUpdates) == 0x000000, "Member 'BP_DynamicTOD_C_SetStepShadow::TimeBetweenUpdates' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetStepShadow, UpdateLength) == 0x000004, "Member 'BP_DynamicTOD_C_SetStepShadow::UpdateLength' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DynamicTOD_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_ReceiveTick");
static_assert(sizeof(BP_DynamicTOD_C_ReceiveTick) == 0x000004, "Wrong size on BP_DynamicTOD_C_ReceiveTick");
static_assert(offsetof(BP_DynamicTOD_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DynamicTOD_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.UserConstructionScript
// 0x0090 (0x0090 - 0x0000)
struct BP_DynamicTOD_C_UserConstructionScript final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetRawHour_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_MID_Creation_Static_MIDs;                 // 0x0040(0x0010)(ReferenceParm)
	class AStaticMeshActor*                       CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_MID_Creation_Static_MIDs_1;               // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_UserConstructionScript");
static_assert(sizeof(BP_DynamicTOD_C_UserConstructionScript) == 0x000090, "Wrong size on BP_DynamicTOD_C_UserConstructionScript");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_DynamicTOD_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DynamicTOD_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_DynamicTOD_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_DynamicTOD_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_K2_GetRawHour_ReturnValue) == 0x000014, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_K2_GetRawHour_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_DynamicTOD_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000031, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00003A, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_MID_Creation_Static_MIDs) == 0x000040, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_MID_Creation_Static_MIDs' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_MID_Creation_Static_MIDs_1) == 0x000060, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_MID_Creation_Static_MIDs_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000070, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_Get_Item_3) == 0x000078, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000084, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_UserConstructionScript, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000089, "Member 'BP_DynamicTOD_C_UserConstructionScript::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_LightAngle
// 0x0038 (0x0038 - 0x0000)
struct BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle final
{
public:
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle");
static_assert(sizeof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle) == 0x000038, "Wrong size on BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, DirectionalLight) == 0x000000, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::DirectionalLight' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, Angle) == 0x000008, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::Angle' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00000C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_Abs_ReturnValue_1) == 0x000030, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_LightAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_RotateCelestialBody
// 0x00B8 (0x00B8 - 0x0000)
struct BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody final
{
public:
	float                                         NormalizedTime;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrbitalPlaneOffsetAngle;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrbitalTilt;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseAngle;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ElevationCurve;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalRotation;                                     // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                FinalVector;                                       // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody");
static_assert(sizeof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody) == 0x0000B8, "Wrong size on BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, NormalizedTime) == 0x000000, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::NormalizedTime' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, OrbitalPlaneOffsetAngle) == 0x000004, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::OrbitalPlaneOffsetAngle' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, OrbitalTilt) == 0x000008, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::OrbitalTilt' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, RiseAngle) == 0x00000C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::RiseAngle' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, ElevationCurve) == 0x000010, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::ElevationCurve' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, FinalRotation) == 0x000018, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, FinalVector) == 0x000024, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::FinalVector' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_GetFloatValue_ReturnValue) == 0x00003C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_MakeRotator_ReturnValue_1) == 0x00004C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_MakeRotator_ReturnValue_2) == 0x000058, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_MakeRotator_ReturnValue_3) == 0x000064, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00007C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000088, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000094, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0000A0, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000AC, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialBody::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.VFX_Material_Update
// 0x0058 (0x0058 - 0x0000)
struct BP_DynamicTOD_C_VFX_Material_Update final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_VFX_Material_Update) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_VFX_Material_Update");
static_assert(sizeof(BP_DynamicTOD_C_VFX_Material_Update) == 0x000058, "Wrong size on BP_DynamicTOD_C_VFX_Material_Update");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_DynamicTOD_C_VFX_Material_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DynamicTOD_C_VFX_Material_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'BP_DynamicTOD_C_VFX_Material_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_DynamicTOD_C_VFX_Material_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_K2_GetNormalizedTime_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_K2_GetNormalizedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000035, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_GetFloatValue_ReturnValue) == 0x000038, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Lerp_ReturnValue_1) == 0x00004C, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000054, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_VFX_Material_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x000055, "Member 'BP_DynamicTOD_C_VFX_Material_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep
// 0x00A0 (0x00A0 - 0x0000)
struct BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep final
{
public:
	float                                         NormalizedTime;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrbitalPlaneOffsetAngle;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrbitalTilt;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseAngle;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ElevationCurve;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalRotation;                                     // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                FinalVector;                                       // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NumberOfUpdatesPerDay;                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondsInADay;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalRotation; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalVector; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalRotation_1; // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalVector_1; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep");
static_assert(sizeof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep) == 0x0000A0, "Wrong size on BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, NormalizedTime) == 0x000000, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::NormalizedTime' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, OrbitalPlaneOffsetAngle) == 0x000004, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::OrbitalPlaneOffsetAngle' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, OrbitalTilt) == 0x000008, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::OrbitalTilt' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, RiseAngle) == 0x00000C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::RiseAngle' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, ElevationCurve) == 0x000010, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::ElevationCurve' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, FinalRotation) == 0x000018, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, FinalVector) == 0x000024, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::FinalVector' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, NumberOfUpdatesPerDay) == 0x000030, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::NumberOfUpdatesPerDay' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, SecondsInADay) == 0x000034, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::SecondsInADay' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalRotation) == 0x000038, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalVector) == 0x000044, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalVector' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FMin_ReturnValue) == 0x000054, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Fraction_ReturnValue) == 0x00005C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FFloor_ReturnValue) == 0x000064, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000074, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000078, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000080, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalRotation_1) == 0x000084, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalRotation_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep, CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalVector_1) == 0x000090, "Member 'BP_DynamicTOD_C_FOR_REFERENCE_ONLY_RotateCelestialObjectWithStep::CallFunc_FOR_REFERENCE_ONLY_RotateCelestialBody_FinalVector_1' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.GetWeatherParticleSystem
// 0x0018 (0x0018 - 0x0000)
struct BP_DynamicTOD_C_GetWeatherParticleSystem final
{
public:
	class UParticleSystem*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        WeatherParticleSystem;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_GetWeatherParticleSystem) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_GetWeatherParticleSystem");
static_assert(sizeof(BP_DynamicTOD_C_GetWeatherParticleSystem) == 0x000018, "Wrong size on BP_DynamicTOD_C_GetWeatherParticleSystem");
static_assert(offsetof(BP_DynamicTOD_C_GetWeatherParticleSystem, ReturnValue) == 0x000000, "Member 'BP_DynamicTOD_C_GetWeatherParticleSystem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_GetWeatherParticleSystem, WeatherParticleSystem) == 0x000008, "Member 'BP_DynamicTOD_C_GetWeatherParticleSystem::WeatherParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_GetWeatherParticleSystem, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_DynamicTOD_C_GetWeatherParticleSystem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.GetWeatherWwiseStateName
// 0x0014 (0x0014 - 0x0000)
struct BP_DynamicTOD_C_GetWeatherWwiseStateName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WeatherWwiseStateName;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_GetWeatherWwiseStateName) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_GetWeatherWwiseStateName");
static_assert(sizeof(BP_DynamicTOD_C_GetWeatherWwiseStateName) == 0x000014, "Wrong size on BP_DynamicTOD_C_GetWeatherWwiseStateName");
static_assert(offsetof(BP_DynamicTOD_C_GetWeatherWwiseStateName, ReturnValue) == 0x000000, "Member 'BP_DynamicTOD_C_GetWeatherWwiseStateName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_GetWeatherWwiseStateName, WeatherWwiseStateName) == 0x000008, "Member 'BP_DynamicTOD_C_GetWeatherWwiseStateName::WeatherWwiseStateName' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_GetWeatherWwiseStateName, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_DynamicTOD_C_GetWeatherWwiseStateName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SetWetnessDependentMPC
// 0x0054 (0x0054 - 0x0000)
struct BP_DynamicTOD_C_SetWetnessDependentMPC final
{
public:
	float                                         Wetness_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SetWetnessDependentMPC) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SetWetnessDependentMPC");
static_assert(sizeof(BP_DynamicTOD_C_SetWetnessDependentMPC) == 0x000054, "Wrong size on BP_DynamicTOD_C_SetWetnessDependentMPC");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, Wetness_0) == 0x000000, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::Wetness_0' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_GetVectorValue_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_GetVectorValue_ReturnValue_1) == 0x000010, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_X_1) == 0x000028, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_X_2) == 0x000034, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Y_2) == 0x000038, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Z_2) == 0x00003C, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_X_3) == 0x000044, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Y_3) == 0x000048, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_BreakVector_Z_3) == 0x00004C, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SetWetnessDependentMPC, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'BP_DynamicTOD_C_SetWetnessDependentMPC::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherStart
// 0x0020 (0x0020 - 0x0000)
struct BP_DynamicTOD_C_WeatherStart final
{
public:
	float                                         WeatherCondition;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Wetness_0;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent2D_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_WeatherStart) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_WeatherStart");
static_assert(sizeof(BP_DynamicTOD_C_WeatherStart) == 0x000020, "Wrong size on BP_DynamicTOD_C_WeatherStart");
static_assert(offsetof(BP_DynamicTOD_C_WeatherStart, WeatherCondition) == 0x000000, "Member 'BP_DynamicTOD_C_WeatherStart::WeatherCondition' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherStart, Wetness_0) == 0x000004, "Member 'BP_DynamicTOD_C_WeatherStart::Wetness_0' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherStart, CallFunc_PostEvent2D_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_WeatherStart::CallFunc_PostEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherStart, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'BP_DynamicTOD_C_WeatherStart::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherStart, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_WeatherStart::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.WeatherEnd
// 0x000C (0x000C - 0x0000)
struct BP_DynamicTOD_C_WeatherEnd final
{
public:
	float                                         WeatherCondition;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent2D_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_WeatherEnd) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_WeatherEnd");
static_assert(sizeof(BP_DynamicTOD_C_WeatherEnd) == 0x00000C, "Wrong size on BP_DynamicTOD_C_WeatherEnd");
static_assert(offsetof(BP_DynamicTOD_C_WeatherEnd, WeatherCondition) == 0x000000, "Member 'BP_DynamicTOD_C_WeatherEnd::WeatherCondition' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherEnd, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_WeatherEnd::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_WeatherEnd, CallFunc_PostEvent2D_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_WeatherEnd::CallFunc_PostEvent2D_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.DynamicPostProcessesAndCloud
// 0x007C (0x007C - 0x0000)
struct BP_DynamicTOD_C_DynamicPostProcessesAndCloud final
{
public:
	float                                         CallFunc_K2_GetRawHour_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue;   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_1; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_2; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_3; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue_2;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue_3;  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue_4;  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_DynamicPostProcessesAndCloud");
static_assert(sizeof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud) == 0x00007C, "Wrong size on BP_DynamicTOD_C_DynamicPostProcessesAndCloud");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_K2_GetRawHour_ReturnValue) == 0x000000, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_K2_GetRawHour_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_GetRuntimeLinearColorValue_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_GetRuntimeLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_GetRuntimeLinearColorValue_ReturnValue_1) == 0x000018, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_GetRuntimeLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_GetRuntimeLinearColorValue_ReturnValue_2) == 0x000028, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_GetRuntimeLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_RuntimeCurveGetFloatValue_ReturnValue) == 0x000038, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_RuntimeCurveGetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1) == 0x00003C, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_GetRuntimeLinearColorValue_ReturnValue_3) == 0x000040, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_GetRuntimeLinearColorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_RuntimeCurveGetFloatValue_ReturnValue_2) == 0x000050, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_RuntimeCurveGetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_RuntimeCurveGetFloatValue_ReturnValue_3) == 0x000054, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_RuntimeCurveGetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_MapRangeClamped_ReturnValue) == 0x00005C, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Lerp_ReturnValue_1) == 0x000064, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Lerp_ReturnValue_2) == 0x000068, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_RuntimeCurveGetFloatValue_ReturnValue_4) == 0x00006C, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_RuntimeCurveGetFloatValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Lerp_ReturnValue_3) == 0x000074, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DynamicPostProcessesAndCloud, CallFunc_Lerp_ReturnValue_4) == 0x000078, "Member 'BP_DynamicTOD_C_DynamicPostProcessesAndCloud::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Weather Lighting Start
// 0x0134 (0x0134 - 0x0000)
struct BP_DynamicTOD_C_Weather_Lighting_Start final
{
public:
	float                                         Timeline;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue;   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_1; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_2; // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_3; // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_4; // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue_1;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue_2;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_5; // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_6; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_7; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_8; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_3;            // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue_3;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_9; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_4;            // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1;  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Weather_Lighting_Start) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Weather_Lighting_Start");
static_assert(sizeof(BP_DynamicTOD_C_Weather_Lighting_Start) == 0x000134, "Wrong size on BP_DynamicTOD_C_Weather_Lighting_Start");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, Timeline) == 0x000000, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::Timeline' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_1) == 0x000014, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_2) == 0x000024, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_3) == 0x000034, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_K2_GetNormalizedTime_ReturnValue) == 0x000048, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_K2_GetNormalizedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_4) == 0x00004C, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_K2_GetNormalizedTime_ReturnValue_1) == 0x00005C, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_K2_GetNormalizedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_K2_GetNormalizedTime_ReturnValue_2) == 0x000060, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_K2_GetNormalizedTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_SelectFloat_ReturnValue) == 0x00006C, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_5) == 0x000074, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_MapRangeClamped_ReturnValue) == 0x000084, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_LinearColorLerp_ReturnValue) == 0x000088, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_6) == 0x000098, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000A8, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_7) == 0x0000B8, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_LinearColorLerp_ReturnValue_2) == 0x0000C8, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_8) == 0x0000D8, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_LinearColorLerp_ReturnValue_3) == 0x0000E8, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_LinearColorLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_K2_GetNormalizedTime_ReturnValue_3) == 0x0000F8, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_K2_GetNormalizedTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000FC, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_RuntimeCurveGetFloatValue_ReturnValue) == 0x000100, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_RuntimeCurveGetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_SelectFloat_ReturnValue_2) == 0x000104, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_GetRuntimeLinearColorValue_ReturnValue_9) == 0x000108, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_GetRuntimeLinearColorValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_SelectFloat_ReturnValue_3) == 0x000118, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_LinearColorLerp_ReturnValue_4) == 0x00011C, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_LinearColorLerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1) == 0x00012C, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_Start, CallFunc_Lerp_ReturnValue) == 0x000130, "Member 'BP_DynamicTOD_C_Weather_Lighting_Start::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Weather Lighting End
// 0x0134 (0x0134 - 0x0000)
struct BP_DynamicTOD_C_Weather_Lighting_End final
{
public:
	float                                         Timeline;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue;   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_1; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_2; // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_3; // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_4; // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue_1;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue_2;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_5; // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_6; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_7; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_8; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_3;            // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetNormalizedTime_ReturnValue_3;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRuntimeLinearColorValue_ReturnValue_9; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_4;            // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1;  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_Weather_Lighting_End) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_Weather_Lighting_End");
static_assert(sizeof(BP_DynamicTOD_C_Weather_Lighting_End) == 0x000134, "Wrong size on BP_DynamicTOD_C_Weather_Lighting_End");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, Timeline) == 0x000000, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::Timeline' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_1) == 0x000014, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_2) == 0x000024, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_3) == 0x000034, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_K2_GetNormalizedTime_ReturnValue) == 0x000048, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_K2_GetNormalizedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_4) == 0x00004C, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_K2_GetNormalizedTime_ReturnValue_1) == 0x00005C, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_K2_GetNormalizedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_K2_GetNormalizedTime_ReturnValue_2) == 0x000060, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_K2_GetNormalizedTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_SelectFloat_ReturnValue) == 0x00006C, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_5) == 0x000074, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_MapRangeClamped_ReturnValue) == 0x000084, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_LinearColorLerp_ReturnValue) == 0x000088, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_6) == 0x000098, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000A8, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_7) == 0x0000B8, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_LinearColorLerp_ReturnValue_2) == 0x0000C8, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_8) == 0x0000D8, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_LinearColorLerp_ReturnValue_3) == 0x0000E8, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_LinearColorLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_K2_GetNormalizedTime_ReturnValue_3) == 0x0000F8, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_K2_GetNormalizedTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000FC, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_RuntimeCurveGetFloatValue_ReturnValue) == 0x000100, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_RuntimeCurveGetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_SelectFloat_ReturnValue_2) == 0x000104, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_GetRuntimeLinearColorValue_ReturnValue_9) == 0x000108, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_GetRuntimeLinearColorValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_SelectFloat_ReturnValue_3) == 0x000118, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_LinearColorLerp_ReturnValue_4) == 0x00011C, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_LinearColorLerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1) == 0x00012C, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_RuntimeCurveGetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Weather_Lighting_End, CallFunc_Lerp_ReturnValue) == 0x000130, "Member 'BP_DynamicTOD_C_Weather_Lighting_End::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.RainSetup
// 0x0028 (0x0028 - 0x0000)
struct BP_DynamicTOD_C_RainSetup final
{
public:
	float                                         Timeline;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomWindGenerator_0;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_RainSetup) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_RainSetup");
static_assert(sizeof(BP_DynamicTOD_C_RainSetup) == 0x000028, "Wrong size on BP_DynamicTOD_C_RainSetup");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, Timeline) == 0x000000, "Member 'BP_DynamicTOD_C_RainSetup::Timeline' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, RandomWindGenerator_0) == 0x000004, "Member 'BP_DynamicTOD_C_RainSetup::RandomWindGenerator_0' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Lerp_ReturnValue_2) == 0x000014, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Lerp_ReturnValue_3) == 0x00001C, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Lerp_ReturnValue_4) == 0x000020, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainSetup, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_DynamicTOD_C_RainSetup::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.RainStormTime
// 0x0020 (0x0020 - 0x0000)
struct BP_DynamicTOD_C_RainStormTime final
{
public:
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_RainStormTime) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_RainStormTime");
static_assert(sizeof(BP_DynamicTOD_C_RainStormTime) == 0x000020, "Wrong size on BP_DynamicTOD_C_RainStormTime");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000008, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000010, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000014, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000018, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_RainStormTime, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00001C, "Member 'BP_DynamicTOD_C_RainStormTime::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormStart
// 0x0100 (0x0100 - 0x0000)
struct BP_DynamicTOD_C_SandStormStart final
{
public:
	float                                         RandomWindGenerator_0;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANiagaraActor*                          CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormStart) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_SandStormStart");
static_assert(sizeof(BP_DynamicTOD_C_SandStormStart) == 0x000100, "Wrong size on BP_DynamicTOD_C_SandStormStart");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, RandomWindGenerator_0) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormStart::RandomWindGenerator_0' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, Timeline) == 0x000004, "Member 'BP_DynamicTOD_C_SandStormStart::Timeline' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_1) == 0x00000C, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_2) == 0x000010, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_3) == 0x000018, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000020, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000A8, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000B4, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_4) == 0x0000B8, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_5) == 0x0000BC, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_6) == 0x0000C0, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_7) == 0x0000C4, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_8) == 0x0000C8, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_9) == 0x0000CC, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_10) == 0x0000D0, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_11) == 0x0000D4, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_12) == 0x0000D8, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Lerp_ReturnValue_13) == 0x0000DC, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'BP_DynamicTOD_C_SandStormStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, Temp_int_Loop_Counter_Variable) == 0x0000F0, "Member 'BP_DynamicTOD_C_SandStormStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormStart, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_DynamicTOD_C_SandStormStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormTime
// 0x0038 (0x0038 - 0x0000)
struct BP_DynamicTOD_C_SandStormTime final
{
public:
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormTime) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SandStormTime");
static_assert(sizeof(BP_DynamicTOD_C_SandStormTime) == 0x000038, "Wrong size on BP_DynamicTOD_C_SandStormTime");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000008, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000010, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000014, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000018, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00001C, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000020, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000024, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000028, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x00002C, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000030, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormTime, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000034, "Member 'BP_DynamicTOD_C_SandStormTime::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormEnd
// 0x0038 (0x0038 - 0x0000)
struct BP_DynamicTOD_C_SandStormEnd final
{
public:
	float                                         Timeline;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindIntensityEnd_0;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANiagaraActor*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormEnd) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_SandStormEnd");
static_assert(sizeof(BP_DynamicTOD_C_SandStormEnd) == 0x000038, "Wrong size on BP_DynamicTOD_C_SandStormEnd");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, Timeline) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormEnd::Timeline' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, WindIntensityEnd_0) == 0x000004, "Member 'BP_DynamicTOD_C_SandStormEnd::WindIntensityEnd_0' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Lerp_ReturnValue_1) == 0x00000C, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Lerp_ReturnValue_2) == 0x000010, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_DynamicTOD_C_SandStormEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_DynamicTOD_C_SandStormEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormEnd, CallFunc_Lerp_ReturnValue_3) == 0x000030, "Member 'BP_DynamicTOD_C_SandStormEnd::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.DustDevil
// 0x00D0 (0x00D0 - 0x0000)
struct BP_DynamicTOD_C_DustDevil final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_DustDevil) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_DustDevil");
static_assert(sizeof(BP_DynamicTOD_C_DustDevil) == 0x0000D0, "Wrong size on BP_DynamicTOD_C_DustDevil");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_DynamicTOD_C_DustDevil::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_DynamicTOD_C_DustDevil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_DynamicTOD_C_DustDevil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00003C, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_GetDistanceTo_ReturnValue) == 0x0000C4, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_DustDevil, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_DynamicTOD_C_DustDevil::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormObjectStored
// 0x0038 (0x0038 - 0x0000)
struct BP_DynamicTOD_C_SandStormObjectStored final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANiagaraActor*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormObjectStored) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_SandStormObjectStored");
static_assert(sizeof(BP_DynamicTOD_C_SandStormObjectStored) == 0x000038, "Wrong size on BP_DynamicTOD_C_SandStormObjectStored");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormObjectStored::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_DynamicTOD_C_SandStormObjectStored::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_DynamicTOD_C_SandStormObjectStored::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormObjectStored, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_DynamicTOD_C_SandStormObjectStored::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Set Weather Values
// 0x0018 (0x0018 - 0x0000)
struct BP_DynamicTOD_C_Set_Weather_Values final
{
public:
	class UWeatherStateContainer*                 NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_Set_Weather_Values) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_Set_Weather_Values");
static_assert(sizeof(BP_DynamicTOD_C_Set_Weather_Values) == 0x000018, "Wrong size on BP_DynamicTOD_C_Set_Weather_Values");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, NewParam) == 0x000000, "Member 'BP_DynamicTOD_C_Set_Weather_Values::NewParam' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_DynamicTOD_C_Set_Weather_Values::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000A, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000B, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00000C, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00000D, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x00000E, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x00000F, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Set_Weather_Values, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x000010, "Member 'BP_DynamicTOD_C_Set_Weather_Values::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SaveWeatherValues_BP
// 0x0098 (0x0098 - 0x0000)
struct BP_DynamicTOD_C_SaveWeatherValues_BP final
{
public:
	class UWeatherStateContainer*                 Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_2;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeatherStateContainer*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeatherState                          K2Node_MakeStruct_WeatherState;                    // 0x0030(0x002C)(NoDestructor)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_3;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_4;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_5;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_6;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeatherState                          K2Node_MakeStruct_WeatherState_1;                  // 0x006C(0x002C)(NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_SaveWeatherValues_BP) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_SaveWeatherValues_BP");
static_assert(sizeof(BP_DynamicTOD_C_SaveWeatherValues_BP) == 0x000098, "Wrong size on BP_DynamicTOD_C_SaveWeatherValues_BP");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, Output) == 0x000000, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::Output' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue_1) == 0x00000C, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue_2) == 0x000010, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_SpawnObject_ReturnValue) == 0x000028, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, K2Node_MakeStruct_WeatherState) == 0x000030, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::K2Node_MakeStruct_WeatherState' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue_3) == 0x00005C, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue_4) == 0x000060, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue_5) == 0x000064, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, CallFunc_GetPlaybackPosition_ReturnValue_6) == 0x000068, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::CallFunc_GetPlaybackPosition_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SaveWeatherValues_BP, K2Node_MakeStruct_WeatherState_1) == 0x00006C, "Member 'BP_DynamicTOD_C_SaveWeatherValues_BP::K2Node_MakeStruct_WeatherState_1' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Reset Weather
// 0x0001 (0x0001 - 0x0000)
struct BP_DynamicTOD_C_Reset_Weather final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_Reset_Weather) == 0x000001, "Wrong alignment on BP_DynamicTOD_C_Reset_Weather");
static_assert(sizeof(BP_DynamicTOD_C_Reset_Weather) == 0x000001, "Wrong size on BP_DynamicTOD_C_Reset_Weather");
static_assert(offsetof(BP_DynamicTOD_C_Reset_Weather, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_DynamicTOD_C_Reset_Weather::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Lightning
// 0x00D0 (0x00D0 - 0x0000)
struct BP_DynamicTOD_C_Lightning final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_Lightning) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_Lightning");
static_assert(sizeof(BP_DynamicTOD_C_Lightning) == 0x0000D0, "Wrong size on BP_DynamicTOD_C_Lightning");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_DynamicTOD_C_Lightning::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_DynamicTOD_C_Lightning::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_DynamicTOD_C_Lightning::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000034, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_BooleanAND_ReturnValue) == 0x0000BC, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000C0, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x0000C8, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Lightning, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BP_DynamicTOD_C_Lightning::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.Sand Storm Postprocess Actors
// 0x0040 (0x0040 - 0x0000)
struct BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors) == 0x000008, "Wrong alignment on BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors");
static_assert(sizeof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors) == 0x000040, "Wrong size on BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x000034, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000039, "Member 'BP_DynamicTOD_C_Sand_Storm_Postprocess_Actors::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DynamicTOD.BP_DynamicTOD_C.SandStormFog
// 0x0018 (0x0018 - 0x0000)
struct BP_DynamicTOD_C_SandStormFog final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicTOD_C_SandStormFog) == 0x000004, "Wrong alignment on BP_DynamicTOD_C_SandStormFog");
static_assert(sizeof(BP_DynamicTOD_C_SandStormFog) == 0x000018, "Wrong size on BP_DynamicTOD_C_SandStormFog");
static_assert(offsetof(BP_DynamicTOD_C_SandStormFog, Value) == 0x000000, "Member 'BP_DynamicTOD_C_SandStormFog::Value' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormFog, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'BP_DynamicTOD_C_SandStormFog::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicTOD_C_SandStormFog, CallFunc_LinearColorLerp_ReturnValue) == 0x000008, "Member 'BP_DynamicTOD_C_SandStormFog::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");

}

