#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestListEntry_BP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Indiana_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function QuestListEntry_BP.QuestListEntry_BP_C.ExecuteUbergraph_QuestListEntry_BP
// 0x01D8 (0x01D8 - 0x0000)
struct QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_3;                // 0x0038(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_2;                // 0x0068(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event_1;                // 0x0098(0x0030)(ConstParm, ContainsInstancedReference)
	struct FComponentEvent                        K2Node_ComponentBoundEvent_Event;                  // 0x00C8(0x0030)(ConstParm, ContainsInstancedReference)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00F8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_Event_QuestState;                           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bActive;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue;               // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByType_ReturnValue_1;             // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0188(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x01B0(0x0028)()
};
static_assert(alignof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP) == 0x000008, "Wrong alignment on QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP");
static_assert(sizeof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP) == 0x0001D8, "Wrong size on QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, EntryPoint) == 0x000000, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_byte_Variable) == 0x000004, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable) == 0x000008, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_1) == 0x00000C, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_2) == 0x000010, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_3) == 0x000014, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_4) == 0x000018, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_byte_Variable_1) == 0x00001C, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_5) == 0x000020, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_6) == 0x000024, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_7) == 0x000028, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_8) == 0x00002C, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_float_Variable_9) == 0x000030, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_bool_Variable) == 0x000034, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_byte_Variable_2) == 0x000035, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, Temp_byte_Variable_3) == 0x000036, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_ComponentBoundEvent_Event_3) == 0x000038, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_ComponentBoundEvent_Event_3' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_ComponentBoundEvent_Event_2) == 0x000068, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_ComponentBoundEvent_Event_2' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_ComponentBoundEvent_Event_1) == 0x000098, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_ComponentBoundEvent_Event_1' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_ComponentBoundEvent_Event) == 0x0000C8, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_ComponentBoundEvent_Event' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Event_MyGeometry) == 0x0000F8, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Event_InDeltaTime) == 0x000130, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Event_QuestState) == 0x000134, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Event_QuestState' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Select_Default) == 0x000138, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Select_Default_1) == 0x00013C, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Event_bActive) == 0x000140, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Event_bActive' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_Select_Default_2) == 0x000141, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, CallFunc_GetColorByType_ReturnValue) == 0x000144, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::CallFunc_GetColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, CallFunc_GetColorByType_ReturnValue_1) == 0x000154, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::CallFunc_GetColorByType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_MakeStruct_LinearColor) == 0x000164, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_MakeStruct_LinearColor_1) == 0x000174, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_MakeStruct_SlateColor) == 0x000188, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP, K2Node_MakeStruct_SlateColor_1) == 0x0001B0, "Member 'QuestListEntry_BP_C_ExecuteUbergraph_QuestListEntry_BP::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.SetActiveQuest
// 0x0001 (0x0001 - 0x0000)
struct QuestListEntry_BP_C_SetActiveQuest final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestListEntry_BP_C_SetActiveQuest) == 0x000001, "Wrong alignment on QuestListEntry_BP_C_SetActiveQuest");
static_assert(sizeof(QuestListEntry_BP_C_SetActiveQuest) == 0x000001, "Wrong size on QuestListEntry_BP_C_SetActiveQuest");
static_assert(offsetof(QuestListEntry_BP_C_SetActiveQuest, bActive) == 0x000000, "Member 'QuestListEntry_BP_C_SetActiveQuest::bActive' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.SetQuestCompletionStatus
// 0x0001 (0x0001 - 0x0000)
struct QuestListEntry_BP_C_SetQuestCompletionStatus final
{
public:
	EQuestState                                   QuestState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestListEntry_BP_C_SetQuestCompletionStatus) == 0x000001, "Wrong alignment on QuestListEntry_BP_C_SetQuestCompletionStatus");
static_assert(sizeof(QuestListEntry_BP_C_SetQuestCompletionStatus) == 0x000001, "Wrong size on QuestListEntry_BP_C_SetQuestCompletionStatus");
static_assert(offsetof(QuestListEntry_BP_C_SetQuestCompletionStatus, QuestState) == 0x000000, "Member 'QuestListEntry_BP_C_SetQuestCompletionStatus::QuestState' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.Tick
// 0x003C (0x003C - 0x0000)
struct QuestListEntry_BP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestListEntry_BP_C_Tick) == 0x000004, "Wrong alignment on QuestListEntry_BP_C_Tick");
static_assert(sizeof(QuestListEntry_BP_C_Tick) == 0x00003C, "Wrong size on QuestListEntry_BP_C_Tick");
static_assert(offsetof(QuestListEntry_BP_C_Tick, MyGeometry) == 0x000000, "Member 'QuestListEntry_BP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_Tick, InDeltaTime) == 0x000038, "Member 'QuestListEntry_BP_C_Tick::InDeltaTime' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_153_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_228_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_206_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature final
{
public:
	struct FComponentEvent                        Event;                                             // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature) == 0x000008, "Wrong alignment on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature");
static_assert(sizeof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature) == 0x000030, "Wrong size on QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature");
static_assert(offsetof(QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature, Event) == 0x000000, "Member 'QuestListEntry_BP_C_BndEvt__Button_K2Node_ComponentBoundEvent_182_ComponentEventMCD__DelegateSignature::Event' has a wrong offset!");

// Function QuestListEntry_BP.QuestListEntry_BP_C.SetFocusChanged
// 0x0068 (0x0068 - 0x0000)
struct QuestListEntry_BP_C_SetFocusChanged final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorAndOpacity_ReturnValue;           // 0x0008(0x0028)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
};
static_assert(alignof(QuestListEntry_BP_C_SetFocusChanged) == 0x000008, "Wrong alignment on QuestListEntry_BP_C_SetFocusChanged");
static_assert(sizeof(QuestListEntry_BP_C_SetFocusChanged) == 0x000068, "Wrong size on QuestListEntry_BP_C_SetFocusChanged");
static_assert(offsetof(QuestListEntry_BP_C_SetFocusChanged, IsFocused) == 0x000000, "Member 'QuestListEntry_BP_C_SetFocusChanged::IsFocused' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_SetFocusChanged, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'QuestListEntry_BP_C_SetFocusChanged::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_SetFocusChanged, CallFunc_GetColorAndOpacity_ReturnValue) == 0x000008, "Member 'QuestListEntry_BP_C_SetFocusChanged::CallFunc_GetColorAndOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_SetFocusChanged, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'QuestListEntry_BP_C_SetFocusChanged::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(QuestListEntry_BP_C_SetFocusChanged, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'QuestListEntry_BP_C_SetFocusChanged::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

