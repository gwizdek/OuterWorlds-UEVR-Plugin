#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseCharacterDeath

#include "Basic.hpp"

#include "Indiana_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BaseCharacterDeath.BaseCharacterDeath_C
// 0x0038 (0x0158 - 0x0120)
class UBaseCharacterDeath_C : public UDeathClass
{
public:
	TArray<class FName>                           QuadEmitters;                                      // 0x0120(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           BipedEmitters;                                     // 0x0130(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           TripedEmitters;                                    // 0x0140(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PileSpawned;                                       // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ApplyDeathMaterials();
	void TriggerParticlesOnBreakSockets(bool TriggerImpactSpray, class FName AttachedSocket, class FName DetachedSocket);
	void FindAndPostAudioEvents();
	void CalcBodyTypeImpact();
	void TriggerParticlesOnSpine(class UParticleSystem* EmitterTemplate);
	void CreateAshPile(class UStaticMesh* LootablePile, class UMaterialInterface* LootablePileMaterial, class UMaterialInstanceDynamic** Ash_MID);
	void UpdateTransitionCompletionDelay(float Delta);
	void UpdatePileDissolve(float& CurrentTime, float DissolveDuration, class UMaterialInstanceDynamic* Material);
	void TriggerNiagaraDeathParticles(class UNiagaraSystem* SystemTemplate);
	void TriggerNiagaraDeathAOE(class UNiagaraSystem* SystemTemplate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BaseCharacterDeath_C">();
	}
	static class UBaseCharacterDeath_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCharacterDeath_C>();
	}
};
static_assert(alignof(UBaseCharacterDeath_C) == 0x000008, "Wrong alignment on UBaseCharacterDeath_C");
static_assert(sizeof(UBaseCharacterDeath_C) == 0x000158, "Wrong size on UBaseCharacterDeath_C");
static_assert(offsetof(UBaseCharacterDeath_C, QuadEmitters) == 0x000120, "Member 'UBaseCharacterDeath_C::QuadEmitters' has a wrong offset!");
static_assert(offsetof(UBaseCharacterDeath_C, BipedEmitters) == 0x000130, "Member 'UBaseCharacterDeath_C::BipedEmitters' has a wrong offset!");
static_assert(offsetof(UBaseCharacterDeath_C, TripedEmitters) == 0x000140, "Member 'UBaseCharacterDeath_C::TripedEmitters' has a wrong offset!");
static_assert(offsetof(UBaseCharacterDeath_C, PileSpawned) == 0x000150, "Member 'UBaseCharacterDeath_C::PileSpawned' has a wrong offset!");

}

