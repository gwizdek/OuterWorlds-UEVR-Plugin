#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloorLamp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FloorLamp.BP_FloorLamp_C
// 0x0040 (0x02F8 - 0x02B8)
class ABP_FloorLamp_C final : public AActor
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IND_Floor_Lamp_01;                                 // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightIntensity;                                    // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightTemperature;                                  // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Inner_ConeAngle;                                   // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Outer_Cone_Angle;                                  // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightOn;                                           // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseLight;                                          // 0x02F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FloorLamp_C">();
	}
	static class ABP_FloorLamp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FloorLamp_C>();
	}
};
static_assert(alignof(ABP_FloorLamp_C) == 0x000008, "Wrong alignment on ABP_FloorLamp_C");
static_assert(sizeof(ABP_FloorLamp_C) == 0x0002F8, "Wrong size on ABP_FloorLamp_C");
static_assert(offsetof(ABP_FloorLamp_C, SpotLight) == 0x0002B8, "Member 'ABP_FloorLamp_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, IND_Floor_Lamp_01) == 0x0002C0, "Member 'ABP_FloorLamp_C::IND_Floor_Lamp_01' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_FloorLamp_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, LightIntensity) == 0x0002D0, "Member 'ABP_FloorLamp_C::LightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, AttenuationRadius) == 0x0002D4, "Member 'ABP_FloorLamp_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, LightColor) == 0x0002D8, "Member 'ABP_FloorLamp_C::LightColor' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, LightTemperature) == 0x0002E8, "Member 'ABP_FloorLamp_C::LightTemperature' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, Inner_ConeAngle) == 0x0002EC, "Member 'ABP_FloorLamp_C::Inner_ConeAngle' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, Outer_Cone_Angle) == 0x0002F0, "Member 'ABP_FloorLamp_C::Outer_Cone_Angle' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, LightOn) == 0x0002F4, "Member 'ABP_FloorLamp_C::LightOn' has a wrong offset!");
static_assert(offsetof(ABP_FloorLamp_C, UseLight) == 0x0002F5, "Member 'ABP_FloorLamp_C::UseLight' has a wrong offset!");

}

